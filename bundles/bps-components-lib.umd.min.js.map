{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://bps-components-lib/lib/bps-components-lib.service.ts","ng://bps-components-lib/lib/bps-components-lib.component.ts","ng://bps-components-lib/lib/components/bps-input/bps-input.directive.ts","ng://bps-components-lib/lib/components/bps-input/bps-autosize.directive.ts","ng://bps-components-lib/lib/components/bps-input/bps-input-group.component.ts","ng://bps-components-lib/lib/components/bps-select/bps-option.component.ts","ng://bps-components-lib/lib/components/bps-select/bps-option.pipe.ts","ng://bps-components-lib/lib/components/core/enums/CeldType.enum.ts","ng://bps-components-lib/lib/components/bps-select/bps-select.service.ts","ng://bps-components-lib/lib/components/bps-select/bps-option-li.component.ts","ng://bps-components-lib/lib/components/bps-select/bps-option-container.component.ts","ng://bps-components-lib/lib/components/bps-select/bps-option-group.component.ts","ng://bps-components-lib/lib/components/bps-select/bps-select-top-control.component.ts","ng://bps-components-lib/lib/components/bps-select/bps-select.component.ts","ng://bps-components-lib/lib/components/bps-select/bps-select-unselectable.directive.ts","ng://bps-components-lib/lib/components/bps-form/bps-form-explain.component.ts","ng://bps-components-lib/lib/components/bps-form/bps-form-item.component.ts","ng://bps-components-lib/lib/components/bps-form/bps-form-label.component.ts","ng://bps-components-lib/lib/components/bps-form/bps-form.directive.ts","ng://bps-components-lib/lib/components/bps-form/bps-form-control.component.ts","ng://bps-components-lib/lib/components/bps-form/bps-form-extra.component.ts","ng://bps-components-lib/lib/components/bps-form/bps-form-split.component.ts","ng://bps-components-lib/lib/components/bps-form/bps-form-text.component.ts","ng://bps-components-lib/lib/components/bps-button/bps-button.component.ts","ng://bps-components-lib/lib/components/bps-button/bps-button-group.component.ts","ng://bps-components-lib/lib/components/bps-switch/bps-switch.component.ts","ng://bps-components-lib/lib/components/bps-checkbox/bps-checkbox-group.component.ts","ng://bps-components-lib/lib/components/bps-checkbox/bps-checkbox-wrapper.component.ts","ng://bps-components-lib/lib/components/bps-checkbox/bps-checkbox.component.ts","ng://bps-components-lib/lib/components/bps-radio/bps-radio.component.ts","ng://bps-components-lib/lib/components/bps-radio/bps-radio-group.component.ts","ng://bps-components-lib/lib/components/bps-radio/bps-radio-button.component.ts","ng://bps-components-lib/lib/components/bps-collapse/bps-collapse.component.ts","ng://bps-components-lib/lib/components/bps-collapse/bps-collapse-panel.component.ts","ng://bps-components-lib/lib/components/bps-popover/bps-popover.component.ts","ng://bps-components-lib/lib/components/bps-popover/base/nz-tooltip-base.directive.ts","ng://bps-components-lib/lib/components/bps-popover/bps-popover.directive.ts","ng://bps-components-lib/lib/components/bps-tooltip/bps-tooltip.component.ts","ng://bps-components-lib/lib/components/bps-tooltip/bps-tooltip.directive.ts","ng://bps-components-lib/lib/components/bps-list/bps-list.component.ts","ng://bps-components-lib/lib/components/bps-list/bps-list-item-meta.component.ts","ng://bps-components-lib/lib/components/bps-list/bps-list-item.component.ts","ng://bps-components-lib/lib/components/bps-table/bps-table.component.ts","ng://bps-components-lib/lib/components/bps-table-expandable-panel/bps-table-expandable-panel.component.ts","ng://bps-components-lib/lib/components/bps-configuration-selector/bps-configuration-selector.component.ts","ng://bps-components-lib/lib/components/bps-dropdown/bps-dropdown-a.directive.ts","ng://bps-components-lib/lib/components/bps-dropdown/bps-dropdown-menu.component.ts","ng://bps-components-lib/lib/components/bps-dropdown/bps-dropdown.directive.ts","ng://bps-components-lib/lib/components/bps-tree/bps-tree.component.ts","ng://bps-components-lib/lib/components/core/enums/TemplateType.enum.ts","ng://bps-components-lib/lib/components/bps-tree/bps-tree-node.component.ts","ng://bps-components-lib/lib/components/bps-modal/bps-modal-footer.directive.ts","ng://bps-components-lib/lib/components/bps-modal/bps-modal-ref.class.ts","ng://bps-components-lib/lib/components/bps-modal/bps-modal-control.service.ts","ng://bps-components-lib/lib/components/bps-modal/bps-modal-config.ts","ng://bps-components-lib/lib/components/bps-modal/bps-modal.component.ts","ng://bps-components-lib/lib/components/bps-text-editor/bps-text-editor.component.ts","ng://bps-components-lib/lib/components/bps-grid/bps-grid.component.ts","ng://bps-components-lib/lib/bps-components-lib.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__read","o","m","Symbol","iterator","e","ar","next","done","push","value","error","__spread","concat","BpsComponentsLibService","Injectable","providedIn","BpsComponentsLibComponent","ngOnInit","Component","selector","template","BpsInputDirective","renderer","elementRef","bpsSize","disabled","centered","opened","bpsDisabled","addClass","nativeElement","Renderer2","ElementRef","Input","InputBoolean","Directive","exportAs","host","[class.ant-input-disabled]","[class.ant-input-lg]","[class.ant-input-sm]","[class.bps-input-centered]","[class.bps-input-opened]","[class.bps-custom-disabled]","isAutoSizeType","maxRows","minRows","BpsAutosizeDirective","ngZone","platform","nzDomEventService","autosize","el","destroy$","Subject","inputGap","setMaxHeight","setMinHeight","resizeToFitContent","force","_this","cacheTextareaLineHeight","cachedLineHeight","textarea","previousMinRows","previousValue","placeholderText","placeholder","classList","add","height","Math","round","scrollHeight","style","remove","requestAnimationFrame","runOutsideAngular","selectionStart","selectionEnd","isStopped","document","activeElement","setSelectionRange","parentNode","textareaClone","cloneNode","rows","position","visibility","border","padding","minHeight","maxHeight","overflow","appendChild","clientHeight","removeChild","noopInputHandler","ngAfterViewInit","bpsAutosize","isBrowser","registerResizeListener","pipe","takeUntil","finalize","unregisterResizeListener","subscribe","ngOnDestroy","complete","ngDoCheck","NgZone","Platform","NzDomEventService","(input)","BpsInputGroupComponent","_size","bpsSearch","bpsCompact","updateChildrenInputSize","bpsSuffix","bpsPrefix","bpsPrefixIcon","bpsSuffixIcon","bpsAddOnAfter","bpsAddOnBefore","bpsAddOnAfterIcon","bpsAddOnBeforeIcon","isAffix","isAddOn","isGroup","isLarge","isAffixWrapper","isSmall","listOfNzInputDirective","forEach","item","ngAfterContentInit","ContentChildren","preserveWhitespaces","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","[class.ant-input-group-compact]","[class.ant-input-search-enter-button]","[class.ant-input-search]","[class.ant-input-search-sm]","[class.ant-input-affix-wrapper]","[class.ant-input-group-wrapper]","[class.ant-input-group]","[class.ant-input-group-lg]","[class.ant-input-group-wrapper-lg]","[class.ant-input-affix-wrapper-lg]","[class.ant-input-search-lg]","[class.ant-input-group-sm]","[class.ant-input-affix-wrapper-sm]","[class.ant-input-group-wrapper-sm]","BpsOptionComponent","changes","bpsHide","bpsCustomContent","ngOnChanges","ViewChild","TemplateRef","static","BpsFilterOptionPipe","transform","options","searchValue","filterOption","serverSearch","filter","Pipe","name","BpsFilterGroupOptionPipe","groups","g","listOfNzOptionComponent","some","defaultFilterOption","option","bpsLabel","toLowerCase","indexOf","CeldType","BpsSelectService","autoClearSearchValue","mode","maxMultipleCount","Infinity","listOfSelectedValueWithEmit$","BehaviorSubject","emit","mapOfTemplateOption$","listOfNzOptionGroupComponent","searchValueRaw$","listOfFilteredOption","openRaw$","checkRaw$","open","clearInput$","isShowNotFound","animationEvent$","open$","distinctUntilChanged","activatedOption$","ReplaySubject","listOfSelectedValue$","map","data","modelChange$","selectedList","modelValue","isSingleMode","searchValue$","skip","share","tap","updateActivatedOption","updateListOfFilteredOption","listOfSelectedValue","listOfTemplateOption","listOfTagOption","listOfTagAndTemplateOption","listOfCachedSelectedOption","valueOrOption$","combineLatest","_a","mapOfTemplateOption","reduce","pre","cur","toArray","updateListOfTagOption","resetActivatedOptionIfNeeded","updateListOfCachedOption","check$","merge","compareWith","o1","o2","clickOption","isMultipleOrTags","targetValue","find","bpsValue","isNotNil","splice","updateListOfSelectedValue","setOpenState","clearInput","selectedOption","isNil","listOfCachedSelectedOption_1","v","isTagsMode","listOfMissValue","cachedOption","nzOptionComponent","updateAddTagOption","isMatch","addedTagOption","activatedOption","tokenSeparate","inputValue","tokenSeparators","includesSeparators","listOfLabel","splitBySeparators","updateSelectedValueByLabelList","str","separators","lastIndexOf","reg","RegExp","join","array","split","token","from","Set","resetActivatedOption","updateTemplateOption","updateSearchValue","listOfMatchOptionValue","isMultipleMode","listOfUnMatchOptionValue","label","onKeyDown","keyCode","eventTarget","listOfFilteredOptionWithoutDisabledOrHidden","activatedIndex","findIndex","UP_ARROW","preventDefault","preIndex","DOWN_ARROW","nextIndex","ENTER","BACKSPACE","removeValueFormSelected","SPACE","TAB","check","BpsOptionLiComponent","nzSelectService","cdr","selected","active","bpsOption","list","markForCheck","ChangeDetectorRef","[class.ant-select-dropdown-menu-item-selected]","[class.ant-select-dropdown-menu-item-disabled]","[class.ant-select-dropdown-menu-item-active]","[attr.unselectable]","[style.user-select]","(click)","(mousedown)","BpsOptionContainerComponent","lastScrollTop","bpsScrollToBottom","EventEmitter","scrollIntoViewIfNeeded","setTimeout","listOfNzOptionLiComponent","targetOption","trackLabel","_index","trackValue","ul","dropdownUl","fromEvent","stopPropagation","scrollTop","run","pairwise","_b","before","ViewChildren","Output","BpsOptionGroupComponent","isLabelString","BpsSelectTopControlComponent","noAnimation","isComposing","bpsShowSearch","bpsOpen","bpsAllowClear","bpsShowArrow","bpsLoading","bpsTokenSeparators","onClearSelection","setInputValue","inputDOM","updateWidth","mirrorElement","inputElement","showSelectedValue","opacity","display","mirrorDOM","innerText","removeStyle","setStyle","clientWidth","removeSelectedValue","animationEnd","focus","NzNoAnimationDirective","type","Host","Optional","animations","zoomMotion","BpsSelectComponent","onChange","onTouched","dropDownPosition","_disabled","isInit","bpsOnSearch","bpsOpenChange","bpsBlur","bpsFocus","bpsDropdownMatchSelectWidth","bpsAutoFocus","toBoolean","closeDropDown","bpsSelectTopControlElement","updateAutoFocus","bpsSelectTopControlDOM","blur","onFocus","onBlur","event","toggleDropDown","onPositionChange","connectionPair","originY","updateCdkConnectedOverlayStatus","triggerWidth","cdkOverlayOrigin","getBoundingClientRect","width","updateCdkConnectedOverlayPositions","cdkConnectedOverlay","overlayRef","updatePosition","writeValue","listValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","startWith","flatMap","group","EMPTY","CdkOverlayOrigin","CdkConnectedOverlay","read","BpsSelectComponent_1","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","slideMotion","[class.ant-select-lg]","[class.ant-select-sm]","[class.ant-select-enabled]","[class.ant-select-no-arrow]","[class.ant-select-disabled]","[class.ant-select-allow-clear]","[class.ant-select-open]","BpsSelectUnselectableDirective","BpsFormExplainComponent","warnDeprecation","helpMotion","BpsFormItemComponent","_super","nzUpdateHostClassService","mediaMatcher","bpsFlex","withHelpClass","tipsMode","updateFlexStyle","setWithHelpViaTips","listOfNzFormExplainComponent","NzUpdateHostClassService","MediaMatcher","descendants","[class.ant-form-item-with-help]","NzRowDirective","BpsFormLabelComponent","nzFormItemComponent","nzRowDirective","bpsRequired","defaultNoColon","noColon","setDefaultNoColon","NzColDirective","BpsFormDirective","nzConfigService","bpsLayout","setClassMap","updateHostClass","updateItemsDefaultColon","bpsFormLabelComponent","bpsNoColon","NzConfigService","WithConfig","BpsFormControlComponent","_hasFeedback","validateChanges","Subscription","status","controlClassMap","setControlClassMap","FormControl","NgModel","validateControl","validateString","watchControl","FormControlName","control","removeSubscribe","unsubscribe","statusChanges","validateControlStatus","dirty","touched","iconType","hasTips","showErrorTip","bpsHasFeedback","bpsSuccessTip","bpsWarningTip","bpsErrorTip","bpsValidatingTip","showSuccessTip","showWarningTip","showValidatingTip","defaultValidateControl","FormControlDirective","bpsValidateStatus","ContentChild","NgControl","BpsFormExtraComponent","BpsFormSplitComponent","BpsFormTextComponent","BpsButtonComponent","contentObserver","waveConfig","animationType","isSelected","isSelectedChange","showEditionMode","bpsBlock","bpsGhost","bpsComputed","bpsType","bpsValueChange","bpsShape","isInDropdown","iconOnly","clicks","getConfigChangeEventForComponent","sizeMap","large","small","prefixCls","updateIconDisplay","iconElement","checkContent","hasIcon","listOfIconElement","moveIcon","contentElement","isEmpty","destroyed","detectChanges","firstChildElement","findFirstNotEmptyNode","lastChildElement","findLastNotEmptyNode","first","insertBefore","last","$event","stopImmediatePropagation","handleClick","endEditMode","onClick","startEditionMode","select","observe","Promise","resolve","then","ContentObserver","Inject","args","NZ_WAVE_GLOBAL_CONFIG","ANIMATION_MODULE_TYPE","NzIconDirective","HostListener","[class.bps-button-editable-selected]","[class.bps-button-editable-onedition]","BpsButtonGroupComponent","classMap","BpsSwitchComponent","focusMonitor","checked","bpsDual","bpsDualValues","bpsDualValuesChange","bpsControl","hostClick","updateValue","checkNode","nodeA","nodeB","LEFT_ARROW","RIGHT_ARROW","switchElement","focusVia","monitor","focusOrigin","stopMonitoring","FocusMonitor","BpsSwitchComponent_1","BpsCheckboxGroupComponent","onOptionChange","trackByOption","BpsCheckboxGroupComponent_1","BpsCheckboxWrapperComponent","bpsOnChange","checkboxList","addCheckbox","removeCheckbox","outputValue","bpsChecked","BpsCheckboxComponent","bpsCheckboxWrapperComponent","bpsCheckedChange","bpsIndeterminate","innerCheckedChange","setAttribute","removeAttribute","BpsCheckboxComponent_1","BpsRadioComponent","select$","touched$","isNgModel","bpsRadioButtonType","BpsRadioComponent_1","[class.ant-radio-wrapper-checked]","[class.ant-radio-wrapper-disabled]","BpsRadioGroupComponent","bpsButtonStyle","updateChildrenStatus","radios","radio","bpsName","selectSubscription","touchedSubscription","BpsRadioGroupComponent_1","[class.ant-radio-group-large]","[class.ant-radio-group-small]","[class.ant-radio-group-solid]","BpsRadioButtonComponent","removeClass","BpsRadioButtonComponent_1","[class.ant-radio-button-wrapper-checked]","[class.ant-radio-button-wrapper-disabled]","BpsCollapseComponent","listOfNzCollapsePanelComponent","addPanel","removePanel","click","collapse","bpsAccordion","bpsActive","bpsActiveChange","BpsCollapsePanelComponent","bpsCollapseComponent","bpsValid","clickHeader","collapseMotion","[class.ant-collapse-no-arrow]","[class.ant-collapse-item-active]","[class.ant-collapse-item-disabled]","BpsPopoverComponent","_prefix","bpsPopoverType","BpsPopoverComponent_1","zoomBigMotion","NzTooltipBaseComponentLegacy","NzToolTipComponent","NzTooltipBaseDirective","hostView","resolver","_tooltip","nzTrigger","nzPlacement","needProxyProperties","nzVisibleChange","isTooltipComponentVisible","isDynamicTooltip","triggerUnlisteners","$destroy","specificTitle","directiveNameTitle","nzTitle","specificContent","directiveNameContent","nzContent","specificPlacement","popoverType","specificTrigger","trigger","isFirstChange","registerTriggers","tooltip","updateChangedProperties","setOverlayOrigin","createDynamicTooltipComponent","visible","clearTogglingTimer","removeTriggerListeners","tooltipRef","destroy","show","hide","createComponent","componentFactory","instance","location","overlayElement_1","listen","delayEnterLeave","nzMouseEnterDelay","nzMouseLeaveDelay","overlay","overlayElement","propertiesOrChanges","isArray","keys","property","updateComponentValue","title","content","placement","tooltipDisabled","updateByDirective","isOrigin","isEnter","delay","delayTimer","undefined","cancel","clearTimeout","BpsPopoverDirective","resolveComponentFactory","ViewContainerRef","ComponentFactoryResolver","[class.ant-popover-open]","BpsToolTipComponent","bpsTooltipDisabled","BpsToolTipComponent_1","BpsTooltipDirective","[class.ant-tooltip-open]","[class.bps-tooltip-disabled]","BpsListComponent","updateHostClassService","bpsBordered","bpsListType","bpsItemLayout","bpsSplit","itemLayoutNotifySource","_setClassMap","bpsGrid","bpsLoadMore","bpsPagination","bpsFooter","asObservable","BpsListItemMetaComponent","avatarStr","avatarTpl","BpsListItemComponent","parentComp","_onDeleteHover","bpsActions","bpsNoFlex","bpsDelete","ondelete","ondeletehover","hover","itemLayout","bpsExtra","onDeleteHover","onHover","onDelete","itemLayout$","itemLayoutNotify$","val","HostBinding","[class.bps-delete-icon-hovered]","BpsTableComponent","i18n","locale","checkboxCache","mapOfExpandData","_data","editId","editProperty","isExpanded","searchBoxHovered","_searchSubject","frontPagination","total","pageIndex","pageSize","showPagination","paginationPosition","bordered","widthConfig","loading","loadingDelay","scroll","x","y","pageSizeOptions","showQuickJumper","showSizeChanger","hideOnSinglePage","simple","virtualItemSize","virtualMaxBufferPx","virtualMinBufferPx","inlineEdit","pageIndexChange","currentPageDataChange","queryParamsChange","pageSizeChange","onclickRow","ondblclickRow","selectionChange","singleSort","sortChange","configChange","onedit","tableType","expandable","searchValueChange","moreBtnClicked","deleteBtnClicked","expandChange","_setSearchSubscription","updateCheckboxCache","emitOnEditEvent","sort","getFields","sortName","sortValue","editedEl","config","fieldId","index","emitBpsEvent","fields","hidden","debounceTime","updateSearch","searchTextValue","localeChange","getLocaleData","isCeldTypeTemplateRef","field","celdType","isCeldTypeDefault","Default","getTDClassMap","fi","ngClass","isRowSelected","temp","checkItem","clickRow","selectRow","expandRow","startEdit","editRow","selectionOnly","NzI18nService","InputNumber","BpsTableExpandablePanelComponent","virtualScroll","isEqualNode","selectText","NzTableComponent","BpsConfigurationSelectorComponent","currentDisplayedDataIndex","_currentDisplayedData","propertyName","currentDisplayedDataChange","getCurrentElementIndex","currentDisplayedData","getPrevElement","getNextElement","BpsDropDownADirective","dropdownMenuServiceFactory","injector","get","NzMenuDropdownService","BpsDropdownMenuComponent","viewContainerRef","nzMenuDropdownService","visible$","bpsTrigger","bpsPlacement","bpsOverlayClassName","bpsOverlayStyle","bpsTableFilter","setVisibleStateWhen","setValue","NzDropdownHigherOrderServiceToken","useFactory","deps","Self","Injector","BpsDropDownDirective","bpsButtonComponent","bpsButtonGroupComponent","dropdownOpen","positions","DEFAULT_DROPDOWN_POSITIONS","positionSubscription","overlaySubscription","hover$","mapTo","$click","bpsBackdrop","bpsClickHide","bpsVisible","bpsVisibleChange","setDisabled","updateOverlayByVisible","getOverlayConfig","OverlayConfig","positionStrategy","flexibleConnectedTo","withLockedPosition","minWidth","hasBackdrop","backdropClass","scrollStrategy","scrollStrategies","reposition","createOverlay","overlayConfig","getConfig","updateOverlayConfig","subscribeOverlayEvent","subscribeToPositions","dispose","positionChanges","change","bpsDropdownMenu","overlayX","backdropClick","detachments","keydownEvents","ESCAPE","hasModifierKey","getPortal","portal","templateRef","TemplatePortal","openMenu","setPosition","attach","closeMenu","detach","withPositions","updatePositionStrategy","setTriggerWidth","element","bpsMatchWidthElement","initActionSubscribe","hostVisible$","dropdownMenuVisible$","menuClickVisible$","menuItemClick$","supVisible$","subVisible$","menuOpen$","supVisible","subVisible","updateDisabledState","regeneratePosition","POSITION_MAP","Overlay","NzTreeServiceFactory","higherOrderService","treeService","TemplateType","BpsTreeComponent","nzTreeService","bpsShowExpand","bpsShowLine","bpsCheckable","bpsAsyncData","bpsDraggable","bpsSelectMode","bpsCheckStrictly","bpsExpandAll","bpsCustomTree","_bpsDefaultExpandAll","bpsMultiple","bpsExpandedKeysChange","bpsSelectedKeysChange","bpsCheckedKeysChange","bpsSearchValueChange","bpsOnSearchNode","bpsClick","bpsDblClick","bpsContextMenu","bpsCheckBoxChange","bpsExpandChange","bpsOnDragStart","bpsOnDragEnter","bpsOnDragOver","bpsOnDragLeave","bpsOnDrop","bpsOnDragEnd","bpsDefaultSubject","bpsTreeTemplate","bpsTreeTemplateChild","initNzData","_searchValue","searchExpand","formatEvent","rootNodes","bpsShowIcon","bpsBlockNode","isCheckStrictly","isMultiple","initTree","coerceTreeNodes","calcExpandedKeys","bpsNodes","calcSelectedKeys","calcCheckedKeys","eventTriggerChanged","eventName","NzTreeBaseService","BpsTreeComponent_1","NzTreeService","SkipSelf","NzTreeHigherOrderServiceToken","NzTreeBase","BpsTreeNodeComponent","elRef","bpsHideUnMatched","bpsNoAnimation","bpsSearchValue","bpsNodeClass","bpsNodeSwitcherClass","bpsNodeContentClass","bpsNodeCheckboxClass","bpsNodeContentIconClass","bpsNodeContentLoadingClass","dragPos","dragPosClass","0","1","-1","_bpsDraggable","_bpsExpandAll","handDragEvent","bpsTreeNode","isLeaf","icon","isMatched","canHide","isSwitcherOpen","isSwitcherClose","isChecked","isHalfChecked","isLoading","_c","isDisableCheckbox","_d","_e","_f","onMousedown","nzClick","isSelectable","_clickExpand","eventNext","triggerEventChange$","nzDblClick","nzContextMenu","children","setDisplayForParentNodes","setDisplayForChildNodes","node","targetNode","getParentNode","_clickCheckBox","conduct","clearDragClass","dragElement","handleDragStart","dataTransfer","setData","setSelectedNode","handleDragEnter","getSelectedNode","handleDragOver","dropPosition","calcDropPosition","handleDragLeave","handleDragDrop","dropEvent","dragEndEvent","bpsBeforeDrop","dragNode","pos","canDrop","dropAndApply","handleDragEnd","isTemplateRef","setNodeActive","setExpandedNodeList","setCheckedNodeList","component","treeCollapseMotion","BpsModalFooterDirective","nzModalRef","getInstance","setFooterWithTemplate","NzModalRef","BpsModalRef","BpsModalControlService","parentService","rootOpenModals","rootAfterAllClose","rootRegisteredMetaMap","Map","afterAllClose","openModals","registeredMetaMap","registerModal","modalRef","hasRegistered","afterOpenSubscription","afterOpen","afterCloseSubscription","afterClose","removeOpenModal","set","deregisterModal","registeredMeta","delete","has","closeAll","close","NzModalControlServiceModule","NZ_MODAL_CONFIG","InjectionToken","BpsModalComponent","overlayKeyboardDispatcher","cfr","viewContainer","modalControl","focusTrapFactory","bpsModalGlobalConfig","bpsClosable","bpsOkLoading","bpsOkDisabled","bpsCancelDisabled","bpsCancelLoading","bpsKeyboard","bpsModalDisabled","bpsGetContainer","bpsZIndex","bpsWidth","bpsCloseIcon","bpsOkType","bpsIconType","bpsModalType","bpsOnOk","bpsOnCancel","bpsAfterOpen","bpsAfterClose","transformOrigin","unsubscribe$","dialogMouseDown","block","bpsCancelText","cancelText","bpsOkText","okText","animationState","bpsMask","bpsMaskClosable","isComponent","bpsContent","createDynamicComponent","isModalButtons","formatModalButtons","container","HTMLElement","body","keydownListener","OverlayRef","setOverlayRef","handleVisibleStateChange","firstChange","contentComponentRef","bodyContainer","insert","autoFocusButtonOk","changeVisibleFromInside","timeoutId","onClickOkCancel","result","triggerOk","triggerCancel","getContentComponentRef","getContentComponent","getElement","onMaskDialogDown","onDialogUp","onClickMask","mask","maskClosable","contains","isModalType","onClickCloseBtn","ok","loadingKey","caseClose_1","doClose","isPromise","handleThen","catch","isNonEmptyString","Type","animation","closeResult","enable","savePreviouslyFocusedElement","trapFocus","animateTo","restoreFocus","disable","getButtonCallableProp","prop","onButtonClick","button","changeAnimationState","state","maskAnimationClassMap","modalAnimationClassMap","isVisible","updateTransformOrigin","buttons","size","autoLoading","factory","childInjector","useValue","parent","parentInjector","bpsComponentParams","changeDetectorRef","modalElement","modalContainer","previouslyFocusedElement","previouslyDOMRect","lastPosition","getElementOffset","left","top","offsetLeft","offsetTop","focusTrap","focusInitialElementWhenReady","OverlayKeyboardDispatcher","FocusTrapFactory","DOCUMENT","BpsTextEditorComponent","showEditor","lazyLoaded","oninit","onchange","onblur","onkeyup","editorID","statusbar","resize","toolbarmobile","toolbar","initTinyMCE","tinyMceSettings","mobile","theme","plugins","menubar","content_css","image_title","toolbar_location","automatic_uploads","file_picker_types","images_upload_url","setup","editor","on","obj","disableEditor","color_map","tinymce","enableEditor","BpsGridComponent","_columns","_rows","_selection","_latestSelection","onSelectionChange","row","column","selection","previewSelection","newSel","endPreviewSelection","en_US","BpsComponentsLibModule","NgModule","declarations","imports","NzPipesModule","NzHighlightModule","NgZorroAntdModule","CommonModule","NzAddOnModule","NzIconModule","OverlayModule","NzNoAnimationModule","NzToolTipModule","NzOverlayModule","NzEmptyModule","FormsModule","ObserversModule","NzWaveModule","NzSpinModule","NzGridModule","NzAvatarModule","NzTableModule","EditorModule","NzResizableModule","exports","NZ_I18N","ɵ0","entryComponents"],"mappings":"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GACAhB,GACAL,GACAtG,GACAnC,GACAgB,GACAH,GACAhB,GACAH,GACAL,GACAtE,GACAroB,EACAmG,EACA9F,EACA0B,EACAiH,EACAQ,EACAS,EACAmJ,EACAsB,EACAtC,EACAwE,EACAhC,EACA+F,EACA2B,EACA1B,EACAoC,EACAoC,GACArE,EACAe,EACAuD,GACAC,GACAC,GACA0D,GACAE,GACAqB,GACAI,GACAO,GACAQ,GACAQ,GACAY,GACAK,GACAS,GACAoN,GACAK,GACAyY,GACAgC,IAEFgB,QAAS,CACPC,EAAAA,cACAC,EAAAA,kBACAC,EAAAA,kBACAC,EAAAA,aACAC,EAAAA,cACAC,EAAAA,aACAC,EAAAA,cACAC,EAAAA,oBACAC,EAAAA,gBACAC,EAAAA,gBACAC,EAAAA,cACAC,EAAAA,YACAC,EAAAA,gBACAC,EAAAA,aACAC,EAAAA,aACAC,EAAAA,aACAC,EAAAA,eACAC,EAAAA,cACAC,EAAAA,aACAC,EAAAA,mBAEFC,QAAS,CACPrC,GACA1J,GACAjC,GACApI,GACAuD,GACAnI,GACAhB,GACAL,GACAT,GACA7F,GACAnC,GACAgB,GACAH,GACAxB,GACAtE,GACAroB,EACAA,EACAmG,EACA9F,EACA0B,EACAiH,EACAQ,EACAS,EACAmJ,EACAsB,EACAtC,EACAwE,EACAhC,EACA+F,EACA2B,EACA1B,EACAoC,EACAoC,GACArE,EACAe,EACAuD,GACAC,GACAC,GACA0D,GACAE,GACAqB,GACAI,GACAO,GACAQ,GACAQ,GACAY,GACAK,GACAS,GACAsF,GACAH,GACAiI,GACA8Y,IAEFl0B,UAAW,CACT,CAAEC,QAASu4B,EAAAA,QAAS1F,SAAQ2F,KAE9BC,gBAAiB,CACflqB,GACA2E,OAGS4jB,GAAb,IT/OY7U,GAAAA,EAAAA,eAAAA,EAAAA,aAAY,KACpBA,GAAA,KAAA,GAAA,OACAA,GAAAA,GAAA,OAAA,GAAA,SACAA,GAAAA,GAAA,OAAA,GAAA,SACAA,GAAAA,GAAA,OAAA,GAAA,SACAA,GAAAA,GAAA,QAAA,GAAA,UACAA,GAAAA,GAAA,KAAA,GAAA,g9CM0CkC,gDACP","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BpsComponentsLibService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-bps-components-lib',\n  template: `\n    <p>\n      bps-components-lib works!\n    </p>\n  `,\n  styles: []\n})\nexport class BpsComponentsLibComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\nimport { InputBoolean, NzSizeLDSType } from 'ng-zorro-antd/core';\n\n@Directive({\n  selector: '[bps-input]',\n  exportAs: 'bpsInput',\n  host: {\n    '[class.ant-input-disabled]': 'disabled',\n    '[class.ant-input-lg]': `bpsSize === 'large'`,\n    '[class.ant-input-sm]': `bpsSize === 'small'`,\n    '[class.bps-input-centered]': `centered`,\n    '[class.bps-input-opened]': `opened`,\n    '[class.bps-custom-disabled]': `bpsDisabled`,\n  }\n})\nexport class BpsInputDirective {\n  @Input() bpsSize: NzSizeLDSType = 'default';\n  @Input() @InputBoolean() disabled = false;\n  @Input() @InputBoolean() centered = false;\n  @Input() @InputBoolean() opened = false;\n  @Input() @InputBoolean() bpsDisabled = false;\n\n  constructor(renderer: Renderer2, elementRef: ElementRef) {\n    renderer.addClass(elementRef.nativeElement, 'ant-input');\n  }\n}\n","import { Platform } from '@angular/cdk/platform';\nimport { AfterViewInit, Directive, DoCheck, ElementRef, Input, NgZone, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { finalize, takeUntil } from 'rxjs/operators';\n\nimport { NzDomEventService } from 'ng-zorro-antd/core';\n\nexport interface AutoSizeType {\n  minRows?: number;\n  maxRows?: number;\n}\n\nexport function isAutoSizeType(value: string | boolean | AutoSizeType): value is AutoSizeType {\n  return typeof value !== 'string' && typeof value !== 'boolean' && (!!value.maxRows || !!value.minRows);\n}\n\n@Directive({\n  selector: 'textarea[bpsAutosize]',\n  exportAs: 'bpsAutosize',\n  host: {\n    // Textarea elements that have the directive applied should have a single row by default.\n    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n    rows: '1',\n    '(input)': 'noopInputHandler()'\n  }\n})\nexport class BpsAutosizeDirective implements AfterViewInit, OnDestroy, DoCheck {\n  private autosize: boolean | AutoSizeType = false;\n  private el: HTMLTextAreaElement | HTMLInputElement = this.elementRef.nativeElement;\n  private cachedLineHeight: number;\n  private previousValue: string;\n  private previousMinRows: number | undefined;\n  private minRows: number | undefined;\n  private maxRows: number | undefined;\n  private destroy$ = new Subject();\n  private inputGap = 10;\n\n  @Input()\n  set bpsAutosize(value: string | boolean | AutoSizeType) {\n    if (typeof value === 'string') {\n      this.autosize = true;\n    } else if (isAutoSizeType(value)) {\n      this.autosize = value;\n      this.minRows = value.minRows;\n      this.maxRows = value.maxRows;\n      this.setMaxHeight();\n      this.setMinHeight();\n    }\n  }\n\n  get bpsAutosize(): string | boolean | AutoSizeType {\n    return this.autosize;\n  }\n\n  resizeToFitContent(force: boolean = false): void {\n    this.cacheTextareaLineHeight();\n\n    // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n    // in checking the height of the textarea.\n    if (!this.cachedLineHeight) {\n      return;\n    }\n\n    const textarea = this.el as HTMLTextAreaElement;\n    const value = textarea.value;\n\n    // Only resize if the value or minRows have changed since these calculations can be expensive.\n    if (!force && this.minRows === this.previousMinRows && value === this.previousValue) {\n      return;\n    }\n    const placeholderText = textarea.placeholder;\n\n    // Reset the textarea height to auto in order to shrink back to its default size.\n    // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n    // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\n    // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\n    // need to be removed temporarily.\n    textarea.classList.add('cdk-textarea-autosize-measuring');\n    textarea.placeholder = '';\n    const height =\n      Math.round((textarea.scrollHeight - this.inputGap) / this.cachedLineHeight) * this.cachedLineHeight +\n      this.inputGap;\n\n    // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n    textarea.style.height = `${height}px`;\n    textarea.classList.remove('cdk-textarea-autosize-measuring');\n    textarea.placeholder = placeholderText;\n\n    // On Firefox resizing the textarea will prevent it from scrolling to the caret position.\n    // We need to re-set the selection in order for it to scroll to the proper position.\n    if (typeof requestAnimationFrame !== 'undefined') {\n      this.ngZone.runOutsideAngular(() =>\n        requestAnimationFrame(() => {\n          const { selectionStart, selectionEnd } = textarea;\n\n          // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n          // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n          // between the time we requested the animation frame and when it was executed.\n          // Also note that we have to assert that the textarea is focused before we set the\n          // selection range. Setting the selection range on a non-focused textarea will cause\n          // it to receive focus on IE and Edge.\n          if (!this.destroy$.isStopped && document.activeElement === textarea) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n          }\n        })\n      );\n    }\n\n    this.previousValue = value;\n    this.previousMinRows = this.minRows;\n  }\n\n  private cacheTextareaLineHeight(): void {\n    if (this.cachedLineHeight >= 0 || !this.el.parentNode) {\n      return;\n    }\n\n    // Use a clone element because we have to override some styles.\n    const textareaClone = this.el.cloneNode(false) as HTMLTextAreaElement;\n    textareaClone.rows = 1;\n\n    // Use `position: absolute` so that this doesn't cause a browser layout and use\n    // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n    // would affect the height.\n    textareaClone.style.position = 'absolute';\n    textareaClone.style.visibility = 'hidden';\n    textareaClone.style.border = 'none';\n    textareaClone.style.padding = '0';\n    textareaClone.style.height = '';\n    textareaClone.style.minHeight = '';\n    textareaClone.style.maxHeight = '';\n\n    // In Firefox it happens that textarea elements are always bigger than the specified amount\n    // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n    // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n    // to hidden. This ensures that there is no invalid calculation of the line height.\n    // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n    textareaClone.style.overflow = 'hidden';\n\n    this.el.parentNode!.appendChild(textareaClone);\n    this.cachedLineHeight = textareaClone.clientHeight - this.inputGap - 1;\n    this.el.parentNode!.removeChild(textareaClone);\n\n    // Min and max heights have to be re-calculated if the cached line height changes\n    this.setMinHeight();\n    this.setMaxHeight();\n  }\n\n  setMinHeight(): void {\n    const minHeight =\n      this.minRows && this.cachedLineHeight ? `${this.minRows * this.cachedLineHeight + this.inputGap}px` : null;\n\n    if (minHeight) {\n      this.el.style.minHeight = minHeight;\n    }\n  }\n\n  setMaxHeight(): void {\n    const maxHeight =\n      this.maxRows && this.cachedLineHeight ? `${this.maxRows * this.cachedLineHeight + this.inputGap}px` : null;\n\n    if (maxHeight) {\n      this.el.style.maxHeight = maxHeight;\n    }\n  }\n\n  noopInputHandler(): void {\n    // no-op handler that ensures we're running change detection on input events.\n  }\n\n  constructor(\n    private elementRef: ElementRef,\n    private ngZone: NgZone,\n    private platform: Platform,\n    private nzDomEventService: NzDomEventService\n  ) {}\n\n  ngAfterViewInit(): void {\n    if (this.bpsAutosize && this.platform.isBrowser) {\n      this.resizeToFitContent();\n      this.nzDomEventService\n        .registerResizeListener()\n        .pipe(\n          takeUntil(this.destroy$),\n          finalize(() => this.nzDomEventService.unregisterResizeListener())\n        )\n        .subscribe(() => this.resizeToFitContent(true));\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  ngDoCheck(): void {\n    if (this.bpsAutosize && this.platform.isBrowser) {\n      this.resizeToFitContent();\n    }\n  }\n}\n","import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  Input,\n  QueryList,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { InputBoolean, NgClassType, NzSizeLDSType } from 'ng-zorro-antd/core';\nimport { BpsInputDirective } from './bps-input.directive';\n\n@Component({\n  selector: 'bps-input-group',\n  exportAs: 'bpsInputGroup',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './bps-input-group.component.html',\n  host: {\n    '[class.ant-input-group-compact]': 'bpsCompact',\n    '[class.ant-input-search-enter-button]': 'bpsSearch',\n    '[class.ant-input-search]': 'bpsSearch',\n    '[class.ant-input-search-sm]': 'isSmallSearch',\n    '[class.ant-input-affix-wrapper]': 'isAffixWrapper',\n    '[class.ant-input-group-wrapper]': 'isAddOn',\n    '[class.ant-input-group]': 'isGroup',\n    '[class.ant-input-group-lg]': 'isLargeGroup',\n    '[class.ant-input-group-wrapper-lg]': 'isLargeGroupWrapper',\n    '[class.ant-input-affix-wrapper-lg]': 'isLargeAffix',\n    '[class.ant-input-search-lg]': 'isLargeSearch',\n    '[class.ant-input-group-sm]': 'isSmallGroup',\n    '[class.ant-input-affix-wrapper-sm]': 'isSmallAffix',\n    '[class.ant-input-group-wrapper-sm]': 'isSmallGroupWrapper'\n  }\n})\nexport class BpsInputGroupComponent implements AfterContentInit {\n  @ContentChildren(BpsInputDirective) listOfNzInputDirective: QueryList<BpsInputDirective>;\n  private _size: NzSizeLDSType = 'default';\n  @Input() bpsAddOnBeforeIcon: NgClassType;\n  @Input() bpsAddOnAfterIcon: NgClassType;\n  @Input() bpsPrefixIcon: NgClassType;\n  @Input() bpsSuffixIcon: NgClassType;\n  @Input() bpsAddOnBefore: string | TemplateRef<void>;\n  @Input() bpsAddOnAfter: string | TemplateRef<void>;\n  @Input() bpsPrefix: string | TemplateRef<void>;\n  @Input() bpsSuffix: string | TemplateRef<void>;\n  @Input() @InputBoolean() bpsSearch = false;\n  @Input() @InputBoolean() bpsCompact = false;\n\n  @Input() set bpsSize(value: NzSizeLDSType) {\n    this._size = value;\n    this.updateChildrenInputSize();\n  }\n\n  get bpsSize(): NzSizeLDSType {\n    return this._size;\n  }\n\n  get isLarge(): boolean {\n    return this.bpsSize === 'large';\n  }\n\n  get isSmall(): boolean {\n    return this.bpsSize === 'small';\n  }\n\n  get isAffix(): boolean {\n    return !!(this.bpsSuffix || this.bpsPrefix || this.bpsPrefixIcon || this.bpsSuffixIcon);\n  }\n\n  get isAddOn(): boolean {\n    return !!(this.bpsAddOnAfter || this.bpsAddOnBefore || this.bpsAddOnAfterIcon || this.bpsAddOnBeforeIcon);\n  }\n\n  get isAffixWrapper(): boolean {\n    return this.isAffix && !this.isAddOn;\n  }\n\n  get isGroup(): boolean {\n    return !this.isAffix && !this.isAddOn;\n  }\n\n  get isLargeGroup(): boolean {\n    return this.isGroup && this.isLarge;\n  }\n\n  get isLargeGroupWrapper(): boolean {\n    return this.isAddOn && this.isLarge;\n  }\n\n  get isLargeAffix(): boolean {\n    return this.isAffixWrapper && this.isLarge;\n  }\n\n  get isLargeSearch(): boolean {\n    return this.bpsSearch && this.isLarge;\n  }\n\n  get isSmallGroup(): boolean {\n    return this.isGroup && this.isSmall;\n  }\n\n  get isSmallAffix(): boolean {\n    return this.isAffixWrapper && this.isSmall;\n  }\n\n  get isSmallGroupWrapper(): boolean {\n    return this.isAddOn && this.isSmall;\n  }\n\n  get isSmallSearch(): boolean {\n    return this.bpsSearch && this.isSmall;\n  }\n\n  updateChildrenInputSize(): void {\n    if (this.listOfNzInputDirective) {\n      this.listOfNzInputDirective.forEach(item => (item.bpsSize = this.bpsSize));\n    }\n  }\n\n  ngAfterContentInit(): void {\n    this.updateChildrenInputSize();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnChanges,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { InputBoolean } from 'ng-zorro-antd/core';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'bps-option',\n  exportAs: 'bpsOption',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './bps-option.component.html'\n})\nexport class BpsOptionComponent implements OnChanges {\n  changes = new Subject();\n  @ViewChild(TemplateRef, { static: false }) template: TemplateRef<void>;\n  @Input() bpsLabel: string;\n  // tslint:disable-next-line:no-any\n  @Input() bpsValue: any;\n  @Input() @InputBoolean() bpsDisabled = false;\n  @Input() @InputBoolean() bpsHide = false;\n  @Input() @InputBoolean() bpsCustomContent = false;\n\n  ngOnChanges(): void {\n    this.changes.next();\n  }\n}\n","import { Pipe, PipeTransform, QueryList } from '@angular/core';\nimport { BpsOptionGroupComponent } from './bps-option-group.component';\nimport { BpsOptionComponent } from './bps-option.component';\n\nexport type TFilterOption = (input: string, option: BpsOptionComponent) => boolean;\n\n@Pipe({ name: 'bpsFilterOption' })\nexport class BpsFilterOptionPipe implements PipeTransform {\n  transform(\n    options: BpsOptionComponent[] | QueryList<BpsOptionComponent>,\n    searchValue: string,\n    filterOption: TFilterOption,\n    serverSearch: boolean\n  ): BpsOptionComponent[] {\n    if (serverSearch || !searchValue) {\n      return options as BpsOptionComponent[];\n    } else {\n      return (options as BpsOptionComponent[]).filter(o => filterOption(searchValue, o));\n    }\n  }\n}\n\n@Pipe({ name: 'bpsFilterGroupOption' })\nexport class BpsFilterGroupOptionPipe implements PipeTransform {\n  transform(\n    groups: BpsOptionGroupComponent[],\n    searchValue: string,\n    filterOption: TFilterOption,\n    serverSearch: boolean\n  ): BpsOptionGroupComponent[] {\n    if (serverSearch || !searchValue) {\n      return groups;\n    } else {\n      return (groups as BpsOptionGroupComponent[]).filter(g => {\n        return g.listOfNzOptionComponent.some(o => filterOption(searchValue, o));\n      });\n    }\n  }\n}\n\nexport function defaultFilterOption(searchValue: string, option: BpsOptionComponent): boolean {\n  if (option && option.bpsLabel) {\n    return option.bpsLabel.toLowerCase().indexOf(searchValue.toLowerCase()) > -1;\n  } else {\n    return false;\n  }\n}\n","export enum CeldType {\r\n    Default,\r\n    TemplateRef\r\n}\r\n","import { BACKSPACE, DOWN_ARROW, ENTER, SPACE, TAB, UP_ARROW } from '@angular/cdk/keycodes';\nimport { Injectable } from '@angular/core';\nimport { combineLatest, merge, BehaviorSubject, ReplaySubject, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, share, skip, tap } from 'rxjs/operators';\n\nimport { isNil, isNotNil } from 'ng-zorro-antd/core';\n\nimport { BpsOptionGroupComponent } from './bps-option-group.component';\nimport { BpsOptionComponent } from './bps-option.component';\nimport { defaultFilterOption, BpsFilterOptionPipe, TFilterOption } from './bps-option.pipe';\n\n@Injectable()\nexport class BpsSelectService {\n\n  get isSingleMode(): boolean {\n    return this.mode === 'default';\n  }\n\n  get isTagsMode(): boolean {\n    return this.mode === 'tags';\n  }\n\n  get isMultipleMode(): boolean {\n    return this.mode === 'multiple';\n  }\n\n  get isMultipleOrTags(): boolean {\n    return this.mode === 'tags' || this.mode === 'multiple';\n  }\n  // tslint:disable-next-line:jsdoc-format\n  /** Input params **/\n  autoClearSearchValue = true;\n  serverSearch = false;\n  filterOption: TFilterOption = defaultFilterOption;\n  mode: 'default' | 'multiple' | 'tags' = 'default';\n  maxMultipleCount = Infinity;\n  disabled = false;\n  // tslint:disable-next-line:jsdoc-format\n  /** selectedValueChanged should emit ngModelChange or not **/\n  // tslint:disable-next-line:no-any\n  private listOfSelectedValueWithEmit$ = new BehaviorSubject<{ value: any[]; emit: boolean }>({\n    value: [],\n    emit: false\n  });\n  // tslint:disable-next-line:jsdoc-format\n  /** ContentChildren Change **/\n  private mapOfTemplateOption$ = new BehaviorSubject<{\n    listOfNzOptionComponent: BpsOptionComponent[];\n    listOfNzOptionGroupComponent: BpsOptionGroupComponent[];\n  }>({\n    listOfNzOptionComponent: [],\n    listOfNzOptionGroupComponent: []\n  });\n  // tslint:disable-next-line:jsdoc-format\n  /** searchValue Change **/\n  private searchValueRaw$ = new BehaviorSubject<string>('');\n  private listOfFilteredOption: BpsOptionComponent[] = [];\n  private openRaw$ = new Subject<boolean>();\n  private checkRaw$ = new Subject();\n  private open = false;\n  clearInput$ = new Subject<boolean>();\n  searchValue = '';\n  isShowNotFound = false;\n  // tslint:disable-next-line:jsdoc-format\n  /** animation event **/\n  animationEvent$ = new Subject();\n  // tslint:disable-next-line:jsdoc-format\n  /** open event **/\n  open$ = this.openRaw$.pipe(distinctUntilChanged());\n  activatedOption: BpsOptionComponent | null;\n  activatedOption$ = new ReplaySubject<BpsOptionComponent | null>(1);\n  listOfSelectedValue$ = this.listOfSelectedValueWithEmit$.pipe(map(data => data.value));\n  modelChange$ = this.listOfSelectedValueWithEmit$.pipe(\n    filter(item => item.emit),\n    map(data => {\n      const selectedList = data.value;\n      let modelValue: any[] | null = null; // tslint:disable-line:no-any\n      if (this.isSingleMode) {\n        if (selectedList.length) {\n          modelValue = selectedList[0];\n        }\n      } else {\n        modelValue = selectedList;\n      }\n      return modelValue;\n    })\n  );\n  searchValue$ = this.searchValueRaw$.pipe(\n    distinctUntilChanged(),\n    skip(1),\n    share(),\n    tap(value => {\n      this.searchValue = value;\n      if (value) {\n        this.updateActivatedOption(this.listOfFilteredOption[0]);\n      }\n      this.updateListOfFilteredOption();\n    })\n  );\n  // tslint:disable-next-line:no-any\n  listOfSelectedValue: any[] = [];\n  // tslint:disable-next-line:jsdoc-format\n  /** flat ViewChildren **/\n  listOfTemplateOption: BpsOptionComponent[] = [];\n  // tslint:disable-next-line:jsdoc-format\n  /** tag option **/\n  listOfTagOption: BpsOptionComponent[] = [];\n  // tslint:disable-next-line:jsdoc-format\n  /** tag option concat template option **/\n  listOfTagAndTemplateOption: BpsOptionComponent[] = [];\n  // tslint:disable-next-line:jsdoc-format\n  /** ViewChildren **/\n  listOfNzOptionComponent: BpsOptionComponent[] = [];\n  listOfNzOptionGroupComponent: BpsOptionGroupComponent[] = [];\n  // tslint:disable-next-line:jsdoc-format\n  /** click or enter add tag option **/\n  addedTagOption: BpsOptionComponent | null;\n  // tslint:disable-next-line:jsdoc-format\n  /** display in top control **/\n  listOfCachedSelectedOption: BpsOptionComponent[] = [];\n  // tslint:disable-next-line:jsdoc-format\n  /** selected value or ViewChildren change **/\n  valueOrOption$ = combineLatest([this.listOfSelectedValue$, this.mapOfTemplateOption$]).pipe(\n    tap(data => {\n      const [listOfSelectedValue, mapOfTemplateOption] = data;\n      this.listOfSelectedValue = listOfSelectedValue;\n      this.listOfNzOptionComponent = mapOfTemplateOption.listOfNzOptionComponent;\n      this.listOfNzOptionGroupComponent = mapOfTemplateOption.listOfNzOptionGroupComponent;\n      this.listOfTemplateOption = this.listOfNzOptionComponent.concat(\n        this.listOfNzOptionGroupComponent.reduce(\n          (pre, cur) => [...pre, ...cur.listOfNzOptionComponent.toArray()],\n          [] as BpsOptionComponent[]\n        )\n      );\n      this.updateListOfTagOption();\n      this.updateListOfFilteredOption();\n      this.resetActivatedOptionIfNeeded();\n      this.updateListOfCachedOption();\n    }),\n    share()\n  );\n  check$ = merge(\n    this.checkRaw$,\n    this.valueOrOption$,\n    this.searchValue$,\n    this.activatedOption$,\n    this.open$,\n    this.modelChange$\n  ).pipe(share());\n  // tslint:disable-next-line:no-any\n  compareWith = (o1: any, o2: any) => o1 === o2;\n\n  clickOption(option: BpsOptionComponent): void {\n    // tslint:disable-next-line:jsdoc-format\n    /** update listOfSelectedOption -> update listOfSelectedValue -> next listOfSelectedValue$ **/\n    if (!option.bpsDisabled) {\n      this.updateActivatedOption(option);\n      let listOfSelectedValue = [...this.listOfSelectedValue];\n      if (this.isMultipleOrTags) {\n        const targetValue = listOfSelectedValue.find(o => this.compareWith(o, option.bpsValue));\n        if (isNotNil(targetValue)) {\n          listOfSelectedValue.splice(listOfSelectedValue.indexOf(targetValue), 1);\n          this.updateListOfSelectedValue(listOfSelectedValue, true);\n        } else if (listOfSelectedValue.length < this.maxMultipleCount) {\n          listOfSelectedValue.push(option.bpsValue);\n          this.updateListOfSelectedValue(listOfSelectedValue, true);\n        }\n      } else if (!this.compareWith(listOfSelectedValue[0], option.bpsValue)) {\n        listOfSelectedValue = [option.bpsValue];\n        this.updateListOfSelectedValue(listOfSelectedValue, true);\n      }\n      if (this.isSingleMode) {\n        this.setOpenState(false);\n      } else if (this.autoClearSearchValue) {\n        this.clearInput();\n      }\n    }\n  }\n\n  updateListOfCachedOption(): void {\n    if (this.isSingleMode) {\n      const selectedOption = this.listOfTemplateOption.find(o =>\n        this.compareWith(o.bpsValue, this.listOfSelectedValue[0])\n      );\n      if (!isNil(selectedOption)) {\n        this.listOfCachedSelectedOption = [selectedOption];\n      }\n    } else {\n      const listOfCachedSelectedOption: BpsOptionComponent[] = [];\n      this.listOfSelectedValue.forEach(v => {\n        const listOfMixedOption = [...this.listOfTagAndTemplateOption, ...this.listOfCachedSelectedOption];\n        const option = listOfMixedOption.find(o => this.compareWith(o.bpsValue, v));\n        if (option) {\n          listOfCachedSelectedOption.push(option);\n        }\n      });\n      this.listOfCachedSelectedOption = listOfCachedSelectedOption;\n    }\n  }\n\n  updateListOfTagOption(): void {\n    if (this.isTagsMode) {\n      const listOfMissValue = this.listOfSelectedValue.filter(\n        value => !this.listOfTemplateOption.find(o => this.compareWith(o.bpsValue, value))\n      );\n      this.listOfTagOption = listOfMissValue.map(value => {\n        const cachedOption = this.listOfCachedSelectedOption.find(o => this.compareWith(o.bpsValue, value));\n        if (cachedOption) {\n          return cachedOption;\n        } else {\n          const nzOptionComponent = new BpsOptionComponent();\n          nzOptionComponent.bpsValue = value;\n          nzOptionComponent.bpsLabel = value;\n          return nzOptionComponent;\n        }\n      });\n      this.listOfTagAndTemplateOption = [...this.listOfTemplateOption.concat(this.listOfTagOption)];\n    } else {\n      this.listOfTagAndTemplateOption = [...this.listOfTemplateOption];\n    }\n  }\n\n  updateAddTagOption(): void {\n    const isMatch = this.listOfTagAndTemplateOption.find(item => item.bpsLabel === this.searchValue);\n    if (this.isTagsMode && this.searchValue && !isMatch) {\n      const option = new BpsOptionComponent();\n      option.bpsValue = this.searchValue;\n      option.bpsLabel = this.searchValue;\n      this.addedTagOption = option;\n      this.updateActivatedOption(option);\n    } else {\n      this.addedTagOption = null;\n    }\n  }\n\n  updateListOfFilteredOption(): void {\n    this.updateAddTagOption();\n    const listOfFilteredOption = new BpsFilterOptionPipe().transform(\n      this.listOfTagAndTemplateOption,\n      this.searchValue,\n      this.filterOption,\n      this.serverSearch\n    );\n    this.listOfFilteredOption = this.addedTagOption\n      ? [this.addedTagOption, ...listOfFilteredOption]\n      : [...listOfFilteredOption];\n    this.isShowNotFound = !this.isTagsMode && !this.listOfFilteredOption.length;\n  }\n\n  clearInput(): void {\n    this.clearInput$.next();\n  }\n\n  // tslint:disable-next-line:no-any\n  updateListOfSelectedValue(value: any[], emit: boolean): void {\n    this.listOfSelectedValueWithEmit$.next({ value, emit });\n  }\n\n  updateActivatedOption(option: BpsOptionComponent | null): void {\n    this.activatedOption$.next(option);\n    this.activatedOption = option;\n  }\n\n  tokenSeparate(inputValue: string, tokenSeparators: string[]): void {\n    // tslint:disable-next-line:jsdoc-format\n    /** auto tokenSeparators **/\n    if (\n      inputValue &&\n      inputValue.length &&\n      tokenSeparators.length &&\n      this.isMultipleOrTags &&\n      this.includesSeparators(inputValue, tokenSeparators)\n    ) {\n      const listOfLabel = this.splitBySeparators(inputValue, tokenSeparators);\n      this.updateSelectedValueByLabelList(listOfLabel);\n      this.clearInput();\n    }\n  }\n\n  includesSeparators(str: string | string[], separators: string[]): boolean {\n    // tslint:disable-next-line:prefer-for-of\n    for (let i = 0; i < separators.length; ++i) {\n      if (str.lastIndexOf(separators[i]) > 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  splitBySeparators(str: string | string[], separators: string[]): string[] {\n    const reg = new RegExp(`[${separators.join()}]`);\n    const array = (str as string).split(reg).filter(token => token);\n    return Array.from(new Set(array));\n  }\n\n  resetActivatedOptionIfNeeded(): void {\n    const resetActivatedOption = () => {\n      const activatedOption = this.listOfFilteredOption.find(item =>\n        this.compareWith(item.bpsValue, this.listOfSelectedValue[0])\n      );\n      this.updateActivatedOption(activatedOption || null);\n    };\n    if (this.activatedOption) {\n      if (\n        // tslint:disable-next-line:no-non-null-assertion\n        !this.listOfFilteredOption.find(item => this.compareWith(item.bpsValue, this.activatedOption!.bpsValue)) ||\n        // tslint:disable-next-line:no-non-null-assertion\n        !this.listOfSelectedValue.find(item => this.compareWith(item, this.activatedOption!.bpsValue))\n      ) {\n        resetActivatedOption();\n      }\n    } else {\n      resetActivatedOption();\n    }\n  }\n\n  updateTemplateOption(\n    listOfNzOptionComponent: BpsOptionComponent[],\n    listOfNzOptionGroupComponent: BpsOptionGroupComponent[]\n  ): void {\n    this.mapOfTemplateOption$.next({ listOfNzOptionComponent, listOfNzOptionGroupComponent });\n  }\n\n  updateSearchValue(value: string): void {\n    this.searchValueRaw$.next(value);\n  }\n\n  updateSelectedValueByLabelList(listOfLabel: string[]): void {\n    const listOfSelectedValue = [...this.listOfSelectedValue];\n    const listOfMatchOptionValue = this.listOfTagAndTemplateOption\n      .filter(item => listOfLabel.indexOf(item.bpsLabel) !== -1)\n      .map(item => item.bpsValue)\n      .filter(item => !isNotNil(this.listOfSelectedValue.find(v => this.compareWith(v, item))));\n    if (this.isMultipleMode) {\n      this.updateListOfSelectedValue([...listOfSelectedValue, ...listOfMatchOptionValue], true);\n    } else {\n      const listOfUnMatchOptionValue = listOfLabel.filter(\n        label => this.listOfTagAndTemplateOption.map(item => item.bpsLabel).indexOf(label) === -1\n      );\n      this.updateListOfSelectedValue(\n        [...listOfSelectedValue, ...listOfMatchOptionValue, ...listOfUnMatchOptionValue],\n        true\n      );\n    }\n  }\n\n  onKeyDown(e: KeyboardEvent): void {\n    if (this.disabled) {\n      return;\n    }\n    const keyCode = e.keyCode;\n    const eventTarget = e.target as HTMLInputElement;\n    const listOfFilteredOptionWithoutDisabledOrHidden = this.listOfFilteredOption.filter(\n      item => !item.bpsDisabled && !item.bpsHide\n    );\n    const activatedIndex = listOfFilteredOptionWithoutDisabledOrHidden.findIndex(item => item === this.activatedOption);\n    switch (keyCode) {\n      case UP_ARROW:\n        e.preventDefault();\n        const preIndex =\n          activatedIndex > 0 ? activatedIndex - 1 : listOfFilteredOptionWithoutDisabledOrHidden.length - 1;\n        this.updateActivatedOption(listOfFilteredOptionWithoutDisabledOrHidden[preIndex]);\n        break;\n      case DOWN_ARROW:\n        e.preventDefault();\n        const nextIndex =\n          activatedIndex < listOfFilteredOptionWithoutDisabledOrHidden.length - 1 ? activatedIndex + 1 : 0;\n        this.updateActivatedOption(listOfFilteredOptionWithoutDisabledOrHidden[nextIndex]);\n        if (!this.disabled && !this.open) {\n          this.setOpenState(true);\n        }\n        break;\n      case ENTER:\n        e.preventDefault();\n        if (this.open) {\n          if (this.activatedOption && !this.activatedOption.bpsDisabled) {\n            this.clickOption(this.activatedOption);\n          }\n        } else {\n          this.setOpenState(true);\n        }\n        break;\n      case BACKSPACE:\n        if (this.isMultipleOrTags && !eventTarget.value && this.listOfCachedSelectedOption.length) {\n          e.preventDefault();\n          this.removeValueFormSelected(this.listOfCachedSelectedOption[this.listOfCachedSelectedOption.length - 1]);\n        }\n        break;\n      case SPACE:\n        if (!this.disabled && !this.open) {\n          this.setOpenState(true);\n          e.preventDefault();\n        }\n        break;\n      case TAB:\n        this.setOpenState(false);\n        break;\n    }\n  }\n\n  // tslint:disable-next-line:no-any\n  removeValueFormSelected(option: BpsOptionComponent): void {\n    if (this.disabled || option.bpsDisabled) {\n      return;\n    }\n    const listOfSelectedValue = this.listOfSelectedValue.filter(item => !this.compareWith(item, option.bpsValue));\n    this.updateListOfSelectedValue(listOfSelectedValue, true);\n    this.clearInput();\n  }\n\n  setOpenState(value: boolean): void {\n    this.openRaw$.next(value);\n    this.open = value;\n  }\n\n  check(): void {\n    this.checkRaw$.next();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { isNotNil } from 'ng-zorro-antd/core';\n\nimport { BpsOptionComponent } from './bps-option.component';\nimport { BpsSelectService } from './bps-select.service';\n\n@Component({\n  selector: '[bps-option-li]',\n  exportAs: 'bpsOptionLi',\n  templateUrl: './bps-option-li.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    '[class.ant-select-dropdown-menu-item-selected]': 'selected && !bpsOption.bpsDisabled',\n    '[class.ant-select-dropdown-menu-item-disabled]': 'bpsOption.bpsDisabled',\n    '[class.ant-select-dropdown-menu-item-active]': 'active && !bpsOption.bpsDisabled',\n    '[attr.unselectable]': '\"unselectable\"',\n    '[style.user-select]': '\"none\"',\n    '(click)': 'clickOption()',\n    '(mousedown)': '$event.preventDefault()'\n  }\n})\nexport class BpsOptionLiComponent implements OnInit, OnDestroy {\n  el: HTMLElement = this.elementRef.nativeElement;\n  selected = false;\n  active = false;\n  destroy$ = new Subject();\n  @Input() bpsOption: BpsOptionComponent;\n  @Input() bpsMenuItemSelectedIcon: TemplateRef<void>;\n\n  clickOption(): void {\n    this.nzSelectService.clickOption(this.bpsOption);\n  }\n\n  constructor(\n    private elementRef: ElementRef,\n    public nzSelectService: BpsSelectService,\n    private cdr: ChangeDetectorRef,\n    renderer: Renderer2\n  ) {\n    renderer.addClass(elementRef.nativeElement, 'ant-select-dropdown-menu-item');\n  }\n\n  ngOnInit(): void {\n    this.nzSelectService.listOfSelectedValue$.pipe(takeUntil(this.destroy$)).subscribe(list => {\n      this.selected = isNotNil(list.find(v => this.nzSelectService.compareWith(v, this.bpsOption.bpsValue)));\n      this.cdr.markForCheck();\n    });\n    this.nzSelectService.activatedOption$.pipe(takeUntil(this.destroy$)).subscribe(option => {\n      if (option) {\n        this.active = this.nzSelectService.compareWith(option.bpsValue, this.bpsOption.bpsValue);\n      } else {\n        this.active = false;\n      }\n      this.cdr.markForCheck();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation\n} from '@angular/core';\nimport { fromEvent, Subject } from 'rxjs';\nimport { filter, map, pairwise, takeUntil } from 'rxjs/operators';\nimport { BpsOptionGroupComponent } from './bps-option-group.component';\nimport { BpsOptionLiComponent } from './bps-option-li.component';\nimport { BpsOptionComponent } from './bps-option.component';\nimport { BpsSelectService } from './bps-select.service';\n\n@Component({\n  selector: '[bps-option-container]',\n  exportAs: 'bpsOptionContainer',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  templateUrl: './bps-option-container.component.html'\n})\nexport class BpsOptionContainerComponent implements OnDestroy, OnInit, AfterViewInit {\n  private destroy$ = new Subject();\n  private lastScrollTop = 0;\n  @ViewChildren(BpsOptionLiComponent) listOfNzOptionLiComponent: QueryList<BpsOptionLiComponent>;\n  @ViewChild('dropdownUl', { static: true }) dropdownUl: ElementRef<HTMLUListElement>;\n  @Input() bpsNotFoundContent: string;\n  @Input() bpsMenuItemSelectedIcon: TemplateRef<void>;\n  @Output() readonly bpsScrollToBottom = new EventEmitter<void>();\n\n  scrollIntoViewIfNeeded(option: BpsOptionComponent): void {\n    // delay after open\n    setTimeout(() => {\n      if (this.listOfNzOptionLiComponent && this.listOfNzOptionLiComponent.length && option) {\n        const targetOption = this.listOfNzOptionLiComponent.find(o =>\n          this.nzSelectService.compareWith(o.bpsOption.bpsValue, option.bpsValue)\n        );\n        // tslint:disable:no-any\n        if (targetOption && targetOption.el && (targetOption.el as any).scrollIntoViewIfNeeded) {\n          (targetOption.el as any).scrollIntoViewIfNeeded(false);\n        }\n      }\n    });\n  }\n\n  trackLabel(_index: number, option: BpsOptionGroupComponent): string | TemplateRef<void> {\n    return option.bpsLabel;\n  }\n\n  // tslint:disable-next-line:no-any\n  trackValue(_index: number, option: BpsOptionComponent): any {\n    return option.bpsValue;\n  }\n\n  constructor(public nzSelectService: BpsSelectService, private cdr: ChangeDetectorRef, private ngZone: NgZone) {}\n\n  ngOnInit(): void {\n    this.nzSelectService.activatedOption$.pipe(takeUntil(this.destroy$)).subscribe(option => {\n      this.scrollIntoViewIfNeeded(option!);\n    });\n    this.nzSelectService.check$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.cdr.markForCheck();\n    });\n    this.ngZone.runOutsideAngular(() => {\n      const ul = this.dropdownUl.nativeElement;\n      fromEvent<MouseEvent>(ul, 'scroll')\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(e => {\n          e.preventDefault();\n          e.stopPropagation();\n          if (ul && ul.scrollTop > this.lastScrollTop && ul.scrollHeight < ul.clientHeight + ul.scrollTop + 10) {\n            this.lastScrollTop = ul.scrollTop;\n            this.ngZone.run(() => {\n              this.bpsScrollToBottom.emit();\n            });\n          }\n        });\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.listOfNzOptionLiComponent.changes\n      .pipe(\n        map(list => list.length),\n        pairwise(),\n        filter(([before, after]) => after < before),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(() => (this.lastScrollTop = 0));\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  Input,\n  QueryList,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { BpsOptionComponent } from './bps-option.component';\n\n@Component({\n  selector: 'bps-option-group',\n  exportAs: 'bpsOptionGroup',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './bps-option-group.component.html'\n})\nexport class BpsOptionGroupComponent {\n  isLabelString = false;\n  label: string | TemplateRef<void>;\n  @ContentChildren(BpsOptionComponent) listOfNzOptionComponent: QueryList<BpsOptionComponent>;\n\n  @Input()\n  set bpsLabel(value: string | TemplateRef<void>) {\n    this.label = value;\n    this.isLabelString = !(this.bpsLabel instanceof TemplateRef);\n  }\n\n  get bpsLabel(): string | TemplateRef<void> {\n    return this.label;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Host,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Renderer2,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { zoomMotion, NzNoAnimationDirective } from 'ng-zorro-antd/core';\n\nimport { BpsOptionComponent } from './bps-option.component';\nimport { BpsSelectService } from './bps-select.service';\n\n@Component({\n  selector: '[bps-select-top-control]',\n  exportAs: 'bpsSelectTopControl',\n  preserveWhitespaces: false,\n  animations: [zoomMotion],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: './bps-select-top-control.component.html'\n})\nexport class BpsSelectTopControlComponent implements OnInit, OnDestroy {\n  inputValue: string;\n  isComposing = false;\n  private destroy$ = new Subject();\n  @ViewChild('inputElement', { static: false }) inputElement: ElementRef;\n  @ViewChild('mirrorElement', { static: false }) mirrorElement: ElementRef;\n  @Input() bpsShowSearch = false;\n  @Input() bpsPlaceHolder: string;\n  @Input() bpsOpen = false;\n  @Input() bpsMaxTagCount: number;\n  @Input() bpsAllowClear = false;\n  @Input() bpsShowArrow = true;\n  @Input() bpsLoading = false;\n  @Input() bpsCustomTemplate: TemplateRef<{ $implicit: BpsOptionComponent }>;\n  @Input() bpsSuffixIcon: TemplateRef<void>;\n  @Input() bpsClearIcon: TemplateRef<void>;\n  @Input() bpsRemoveIcon: TemplateRef<void>;\n  // tslint:disable-next-line:no-any\n  @Input() bpsMaxTagPlaceholder: TemplateRef<{ $implicit: any[] }>;\n  @Input() bpsTokenSeparators: string[] = [];\n\n  onClearSelection(e: MouseEvent): void {\n    e.stopPropagation();\n    this.nzSelectService.updateListOfSelectedValue([], true);\n  }\n\n  setInputValue(value: string): void {\n    /** fix clear value https://github.com/NG-ZORRO/ng-zorro-antd/issues/3825 **/\n    if (this.inputDOM && !value) {\n      this.inputDOM.value = value;\n    }\n    this.inputValue = value;\n    this.updateWidth();\n    this.nzSelectService.updateSearchValue(value);\n    this.nzSelectService.tokenSeparate(this.inputValue, this.bpsTokenSeparators);\n  }\n\n  get mirrorDOM(): HTMLElement {\n    return this.mirrorElement && this.mirrorElement.nativeElement;\n  }\n\n  get inputDOM(): HTMLInputElement {\n    return this.inputElement && this.inputElement.nativeElement;\n  }\n\n  get placeHolderDisplay(): string {\n    return this.inputValue || this.isComposing || this.nzSelectService.listOfSelectedValue.length ? 'none' : 'block';\n  }\n\n  get selectedValueStyle(): { [key: string]: string } {\n    let showSelectedValue = false;\n    let opacity = 1;\n    if (!this.bpsShowSearch) {\n      showSelectedValue = true;\n    } else {\n      if (this.bpsOpen) {\n        showSelectedValue = !(this.inputValue || this.isComposing);\n        if (showSelectedValue) {\n          opacity = 0.4;\n        }\n      } else {\n        showSelectedValue = true;\n      }\n    }\n    return {\n      display: showSelectedValue ? 'block' : 'none',\n      opacity: `${opacity}`\n    };\n  }\n\n  // tslint:disable-next-line:no-any\n  trackValue(_index: number, option: BpsOptionComponent): any {\n    return option.bpsValue;\n  }\n\n  updateWidth(): void {\n    if (this.mirrorDOM && this.inputDOM && this.inputDOM.value) {\n      this.mirrorDOM.innerText = `${this.inputDOM.value}&nbsp;`;\n      this.renderer.removeStyle(this.inputDOM, 'width');\n      this.renderer.setStyle(this.inputDOM, 'width', `${this.mirrorDOM.clientWidth}px`);\n    } else if (this.inputDOM) {\n      this.renderer.removeStyle(this.inputDOM, 'width');\n      this.mirrorDOM.innerText = '';\n    }\n  }\n\n  removeSelectedValue(option: BpsOptionComponent, e: MouseEvent): void {\n    this.nzSelectService.removeValueFormSelected(option);\n    e.stopPropagation();\n  }\n\n  animationEnd(): void {\n    this.nzSelectService.animationEvent$.next();\n  }\n\n  constructor(\n    private renderer: Renderer2,\n    public nzSelectService: BpsSelectService,\n    private cdr: ChangeDetectorRef,\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective\n  ) {}\n\n  ngOnInit(): void {\n    this.nzSelectService.open$.pipe(takeUntil(this.destroy$)).subscribe(open => {\n      if (this.inputElement && open) {\n        setTimeout(() => this.inputDOM.focus());\n      }\n    });\n    this.nzSelectService.clearInput$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.setInputValue('');\n    });\n    this.nzSelectService.check$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.cdr.markForCheck();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import { CdkConnectedOverlay, CdkOverlayOrigin, ConnectedOverlayPositionChange } from '@angular/cdk/overlay';\nimport { Platform } from '@angular/cdk/platform';\nimport {\n  forwardRef,\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Host,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  QueryList,\n  Renderer2,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { merge, EMPTY, Subject } from 'rxjs';\nimport { flatMap, startWith, takeUntil } from 'rxjs/operators';\n\nimport {\n  isNotNil,\n  slideMotion,\n  toBoolean,\n  InputBoolean,\n  NzNoAnimationDirective,\n  NzSizeLDSType\n} from 'ng-zorro-antd/core';\n\nimport { BpsOptionGroupComponent } from './bps-option-group.component';\nimport { BpsOptionComponent } from './bps-option.component';\nimport { TFilterOption } from './bps-option.pipe';\nimport { BpsSelectTopControlComponent } from './bps-select-top-control.component';\nimport { BpsSelectService } from './bps-select.service';\n\n@Component({\n  selector: 'bps-select',\n  exportAs: 'bpsSelect',\n  preserveWhitespaces: false,\n  providers: [\n    BpsSelectService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => BpsSelectComponent),\n      multi: true\n    }\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  animations: [slideMotion],\n  templateUrl: './bps-select.component.html',\n  styleUrls: ['./bps-select.component.css'],\n  host: {\n    '[class.ant-select-lg]': 'bpsSize===\"large\"',\n    '[class.ant-select-sm]': 'bpsSize===\"small\"',\n    '[class.ant-select-enabled]': '!bpsDisabled',\n    '[class.ant-select-no-arrow]': '!bpsShowArrow',\n    '[class.ant-select-disabled]': 'bpsDisabled',\n    '[class.ant-select-allow-clear]': 'bpsAllowClear',\n    '[class.ant-select-open]': 'open',\n    '(click)': 'toggleDropDown()'\n  },\n  styles: [\n    `\n      .ant-select-dropdown {\n        top: 100%;\n        left: 0;\n        position: relative;\n        width: 100%;\n        margin-top: 4px;\n        margin-bottom: 4px;\n      }\n    `\n  ]\n})\nexport class BpsSelectComponent implements ControlValueAccessor, OnInit, AfterViewInit, OnDestroy, AfterContentInit {\n  open = false;\n  // tslint:disable-next-line:no-any\n  value: any | any[];\n  onChange: (value: string | string[]) => void = () => null;\n  onTouched: () => void = () => null;\n  dropDownPosition: 'top' | 'center' | 'bottom' = 'bottom';\n  triggerWidth: number;\n  private _disabled = false;\n  private isInit = false;\n  private destroy$ = new Subject();\n  @ViewChild(CdkOverlayOrigin, { static: false }) cdkOverlayOrigin: CdkOverlayOrigin;\n  @ViewChild(CdkConnectedOverlay, { static: false }) cdkConnectedOverlay: CdkConnectedOverlay;\n  @ViewChild(BpsSelectTopControlComponent, { static: true }) bpsSelectTopControlComponent: BpsSelectTopControlComponent;\n  @ViewChild(BpsSelectTopControlComponent, { static: true, read: ElementRef }) bpsSelectTopControlElement: ElementRef;\n  /** should move to nz-option-container when https://github.com/angular/angular/issues/20810 resolved **/\n  @ContentChildren(BpsOptionComponent) listOfNzOptionComponent: QueryList<BpsOptionComponent>;\n  @ContentChildren(BpsOptionGroupComponent) listOfNzOptionGroupComponent: QueryList<BpsOptionGroupComponent>;\n  @Output() readonly bpsOnSearch = new EventEmitter<string>();\n  @Output() readonly bpsScrollToBottom = new EventEmitter<void>();\n  @Output() readonly bpsOpenChange = new EventEmitter<boolean>();\n  @Output() readonly bpsBlur = new EventEmitter<void>();\n  @Output() readonly bpsFocus = new EventEmitter<void>();\n  @Input() bpsSize: NzSizeLDSType = 'default';\n  @Input() bpsDropdownClassName: string;\n  @Input() bpsDropdownMatchSelectWidth = true;\n  @Input() bpsDropdownStyle: { [key: string]: string };\n  @Input() bpsNotFoundContent: string;\n  @Input() @InputBoolean() bpsAllowClear = false;\n  @Input() @InputBoolean() bpsShowSearch = false;\n  @Input() @InputBoolean() bpsLoading = false;\n  @Input() @InputBoolean() bpsAutoFocus = false;\n  @Input() bpsPlaceHolder: string;\n  @Input() bpsMaxTagCount: number;\n  @Input() bpsDropdownRender: TemplateRef<void>;\n  @Input() bpsCustomTemplate: TemplateRef<{ $implicit: BpsOptionComponent }>;\n  @Input() bpsSuffixIcon: TemplateRef<void>;\n  @Input() bpsClearIcon: TemplateRef<void>;\n  @Input() bpsRemoveIcon: TemplateRef<void>;\n  @Input() bpsMenuItemSelectedIcon: TemplateRef<void>;\n  @Input() bpsShowArrow = true;\n  @Input() bpsTokenSeparators: string[] = [];\n  // tslint:disable-next-line:no-any\n  @Input() bpsMaxTagPlaceholder: TemplateRef<{ $implicit: any[] }>;\n\n  @Input()\n  set bpsAutoClearSearchValue(value: boolean) {\n    this.nzSelectService.autoClearSearchValue = toBoolean(value);\n  }\n\n  @Input()\n  set bpsMaxMultipleCount(value: number) {\n    this.nzSelectService.maxMultipleCount = value;\n  }\n\n  @Input()\n  set bpsServerSearch(value: boolean) {\n    this.nzSelectService.serverSearch = toBoolean(value);\n  }\n\n  @Input()\n  set bpsMode(value: 'default' | 'multiple' | 'tags') {\n    this.nzSelectService.mode = value;\n    this.nzSelectService.check();\n  }\n\n  @Input()\n  set bpsFilterOption(value: TFilterOption) {\n    this.nzSelectService.filterOption = value;\n  }\n\n  @Input()\n  // tslint:disable-next-line:no-any\n  set compareWith(value: (o1: any, o2: any) => boolean) {\n    this.nzSelectService.compareWith = value;\n  }\n\n  @Input()\n  set bpsOpen(value: boolean) {\n    this.open = value;\n    this.nzSelectService.setOpenState(value);\n  }\n\n  @Input()\n  set bpsDisabled(value: boolean) {\n    this._disabled = toBoolean(value);\n    this.nzSelectService.disabled = this._disabled;\n    this.nzSelectService.check();\n    if (this.bpsDisabled && this.isInit) {\n      this.closeDropDown();\n    }\n  }\n\n  get bpsDisabled(): boolean {\n    return this._disabled;\n  }\n\n  get bpsSelectTopControlDOM(): HTMLElement {\n    return this.bpsSelectTopControlElement && this.bpsSelectTopControlElement.nativeElement;\n  }\n\n  updateAutoFocus(): void {\n    if (this.bpsSelectTopControlDOM && this.bpsAutoFocus) {\n      this.bpsSelectTopControlDOM.focus();\n    }\n  }\n\n  focus(): void {\n    if (this.bpsSelectTopControlDOM) {\n      this.bpsSelectTopControlDOM.focus();\n    }\n  }\n\n  blur(): void {\n    if (this.bpsSelectTopControlDOM) {\n      this.bpsSelectTopControlDOM.blur();\n    }\n  }\n\n  onFocus(): void {\n    this.bpsFocus.emit();\n  }\n\n  onBlur(): void {\n    this.bpsBlur.emit();\n  }\n\n  onKeyDown(event: KeyboardEvent): void {\n    this.nzSelectService.onKeyDown(event);\n  }\n\n  toggleDropDown(): void {\n    if (!this.bpsDisabled) {\n      this.nzSelectService.setOpenState(!this.open);\n    }\n  }\n\n  closeDropDown(): void {\n    this.nzSelectService.setOpenState(false);\n  }\n\n  onPositionChange(position: ConnectedOverlayPositionChange): void {\n    this.dropDownPosition = position.connectionPair.originY;\n  }\n\n  updateCdkConnectedOverlayStatus(): void {\n    if (this.platform.isBrowser) {\n      this.triggerWidth = this.cdkOverlayOrigin.elementRef.nativeElement.getBoundingClientRect().width;\n    }\n  }\n\n  updateCdkConnectedOverlayPositions(): void {\n    setTimeout(() => {\n      if (this.cdkConnectedOverlay && this.cdkConnectedOverlay.overlayRef) {\n        this.cdkConnectedOverlay.overlayRef.updatePosition();\n      }\n    });\n  }\n\n  constructor(\n    renderer: Renderer2,\n    public nzSelectService: BpsSelectService,\n    private cdr: ChangeDetectorRef,\n    private platform: Platform,\n    elementRef: ElementRef,\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective\n  ) {\n    renderer.addClass(elementRef.nativeElement, 'ant-select');\n  }\n\n  /** update ngModel -> update listOfSelectedValue **/\n  // tslint:disable-next-line:no-any\n  writeValue(value: any | any[]): void {\n    this.value = value;\n    let listValue: any[] = []; // tslint:disable-line:no-any\n    if (isNotNil(value)) {\n      if (this.nzSelectService.isMultipleOrTags) {\n        listValue = value;\n      } else {\n        listValue = [value];\n      }\n    }\n    this.nzSelectService.updateListOfSelectedValue(listValue, false);\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: (value: string | string[]) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.bpsDisabled = isDisabled;\n    this.cdr.markForCheck();\n  }\n\n  ngOnInit(): void {\n    this.nzSelectService.animationEvent$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => this.updateCdkConnectedOverlayPositions());\n    this.nzSelectService.searchValue$.pipe(takeUntil(this.destroy$)).subscribe(data => {\n      this.bpsOnSearch.emit(data);\n      this.updateCdkConnectedOverlayPositions();\n    });\n    this.nzSelectService.modelChange$.pipe(takeUntil(this.destroy$)).subscribe(modelValue => {\n      if (this.value !== modelValue) {\n        this.value = modelValue;\n        this.onChange(this.value);\n      }\n    });\n    this.nzSelectService.open$.pipe(takeUntil(this.destroy$)).subscribe(value => {\n      if (this.open !== value) {\n        this.bpsOpenChange.emit(value);\n      }\n      if (value) {\n        this.focus();\n        this.updateCdkConnectedOverlayStatus();\n      } else {\n        this.blur();\n        this.onTouched();\n      }\n      this.open = value;\n      this.nzSelectService.clearInput();\n    });\n    this.nzSelectService.check$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.cdr.markForCheck();\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.updateCdkConnectedOverlayStatus();\n    this.updateAutoFocus();\n    this.isInit = true;\n  }\n\n  ngAfterContentInit(): void {\n    this.listOfNzOptionGroupComponent.changes\n      .pipe(\n        startWith(true),\n        flatMap(() =>\n          merge(\n            this.listOfNzOptionGroupComponent.changes,\n            this.listOfNzOptionComponent.changes,\n            ...this.listOfNzOptionComponent.map(option => option.changes),\n            ...this.listOfNzOptionGroupComponent.map(group =>\n              group.listOfNzOptionComponent ? group.listOfNzOptionComponent.changes : EMPTY\n            )\n          ).pipe(startWith(true))\n        )\n      )\n      .subscribe(() => {\n        this.nzSelectService.updateTemplateOption(\n          this.listOfNzOptionComponent.toArray(),\n          this.listOfNzOptionGroupComponent.toArray()\n        );\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[bps-select-unselectable]',\n  exportAs: 'bpsSelectUnselectable',\n  host: {\n    '[attr.unselectable]': '\"unselectable\"',\n    '[style.user-select]': '\"none\"'\n  }\n})\nexport class BpsSelectUnselectableDirective {}\n","import { ChangeDetectionStrategy, Component, ElementRef, Renderer2, ViewEncapsulation } from '@angular/core';\r\nimport { helpMotion, warnDeprecation } from 'ng-zorro-antd/core';\r\n\r\n@Component({\r\n  selector: 'bps-form-explain',\r\n  exportAs: 'bpsFormExplain',\r\n  preserveWhitespaces: false,\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [helpMotion],\r\n  templateUrl: './bps-form-explain.component.html',\r\n  styles: [\r\n    `\r\n      bps-form-explain {\r\n        display: block;\r\n      }\r\n    `\r\n  ]\r\n})\r\n/**\r\n * @deprecated Use `[bpsSuccessTip] | [bpsWarningTip] | [bpsErrorTip] | [bpsValidatingTip]` in `bpsFormControlComponent` instead, will remove in 9.0.0.\r\n */\r\nexport class BpsFormExplainComponent {\r\n  constructor(public elementRef: ElementRef, private renderer: Renderer2) {\r\n    this.renderer.addClass(this.elementRef.nativeElement, 'ant-form-explain');\r\n    warnDeprecation(\r\n      `'bps-form-explain' is going to be removed in 9.0.0. Use [bpsSuccessTip] | [bpsWarningTip] | [bpsErrorTip] | [bpsValidatingTip] in bps-form-control instead. Read https://ng.ant.design/components/form/en`\r\n    );\r\n  }\r\n}\r\n","import { MediaMatcher } from '@angular/cdk/layout';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  ElementRef,\r\n  Input,\r\n  NgZone,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  QueryList,\r\n  Renderer2,\r\n  SimpleChanges,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { startWith, takeUntil } from 'rxjs/operators';\r\n\r\nimport { InputBoolean, NzDomEventService, NzUpdateHostClassService } from 'ng-zorro-antd/core';\r\nimport { NzRowDirective } from 'ng-zorro-antd/grid';\r\n\r\nimport { BpsFormExplainComponent } from './bps-form-explain.component';\r\n\r\n/** should add nz-row directive to host, track https://github.com/angular/angular/issues/8785 **/\r\n@Component({\r\n  selector: 'bps-form-item',\r\n  exportAs: 'bpsFormItem',\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  providers: [NzUpdateHostClassService],\r\n  templateUrl: './bps-form-item.component.html',\r\n  host: {\r\n    '[class.ant-form-item-with-help]': 'withHelpClass'\r\n  },\r\n  styles: [\r\n    `\r\n      bps-form-item {\r\n        display: block;\r\n      }\r\n    `\r\n  ]\r\n})\r\nexport class BpsFormItemComponent extends NzRowDirective\r\n  implements AfterContentInit, OnDestroy, OnChanges, OnInit, OnDestroy {\r\n  @Input() @InputBoolean() bpsFlex: boolean = false;\r\n  @ContentChildren(BpsFormExplainComponent, { descendants: true })\r\n  listOfNzFormExplainComponent: QueryList<BpsFormExplainComponent>;\r\n  withHelpClass = false;\r\n  tipsMode = false;\r\n\r\n  updateFlexStyle(): void {\r\n    if (this.bpsFlex) {\r\n      this.renderer.setStyle(this.elementRef.nativeElement, 'display', 'flex');\r\n    } else {\r\n      this.renderer.removeStyle(this.elementRef.nativeElement, 'display');\r\n    }\r\n  }\r\n\r\n  setWithHelpViaTips(value: boolean): void {\r\n    this.tipsMode = true;\r\n    this.withHelpClass = value;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  constructor(\r\n    elementRef: ElementRef,\r\n    renderer: Renderer2,\r\n    nzUpdateHostClassService: NzUpdateHostClassService,\r\n    mediaMatcher: MediaMatcher,\r\n    ngZone: NgZone,\r\n    platform: Platform,\r\n    nzDomEventService: NzDomEventService,\r\n    private cdr: ChangeDetectorRef\r\n  ) {\r\n    super(elementRef, renderer, nzUpdateHostClassService, mediaMatcher, ngZone, platform, nzDomEventService);\r\n    renderer.addClass(elementRef.nativeElement, 'ant-form-item');\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    if (!this.tipsMode) {\r\n      this.listOfNzFormExplainComponent.changes\r\n        .pipe(\r\n          startWith(true),\r\n          takeUntil(this.destroy$)\r\n        )\r\n        .subscribe(() => {\r\n          this.withHelpClass = this.listOfNzFormExplainComponent && this.listOfNzFormExplainComponent.length > 0;\r\n          this.cdr.markForCheck();\r\n        });\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n\r\n    this.updateFlexStyle();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    super.ngOnChanges(changes);\r\n    if (changes.hasOwnProperty('bpsFlex')) {\r\n      this.updateFlexStyle();\r\n    }\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  Host,\r\n  Input,\r\n  OnDestroy,\r\n  Optional,\r\n  Renderer2,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\n\r\nimport { toBoolean, InputBoolean, NzUpdateHostClassService } from 'ng-zorro-antd/core';\r\nimport { NzColDirective, NzRowDirective } from 'ng-zorro-antd/grid';\r\n\r\nimport { BpsFormItemComponent } from './bps-form-item.component';\r\n\r\n@Component({\r\n  selector: 'bps-form-label',\r\n  exportAs: 'bpsFormLabel',\r\n  providers: [NzUpdateHostClassService],\r\n  preserveWhitespaces: false,\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  templateUrl: './bps-form-label.component.html'\r\n})\r\nexport class BpsFormLabelComponent extends NzColDirective implements OnDestroy, AfterViewInit {\r\n  @Input() bpsFor: string;\r\n  @Input() @InputBoolean() bpsRequired = false;\r\n  @Input()\r\n  set bpsNoColon(value: boolean) {\r\n    this.noColon = toBoolean(value);\r\n  }\r\n  get bpsNoColon(): boolean {\r\n    return !!this.noColon;\r\n  }\r\n\r\n  defaultNoColon: boolean = false;\r\n  noColon: boolean | string = 'default';\r\n\r\n  constructor(\r\n    nzUpdateHostClassService: NzUpdateHostClassService,\r\n    elementRef: ElementRef,\r\n    @Optional() @Host() nzFormItemComponent: BpsFormItemComponent,\r\n    @Optional() @Host() nzRowDirective: NzRowDirective,\r\n    renderer: Renderer2,\r\n    private cdr: ChangeDetectorRef\r\n  ) {\r\n    super(nzUpdateHostClassService, elementRef, nzFormItemComponent || nzRowDirective, renderer);\r\n    renderer.addClass(elementRef.nativeElement, 'ant-form-item-label');\r\n  }\r\n\r\n  setDefaultNoColon(value: boolean): void {\r\n    this.defaultNoColon = toBoolean(value);\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    super.ngAfterViewInit();\r\n  }\r\n}\r\n","import {\r\n  AfterContentInit,\r\n  ContentChildren,\r\n  Directive,\r\n  ElementRef,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  QueryList,\r\n  Renderer2,\r\n  SimpleChanges\r\n} from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { startWith, takeUntil } from 'rxjs/operators';\r\n\r\nimport { InputBoolean, NzConfigService, NzUpdateHostClassService, WithConfig } from 'ng-zorro-antd/core';\r\n\r\nimport { BpsFormLabelComponent } from './bps-form-label.component';\r\n\r\nconst NZ_CONFIG_COMPONENT_NAME = 'form';\r\n\r\n@Directive({\r\n  selector: '[bps-form]',\r\n  exportAs: 'bpsForm',\r\n  providers: [NzUpdateHostClassService]\r\n})\r\nexport class BpsFormDirective implements OnInit, OnChanges, AfterContentInit, OnDestroy {\r\n  @Input() bpsLayout = 'horizontal';\r\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME, false) @InputBoolean() bpsNoColon: boolean;\r\n\r\n  @ContentChildren(BpsFormLabelComponent, { descendants: true }) bpsFormLabelComponent: QueryList<BpsFormLabelComponent>;\r\n\r\n  destroy$ = new Subject();\r\n\r\n  setClassMap(): void {\r\n    this.nzUpdateHostClassService.updateHostClass(this.elementRef.nativeElement, {\r\n      [`ant-form-${this.bpsLayout}`]: this.bpsLayout\r\n    });\r\n  }\r\n\r\n  updateItemsDefaultColon(): void {\r\n    if (this.bpsFormLabelComponent) {\r\n      this.bpsFormLabelComponent.forEach(item => item.setDefaultNoColon(this.bpsNoColon));\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    public nzConfigService: NzConfigService,\r\n    private elementRef: ElementRef,\r\n    private renderer: Renderer2,\r\n    private nzUpdateHostClassService: NzUpdateHostClassService\r\n  ) {\r\n    this.renderer.addClass(elementRef.nativeElement, 'ant-form');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setClassMap();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.setClassMap();\r\n    if (changes.hasOwnProperty('bpsNoColon')) {\r\n      this.updateItemsDefaultColon();\r\n    }\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.bpsFormLabelComponent.changes\r\n      .pipe(\r\n        startWith(null),\r\n        takeUntil(this.destroy$)\r\n      )\r\n      .subscribe(() => {\r\n        this.updateItemsDefaultColon();\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n}\r\n","import {\r\n  AfterContentInit,\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  ElementRef,\r\n  Host,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Renderer2,\r\n  TemplateRef,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { FormControl, FormControlDirective, FormControlName, NgControl, NgModel } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { startWith } from 'rxjs/operators';\r\n\r\nimport { helpMotion, toBoolean, NgClassType, NzUpdateHostClassService } from 'ng-zorro-antd/core';\r\nimport { NzColDirective, NzRowDirective } from 'ng-zorro-antd/grid';\r\nimport { BpsFormItemComponent } from './bps-form-item.component';\r\n\r\nexport type NzFormControlStatusType = 'warning' | 'validating' | 'error' | 'success' | null;\r\n\r\n@Component({\r\n  selector: 'bps-form-control',\r\n  exportAs: 'bpsFormControl',\r\n  preserveWhitespaces: false,\r\n  animations: [helpMotion],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [NzUpdateHostClassService],\r\n  templateUrl: './bps-form-control.component.html',\r\n  styles: [\r\n    `\r\n      bps-form-control {\r\n        display: block;\r\n      }\r\n      form .has-feedback .ant-input-suffix i {\r\n        margin-right: 18px;\r\n      }\r\n    `\r\n  ]\r\n})\r\nexport class BpsFormControlComponent extends NzColDirective\r\n  implements OnDestroy, OnInit, AfterContentInit, AfterViewInit, OnDestroy {\r\n  private _hasFeedback = false;\r\n  private validateChanges: Subscription = Subscription.EMPTY;\r\n  private validateString: string | null;\r\n  validateControl: FormControl | NgModel | null;\r\n  status: NzFormControlStatusType = null;\r\n  controlClassMap: NgClassType = {};\r\n  iconType: string;\r\n  @ContentChild(NgControl, { static: false }) defaultValidateControl: FormControlName | FormControlDirective;\r\n  @Input() bpsSuccessTip: string | TemplateRef<{ $implicit: FormControl | NgModel }>;\r\n  @Input() bpsWarningTip: string | TemplateRef<{ $implicit: FormControl | NgModel }>;\r\n  @Input() bpsErrorTip: string | TemplateRef<{ $implicit: FormControl | NgModel }>;\r\n  @Input() bpsValidatingTip: string | TemplateRef<{ $implicit: FormControl | NgModel }>;\r\n  @Input() bpsExtra: string | TemplateRef<void>;\r\n\r\n  @Input()\r\n  set bpsHasFeedback(value: boolean) {\r\n    this._hasFeedback = toBoolean(value);\r\n    this.setControlClassMap();\r\n  }\r\n\r\n  get bpsHasFeedback(): boolean {\r\n    return this._hasFeedback;\r\n  }\r\n\r\n  @Input()\r\n  set bpsValidateStatus(value: string | FormControl | FormControlName | NgModel) {\r\n    if (value instanceof FormControl || value instanceof NgModel) {\r\n      this.validateControl = value;\r\n      this.validateString = null;\r\n      this.watchControl();\r\n    } else if (value instanceof FormControlName) {\r\n      this.validateControl = value.control;\r\n      this.validateString = null;\r\n      this.watchControl();\r\n    } else {\r\n      this.validateString = value;\r\n      this.validateControl = null;\r\n      this.setControlClassMap();\r\n    }\r\n  }\r\n\r\n  removeSubscribe(): void {\r\n    this.validateChanges.unsubscribe();\r\n  }\r\n\r\n  watchControl(): void {\r\n    this.removeSubscribe();\r\n    /** miss detect https://github.com/angular/angular/issues/10887 **/\r\n    if (this.validateControl && this.validateControl.statusChanges) {\r\n      this.validateChanges = this.validateControl.statusChanges.pipe(startWith(null)).subscribe(() => {\r\n        this.setControlClassMap();\r\n        this.cdr.markForCheck();\r\n      });\r\n    }\r\n  }\r\n\r\n  validateControlStatus(status: string): boolean {\r\n    return (!!this.validateControl &&\r\n      (this.validateControl.dirty || this.validateControl.touched) &&\r\n      this.validateControl.status === status) as boolean;\r\n  }\r\n\r\n  setControlClassMap(): void {\r\n    if (this.validateString === 'warning') {\r\n      this.status = 'warning';\r\n      this.iconType = 'exclamation-circle-fill';\r\n    } else if (\r\n      this.validateString === 'validating' ||\r\n      this.validateString === 'pending' ||\r\n      this.validateControlStatus('PENDING')\r\n    ) {\r\n      this.status = 'validating';\r\n      this.iconType = 'loading';\r\n    } else if (this.validateString === 'error' || this.validateControlStatus('INVALID')) {\r\n      this.status = 'error';\r\n      this.iconType = 'close-circle-fill';\r\n    } else if (this.validateString === 'success' || this.validateControlStatus('VALID')) {\r\n      this.status = 'success';\r\n      this.iconType = 'check-circle-fill';\r\n    } else {\r\n      this.status = null;\r\n      this.iconType = '';\r\n    }\r\n    if (this.hasTips) {\r\n      this.nzFormItemComponent.setWithHelpViaTips(this.showErrorTip);\r\n    }\r\n    this.controlClassMap = {\r\n      [`has-warning`]: this.status === 'warning',\r\n      [`is-validating`]: this.status === 'validating',\r\n      [`has-error`]: this.status === 'error',\r\n      [`has-success`]: this.status === 'success',\r\n      [`has-feedback`]: this.bpsHasFeedback && this.status\r\n    };\r\n  }\r\n\r\n  get hasTips(): boolean {\r\n    return !!(this.bpsSuccessTip || this.bpsWarningTip || this.bpsErrorTip || this.bpsValidatingTip);\r\n  }\r\n\r\n  get showSuccessTip(): boolean {\r\n    return this.status === 'success' && !!this.bpsSuccessTip;\r\n  }\r\n\r\n  get showWarningTip(): boolean {\r\n    return this.status === 'warning' && !!this.bpsWarningTip;\r\n  }\r\n\r\n  get showErrorTip(): boolean {\r\n    return this.status === 'error' && !!this.bpsErrorTip;\r\n  }\r\n\r\n  get showValidatingTip(): boolean {\r\n    return this.status === 'validating' && !!this.bpsValidatingTip;\r\n  }\r\n\r\n  get showInnerTip(): boolean {\r\n    return this.showSuccessTip || this.showWarningTip || this.showErrorTip || this.showValidatingTip;\r\n  }\r\n\r\n  constructor(\r\n    nzUpdateHostClassService: NzUpdateHostClassService,\r\n    elementRef: ElementRef,\r\n    @Optional() @Host() private nzFormItemComponent: BpsFormItemComponent,\r\n    @Optional() @Host() nzRowDirective: NzRowDirective,\r\n    private cdr: ChangeDetectorRef,\r\n    renderer: Renderer2\r\n  ) {\r\n    super(nzUpdateHostClassService, elementRef, nzFormItemComponent || nzRowDirective, renderer);\r\n    renderer.addClass(elementRef.nativeElement, 'ant-form-item-control-wrapper');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.setControlClassMap();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.removeSubscribe();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    if (!this.validateControl && !this.validateString) {\r\n      if (this.defaultValidateControl instanceof FormControlDirective) {\r\n        this.bpsValidateStatus = this.defaultValidateControl.control;\r\n      } else {\r\n        this.bpsValidateStatus = this.defaultValidateControl;\r\n      }\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    super.ngAfterViewInit();\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, ElementRef, Renderer2, ViewEncapsulation } from '@angular/core';\r\nimport { warnDeprecation } from 'ng-zorro-antd/core';\r\n\r\n@Component({\r\n  selector: 'bps-form-extra',\r\n  exportAs: 'bpsFormExtra',\r\n  templateUrl: './bps-form-extra.component.html',\r\n  preserveWhitespaces: false,\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styles: [\r\n    `\r\n      bps-form-extra {\r\n        display: block;\r\n      }\r\n    `\r\n  ]\r\n})\r\n/**\r\n * @deprecated Use `[bpsExtra]` in `BpsFormControlComponent` instead, will remove in 9.0.0.\r\n */\r\nexport class BpsFormExtraComponent {\r\n  constructor(public elementRef: ElementRef, private renderer: Renderer2) {\r\n    this.renderer.addClass(this.elementRef.nativeElement, 'ant-form-extra');\r\n    warnDeprecation(\r\n      `'bps-form-extra' is going to be removed in 9.0.0. Use [bpsExtra] in bps-form-control instead. Read https://ng.ant.design/components/form/en`\r\n    );\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, ElementRef, Renderer2, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'bps-form-split',\r\n  exportAs: 'bpsFormSplit',\r\n  preserveWhitespaces: false,\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  templateUrl: './bps-form-split.component.html'\r\n})\r\nexport class BpsFormSplitComponent {\r\n  constructor(public elementRef: ElementRef, private renderer: Renderer2) {\r\n    this.renderer.addClass(this.elementRef.nativeElement, 'ant-form-split');\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, ElementRef, Renderer2, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'bps-form-text',\r\n  exportAs: 'bpsFormText',\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  templateUrl: './bps-form-text.component.html'\r\n})\r\nexport class BpsFormTextComponent {\r\n  constructor(public elementRef: ElementRef, private renderer: Renderer2) {\r\n    this.renderer.addClass(this.elementRef.nativeElement, 'ant-form-text');\r\n  }\r\n}\r\n","import { ContentObserver } from '@angular/cdk/observers';\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  ElementRef,\r\n  HostBinding,\r\n  Inject,\r\n  Input,\r\n  NgZone,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  QueryList,\r\n  Renderer2,\r\n  SimpleChanges,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n  ViewRef,\r\n  HostListener,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\r\n\r\nimport {\r\n  findFirstNotEmptyNode,\r\n  findLastNotEmptyNode,\r\n  isEmpty,\r\n  InputBoolean,\r\n  NzConfigService,\r\n  NzSizeLDSType,\r\n  NzSizeMap,\r\n  NzUpdateHostClassService,\r\n  NzWaveConfig,\r\n  NzWaveDirective,\r\n  NZ_WAVE_GLOBAL_CONFIG,\r\n  WithConfig\r\n} from 'ng-zorro-antd/core';\r\nimport { NzIconDirective } from 'ng-zorro-antd/icon';\r\nimport { Subject } from 'rxjs';\r\nimport { startWith, takeUntil } from 'rxjs/operators';\r\nimport { BpsInputDirective } from '../bps-input/bps-input.directive';\r\n\r\nexport type NzButtonType = 'primary' | 'dashed' | 'danger' | 'default' | 'link' | 'variation-1' | 'variation-2' | 'variation-3'\r\n  | 'variation-4' | 'variation-5' | 'variation-6' | 'variation-7' | 'variation-8' | 'variation-9' | 'variation-10' | 'variation-11'\r\n  | 'variation-12'  | 'variation-13' | 'variation-14' | 'variation-15' | 'variation-16' | 'variation-17' | 'variation-18' | 'variation-19' | 'variation-20' | 'editable';\r\nexport type NzButtonShape = 'circle' | 'round' | null;\r\n\r\nconst NZ_CONFIG_COMPONENT_NAME = 'button';\r\n\r\n@Component({\r\n  selector: '[bps-button]',\r\n  exportAs: 'bpsButton',\r\n  providers: [NzUpdateHostClassService],\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  templateUrl: './bps-button.component.html',\r\n  styleUrls: ['./bps-button.component.css'],\r\n  host: {\r\n    '[class.bps-button-editable-selected]': 'isSelected',\r\n    '[class.bps-button-editable-onedition]': 'showEditionMode'\r\n  }\r\n})\r\nexport class BpsButtonComponent implements AfterContentInit, OnInit, OnDestroy, OnChanges {\r\n  @Input() @InputBoolean() isSelected = false;\r\n  @Output() isSelectedChange: EventEmitter<any> = new EventEmitter<any>();\r\n  showEditionMode = false;\r\n\r\n  @ViewChild('contentElement', { static: true }) contentElement: ElementRef;\r\n  @ContentChildren(NzIconDirective, { read: ElementRef }) listOfIconElement: QueryList<ElementRef>;\r\n  /*@HostBinding('attr.nz-wave') nzWave = new NzWaveDirective(\r\n    this.ngZone,\r\n    this.elementRef,\r\n    this.waveConfig,\r\n    this.animationType\r\n  );*/\r\n\r\n  @Input() @InputBoolean() bpsBlock: boolean = false;\r\n  @Input() @InputBoolean() bpsGhost: boolean = false;\r\n  @Input() @InputBoolean() bpsSearch: boolean = false;\r\n  @Input() @InputBoolean() bpsComputed: boolean = false;\r\n  @Input() @InputBoolean() bpsLoading: boolean = false;\r\n  @Input() bpsType: NzButtonType = 'default';\r\n  @Input() bpsValue: string = '';\r\n  @Output() bpsValueChange: EventEmitter<any> = new EventEmitter<any>();\r\n  @Input() bpsShape: NzButtonShape = null;\r\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME, 'default') bpsSize: NzSizeLDSType;\r\n  @ViewChild(BpsInputDirective, { static: true, read: ElementRef }) inputElement: ElementRef;\r\n\r\n  readonly el: HTMLElement = this.elementRef.nativeElement;\r\n  isInDropdown = false;\r\n  private iconElement: HTMLElement;\r\n  private iconOnly = false;\r\n  private destroy$ = new Subject<void>();\r\n\r\n  /** temp solution since no method add classMap to host https://github.com/angular/angular/issues/7289 */\r\n  setClassMap(): void {\r\n    const prefixCls = 'ant-btn';\r\n    const sizeMap: NzSizeMap = { large: 'lg', small: 'sm' };\r\n    this.nzUpdateHostClassService.updateHostClass(this.el, {\r\n      [`${prefixCls}-${this.bpsType}`]: this.bpsType,\r\n      [`${prefixCls}-${this.bpsShape}`]: this.bpsShape,\r\n      [`${prefixCls}-${sizeMap[this.bpsSize]}`]: sizeMap[this.bpsSize],\r\n      [`${prefixCls}-loading`]: this.bpsLoading,\r\n      [`${prefixCls}-icon-only`]: this.iconOnly && !this.bpsSearch && !this.isInDropdown,\r\n      [`${prefixCls}-background-ghost`]: this.bpsGhost,\r\n      [`${prefixCls}-block`]: this.bpsBlock,\r\n      [`ant-input-search-button`]: this.bpsSearch\r\n    });\r\n  }\r\n\r\n  updateIconDisplay(value: boolean): void {\r\n    if (this.iconElement) {\r\n      this.renderer.setStyle(this.iconElement, 'display', value ? 'none' : 'inline-block');\r\n    }\r\n  }\r\n\r\n  checkContent(): void {\r\n    const hasIcon = this.listOfIconElement && this.listOfIconElement.length;\r\n    if (hasIcon) {\r\n      this.moveIcon();\r\n    }\r\n    this.renderer.removeStyle(this.contentElement.nativeElement, 'display');\r\n    /** https://github.com/angular/angular/issues/12530 **/\r\n    if (isEmpty(this.contentElement.nativeElement)) {\r\n      this.renderer.setStyle(this.contentElement.nativeElement, 'display', 'none');\r\n      this.iconOnly = !!hasIcon;\r\n    } else {\r\n      this.renderer.removeStyle(this.contentElement.nativeElement, 'display');\r\n      this.iconOnly = false;\r\n    }\r\n    this.setClassMap();\r\n    this.updateIconDisplay(this.bpsLoading);\r\n    if (!(this.cdr as ViewRef).destroyed) {\r\n      this.cdr.detectChanges();\r\n    }\r\n  }\r\n\r\n  moveIcon(): void {\r\n    if (this.listOfIconElement && this.listOfIconElement.length) {\r\n      const firstChildElement = findFirstNotEmptyNode(this.contentElement.nativeElement);\r\n      const lastChildElement = findLastNotEmptyNode(this.contentElement.nativeElement);\r\n      if (firstChildElement && firstChildElement === this.listOfIconElement.first.nativeElement) {\r\n        this.renderer.insertBefore(this.el, firstChildElement, this.contentElement.nativeElement);\r\n        this.iconElement = firstChildElement as HTMLElement;\r\n      } else if (lastChildElement && lastChildElement === this.listOfIconElement.last.nativeElement) {\r\n        this.renderer.appendChild(this.el, lastChildElement);\r\n      }\r\n    }\r\n  }\r\n\r\n  preventDefault($event) {\r\n    $event.preventDefault();\r\n    $event.stopImmediatePropagation();\r\n  }\r\n\r\n  @HostListener('window:mouseup', ['$event'])\r\n  handleClick(e: MouseEvent): void {\r\n    if (this.bpsType !== 'editable') {\r\n      return;\r\n    }\r\n\r\n    if (this.showEditionMode && this.inputElement && this.inputElement.nativeElement !== e.target) {\r\n      this.showEditionMode = false;\r\n      this.bpsValueChange.emit(this.bpsValue);\r\n    }\r\n  }\r\n\r\n  endEditMode($event: KeyboardEvent) {\r\n    this.preventDefault($event);\r\n    if ($event.key === ('Enter' || 'enter')) {\r\n      this.showEditionMode = false;\r\n      this.bpsValueChange.emit(this.bpsValue);\r\n    }\r\n  }\r\n\r\n  clicks = 0;\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent) {\r\n    if (this.bpsType !== 'editable') {\r\n      return;\r\n    }\r\n    this.clicks++;\r\n    setTimeout(() => {\r\n      if (this.clicks === 1) {\r\n        this.isSelected = !this.isSelected;\r\n        this.isSelectedChange.emit(this.isSelected);\r\n      } \r\n      this.clicks = 0;\r\n    }, 300);\r\n  }\r\n\r\n  startEditionMode($event: Event) {\r\n    $event.stopImmediatePropagation();\r\n    $event.stopPropagation();\r\n    this.showEditionMode = true;\r\n    this.cdr.detectChanges();\r\n    this.inputElement.nativeElement.focus();\r\n    this.inputElement.nativeElement.select();\r\n  }\r\n\r\n  constructor(\r\n    private elementRef: ElementRef,\r\n    private cdr: ChangeDetectorRef,\r\n    private renderer: Renderer2,\r\n    private contentObserver: ContentObserver,\r\n    private nzUpdateHostClassService: NzUpdateHostClassService,\r\n    private ngZone: NgZone,\r\n    public nzConfigService: NzConfigService,\r\n    @Optional() @Inject(NZ_WAVE_GLOBAL_CONFIG) private waveConfig: NzWaveConfig,\r\n    @Optional() @Inject(ANIMATION_MODULE_TYPE) private animationType: string\r\n  ) {\r\n    this.renderer.addClass(elementRef.nativeElement, 'ant-btn');\r\n    this.nzConfigService\r\n      .getConfigChangeEventForComponent(NZ_CONFIG_COMPONENT_NAME)\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(() => {\r\n        this.setClassMap();\r\n        this.cdr.markForCheck();\r\n      });\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    if (!this.contentElement) {\r\n      return;\r\n    }\r\n    this.contentObserver\r\n      .observe(this.contentElement)\r\n      .pipe(\r\n        startWith(true),\r\n        takeUntil(this.destroy$)\r\n      )\r\n      .subscribe(() => {\r\n        // https://github.com/NG-ZORRO/ng-zorro-antd/issues/3079\r\n        Promise.resolve().then(() => this.checkContent());\r\n      });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setClassMap();\r\n    //this.nzWave.ngOnInit();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n    //this.nzWave.ngOnDestroy();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (\r\n      changes.bpsBlock ||\r\n      changes.bpsGhost ||\r\n      changes.bpsSearch ||\r\n      changes.bpsType ||\r\n      changes.bpsShape ||\r\n      changes.bpsSize ||\r\n      changes.bpsLoading\r\n    ) {\r\n      this.setClassMap();\r\n    }\r\n    if (changes.bpsLoading) {\r\n      this.updateIconDisplay(this.bpsLoading);\r\n    }\r\n    /*if (changes.bpsType && changes.bpsType.currentValue === 'link') {\r\n      this.nzWave.disable();\r\n    } else {\r\n      this.nzWave.enable();\r\n    }*/\r\n  }\r\n}\r\n","\nimport { ChangeDetectionStrategy, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzSizeLDSType, NzUpdateHostClassService } from 'ng-zorro-antd/core';\n\n@Component({\n  selector: 'bps-button-group',\n  exportAs: 'bpsButtonGroup',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  providers: [NzUpdateHostClassService],\n  templateUrl: './bps-button-group.component.html'\n})\nexport class BpsButtonGroupComponent implements OnInit {\n  private _size: NzSizeLDSType;\n  isInDropdown = false;\n\n  @Input()\n  get bpsSize(): NzSizeLDSType {\n    return this._size;\n  }\n\n  set bpsSize(value: NzSizeLDSType) {\n    this._size = value;\n    this.setClassMap();\n  }\n\n  constructor(private nzUpdateHostClassService: NzUpdateHostClassService, private elementRef: ElementRef) {}\n\n  setClassMap(): void {\n    const prefixCls = 'ant-btn-group';\n    const classMap = {\n      [prefixCls]: true,\n      [`ant-dropdown-button`]: this.isInDropdown,\n      [`${prefixCls}-lg`]: this.bpsSize === 'large',\n      [`${prefixCls}-sm`]: this.bpsSize === 'small'\n    };\n    this.nzUpdateHostClassService.updateHostClass(this.elementRef.nativeElement, classMap);\n  }\n\n  ngOnInit(): void {\n    this.setClassMap();\n  }\n}\n","import { FocusMonitor } from '@angular/cdk/a11y';\r\nimport { ENTER, LEFT_ARROW, RIGHT_ARROW, SPACE } from '@angular/cdk/keycodes';\r\nimport {\r\n  forwardRef,\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  OnDestroy,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n\r\n  EventEmitter,\r\n  Output\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { InputBoolean, NzConfigService, NzSizeDSType, WithConfig } from 'ng-zorro-antd/core';\r\n\r\nconst NZ_CONFIG_COMPONENT_NAME = 'switch';\r\n\r\n@Component({\r\n  selector: 'bps-switch',\r\n  exportAs: 'bpsSwitch',\r\n  preserveWhitespaces: false,\r\n  templateUrl: './bps-switch.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  styleUrls: ['./bps-switch.component.css'],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => BpsSwitchComponent),\r\n      multi: true\r\n    }\r\n  ],\r\n  host: {\r\n    '(click)': 'hostClick($event)'\r\n  },\r\n  styles: [\r\n    `\r\n      bps-switch {\r\n        display: inline-block;\r\n      }\r\n    `\r\n  ]\r\n})\r\nexport class BpsSwitchComponent implements ControlValueAccessor, AfterViewInit, OnDestroy {\r\n  checked = false;\r\n  onChange: (value: boolean) => void = () => null;\r\n  onTouched: () => void = () => null;\r\n  @ViewChild('switchElement', { static: true }) private switchElement: ElementRef;\r\n  @Input() @InputBoolean() bpsLoading = false;\r\n  @Input() @InputBoolean() bpsDual = false;\r\n  @Input() bpsDualValues: { title: string; checked: boolean }[] = [];\r\n  @Output() bpsDualValuesChange: EventEmitter<{ title: string; checked: boolean }[]> = new EventEmitter();\r\n  @Input() @InputBoolean() bpsDisabled = false;\r\n  @Input() @InputBoolean() bpsControl = false;\r\n  @Input() bpsCheckedChildren: string | TemplateRef<void>;\r\n  @Input() bpsUnCheckedChildren: string | TemplateRef<void>;\r\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME, 'default') bpsSize: NzSizeDSType;\r\n\r\n  hostClick(e: MouseEvent): void {\r\n    e.preventDefault();\r\n    if (!this.bpsDisabled && !this.bpsLoading && !this.bpsControl) {\r\n      this.updateValue(!this.checked);\r\n    }\r\n  }\r\n\r\n  checkNode(nodeA: { title: string; checked: boolean }, nodeB: { title: string; checked: boolean }) {\r\n    if (!this.bpsDisabled) {\r\n      nodeA.checked = true;\r\n      nodeB.checked = false;\r\n      this.bpsDualValuesChange.emit(this.bpsDualValues);\r\n    }\r\n  }\r\n\r\n  updateValue(value: boolean): void {\r\n    if (this.checked !== value) {\r\n      this.checked = value;\r\n      this.onChange(this.checked);\r\n    }\r\n  }\r\n\r\n  onKeyDown(e: KeyboardEvent): void {\r\n    if (!this.bpsControl && !this.bpsDisabled && !this.bpsLoading) {\r\n      if (e.keyCode === LEFT_ARROW) {\r\n        this.updateValue(false);\r\n        e.preventDefault();\r\n      } else if (e.keyCode === RIGHT_ARROW) {\r\n        this.updateValue(true);\r\n        e.preventDefault();\r\n      } else if (e.keyCode === SPACE || e.keyCode === ENTER) {\r\n        this.updateValue(!this.checked);\r\n        e.preventDefault();\r\n      }\r\n    }\r\n  }\r\n\r\n  focus(): void {\r\n    if (this.switchElement) {\r\n      this.focusMonitor.focusVia(this.switchElement.nativeElement, 'keyboard');\r\n    }  \r\n  }\r\n\r\n  blur(): void {\r\n    if (this.switchElement) {\r\n      this.switchElement.nativeElement.blur();\r\n    } \r\n  }\r\n\r\n  constructor(\r\n    public nzConfigService: NzConfigService,\r\n    private cdr: ChangeDetectorRef,\r\n    private focusMonitor: FocusMonitor\r\n  ) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.switchElement) {\r\n      this.focusMonitor.monitor(this.switchElement.nativeElement, true).subscribe(focusOrigin => {\r\n        if (!focusOrigin) {\r\n          // When a focused element becomes disabled, the browser *immediately* fires a blur event.\r\n          // Angular does not expect events to be raised during change detection, so any state change\r\n          // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\r\n          // See https://github.com/angular/angular/issues/17793. To work around this, we defer\r\n          // telling the form control it has been touched until the next tick.\r\n          Promise.resolve().then(() => this.onTouched());\r\n        }\r\n      });\r\n    }\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.switchElement) {\r\n      this.focusMonitor.stopMonitoring(this.switchElement.nativeElement);\r\n    }\r\n  }\r\n\r\n  writeValue(value: boolean): void {\r\n    this.checked = value;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  registerOnChange(fn: (_: boolean) => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.bpsDisabled = isDisabled;\r\n    this.cdr.markForCheck();\r\n  }\r\n}\r\n","import { FocusMonitor } from '@angular/cdk/a11y';\nimport {\n  forwardRef,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { InputBoolean } from 'ng-zorro-antd/core';\n\nexport interface NzCheckBoxOptionInterface {\n  label: string;\n  value: string;\n  checked?: boolean;\n  disabled?: boolean;\n}\n\n@Component({\n  selector: 'bps-checkbox-group',\n  exportAs: 'bpsCheckboxGroup',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: './bps-checkbox-group.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => BpsCheckboxGroupComponent),\n      multi: true\n    }\n  ]\n})\nexport class BpsCheckboxGroupComponent implements ControlValueAccessor, OnInit, OnDestroy {\n  // tslint:disable-next-line:no-any\n  onChange: (value: any) => void = () => null;\n  // tslint:disable-next-line:no-any\n  onTouched: () => any = () => null;\n  options: NzCheckBoxOptionInterface[] = [];\n  @Input() @InputBoolean() bpsDisabled = false;\n\n  onOptionChange(): void {\n    this.onChange(this.options);\n  }\n\n  trackByOption(_index: number, option: NzCheckBoxOptionInterface): string {\n    return option.value;\n  }\n\n  constructor(\n    private elementRef: ElementRef,\n    private focusMonitor: FocusMonitor,\n    private cdr: ChangeDetectorRef,\n    renderer: Renderer2\n  ) {\n    renderer.addClass(elementRef.nativeElement, 'ant-checkbox-group');\n  }\n\n  ngOnInit(): void {\n    this.focusMonitor.monitor(this.elementRef, true).subscribe(focusOrigin => {\n      if (!focusOrigin) {\n        Promise.resolve().then(() => this.onTouched());\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this.elementRef);\n  }\n\n  writeValue(value: NzCheckBoxOptionInterface[]): void {\n    this.options = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: (_: NzCheckBoxOptionInterface[]) => {}): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.bpsDisabled = isDisabled;\n    this.cdr.markForCheck();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Output,\n  Renderer2,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { BpsCheckboxComponent } from './bps-checkbox.component';\n\n@Component({\n  selector: 'bps-checkbox-wrapper',\n  exportAs: 'bpsCheckboxWrapper',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: './bps-checkbox-wrapper.component.html'\n})\nexport class BpsCheckboxWrapperComponent {\n  @Output() readonly bpsOnChange = new EventEmitter<string[]>();\n  private checkboxList: BpsCheckboxComponent[] = [];\n\n  addCheckbox(value: BpsCheckboxComponent): void {\n    this.checkboxList.push(value);\n  }\n\n  removeCheckbox(value: BpsCheckboxComponent): void {\n    this.checkboxList.splice(this.checkboxList.indexOf(value), 1);\n  }\n\n  outputValue(): string[] {\n    const checkedList = this.checkboxList.filter(item => item.bpsChecked);\n    return checkedList.map(item => item.bpsValue);\n  }\n\n  onChange(): void {\n    this.bpsOnChange.emit(this.outputValue());\n  }\n\n  constructor(renderer: Renderer2, elementRef: ElementRef) {\n    renderer.addClass(elementRef.nativeElement, 'ant-checkbox-group');\n  }\n}\n","import { FocusMonitor } from '@angular/cdk/a11y';\r\nimport {\r\n  forwardRef,\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Output,\r\n  Renderer2,\r\n  SimpleChanges,\r\n  ViewChild,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { isEmpty, InputBoolean } from 'ng-zorro-antd/core';\r\n\r\nimport { BpsCheckboxWrapperComponent } from './bps-checkbox-wrapper.component';\r\n\r\nexport type BpsCheckboxType = 'variation1' | 'variation2' | 'variation3';\r\n\r\n@Component({\r\n  selector: '[bps-checkbox]',\r\n  exportAs: 'bpsCheckbox',\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  templateUrl: './bps-checkbox.component.html',\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => BpsCheckboxComponent),\r\n      multi: true\r\n    }\r\n  ],\r\n  host: {\r\n    '(click)': 'hostClick($event)'\r\n  },\r\n  styleUrls: ['./bps-checkbox.component.css']\r\n})\r\nexport class BpsCheckboxComponent implements OnInit, ControlValueAccessor, OnChanges, AfterViewInit, OnDestroy {\r\n  // tslint:disable-next-line:no-any\r\n  onChange: (value: any) => void = () => null;\r\n  // tslint:disable-next-line:no-any\r\n  onTouched: () => any = () => null;\r\n  @ViewChild('inputElement', { static: true }) private inputElement: ElementRef;\r\n  @ViewChild('contentElement', { static: false }) private contentElement: ElementRef;\r\n  @Output() readonly bpsCheckedChange = new EventEmitter<boolean>();\r\n  @Input() bpsValue: string;\r\n  @Input() @InputBoolean() bpsAutoFocus = false;\r\n  @Input() @InputBoolean() bpsDisabled = false;\r\n  @Input() @InputBoolean() bpsIndeterminate = false;\r\n  @Input() @InputBoolean() bpsChecked = false;\r\n  @Input() bpsType: BpsCheckboxType = 'variation2';\r\n\r\n  hostClick(e: MouseEvent): void {\r\n    e.preventDefault();\r\n    this.focus();\r\n    this.innerCheckedChange(!this.bpsChecked);\r\n  }\r\n\r\n  innerCheckedChange(checked: boolean): void {\r\n    if (!this.bpsDisabled) {\r\n      this.bpsChecked = checked;\r\n      this.onChange(this.bpsChecked);\r\n      this.bpsCheckedChange.emit(this.bpsChecked);\r\n      if (this.bpsCheckboxWrapperComponent) {\r\n        this.bpsCheckboxWrapperComponent.onChange();\r\n      }\r\n    }\r\n  }\r\n\r\n  updateAutoFocus(): void {\r\n    if (this.inputElement && this.bpsAutoFocus) {\r\n      this.renderer.setAttribute(this.inputElement.nativeElement, 'autofocus', 'autofocus');\r\n    } else {\r\n      this.renderer.removeAttribute(this.inputElement.nativeElement, 'autofocus');\r\n    }\r\n  }\r\n\r\n  writeValue(value: boolean): void {\r\n    this.bpsChecked = value;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  registerOnChange(fn: (_: boolean) => {}): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => {}): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.bpsDisabled = isDisabled;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  focus(): void {\r\n    this.focusMonitor.focusVia(this.inputElement, 'keyboard');\r\n  }\r\n\r\n  blur(): void {\r\n    this.inputElement.nativeElement.blur();\r\n  }\r\n\r\n  checkContent(): void {\r\n    if (isEmpty(this.contentElement.nativeElement)) {\r\n      this.renderer.setStyle(this.contentElement.nativeElement, 'display', 'none');\r\n    } else {\r\n      this.renderer.removeStyle(this.contentElement.nativeElement, 'display');\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    private elementRef: ElementRef<HTMLElement>,\r\n    private renderer: Renderer2,\r\n    @Optional() private bpsCheckboxWrapperComponent: BpsCheckboxWrapperComponent,\r\n    private cdr: ChangeDetectorRef,\r\n    private focusMonitor: FocusMonitor\r\n  ) {\r\n    renderer.addClass(elementRef.nativeElement, 'ant-checkbox-wrapper');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.focusMonitor.monitor(this.elementRef, true).subscribe(focusOrigin => {\r\n      if (!focusOrigin) {\r\n        Promise.resolve().then(() => this.onTouched());\r\n      }\r\n    });\r\n    if (this.bpsCheckboxWrapperComponent) {\r\n      this.bpsCheckboxWrapperComponent.addCheckbox(this);\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.bpsAutoFocus) {\r\n      this.updateAutoFocus();\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.updateAutoFocus();\r\n    this.checkContent();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.focusMonitor.stopMonitoring(this.elementRef);\r\n    if (this.bpsCheckboxWrapperComponent) {\r\n      this.bpsCheckboxWrapperComponent.removeCheckbox(this);\r\n    }\r\n  }\r\n}\r\n","import { FocusMonitor } from '@angular/cdk/a11y';\nimport {\n  forwardRef,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Renderer2,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\nimport { InputBoolean } from 'ng-zorro-antd/core';\n\nexport type BpsRadioButtonType = 'variation1' | 'variation2' | 'variation3' | 'variation5' | 'variation6' | 'variation7' | 'variation8a'\n  | 'variation8b' | 'variation8c' | 'variation8d' | 'variation8e' | 'variation9' | 'variation10' | 'variation11' | 'variation12';\n\n@Component({\n  selector: '[bps-radio]',\n  exportAs: 'bpsRadio',\n  preserveWhitespaces: false,\n  templateUrl: './bps-radio.component.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => BpsRadioComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.ant-radio-wrapper-checked]': 'checked',\n    '[class.ant-radio-wrapper-disabled]': 'bpsDisabled'\n  }\n})\nexport class BpsRadioComponent implements ControlValueAccessor, AfterViewInit, OnChanges, OnDestroy {\n  select$ = new Subject<BpsRadioComponent>();\n  touched$ = new Subject<void>();\n  checked = false;\n  name: string;\n  isNgModel = false;\n  onChange: (_: boolean) => void = () => null;\n  onTouched: () => void = () => null;\n  @ViewChild('inputElement', { static: false }) inputElement: ElementRef;\n  /* tslint:disable-next-line:no-any */\n  @Input() bpsValue: any;\n  @Input() @InputBoolean() bpsDisabled = false;\n  @Input() @InputBoolean() bpsAutoFocus = false;\n  @Input() bpsRadioButtonType: BpsRadioButtonType = 'variation1';\n\n  updateAutoFocus(): void {\n    if (this.inputElement) {\n      if (this.bpsAutoFocus) {\n        this.renderer.setAttribute(this.inputElement.nativeElement, 'autofocus', 'autofocus');\n      } else {\n        this.renderer.removeAttribute(this.inputElement.nativeElement, 'autofocus');\n      }\n    }\n  }\n\n  @HostListener('click', ['$event'])\n  onClick(event: MouseEvent): void {\n    // Prevent label click triggered twice.\n    event.stopPropagation();\n    event.preventDefault();\n    if (!this.bpsDisabled && !this.checked) {\n      this.select$.next(this);\n      if (this.isNgModel) {\n        this.checked = true;\n        this.onChange(true);\n      }\n    }\n  }\n\n  focus(): void {\n    this.focusMonitor.focusVia(this.inputElement, 'keyboard');\n  }\n\n  blur(): void {\n    this.inputElement.nativeElement.blur();\n  }\n\n  markForCheck(): void {\n    this.cdr.markForCheck();\n  }\n\n  /* tslint:disable-next-line:no-any */\n  constructor(\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    private cdr: ChangeDetectorRef,\n    private focusMonitor: FocusMonitor\n  ) {\n    this.renderer.addClass(elementRef.nativeElement, 'ant-radio-wrapper');\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.bpsDisabled = isDisabled;\n    this.cdr.markForCheck();\n  }\n\n  writeValue(value: boolean): void {\n    this.checked = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: (_: boolean) => {}): void {\n    this.isNgModel = true;\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n\n  ngAfterViewInit(): void {\n    this.focusMonitor.monitor(this.elementRef, true).subscribe(focusOrigin => {\n      if (!focusOrigin) {\n        Promise.resolve().then(() => this.onTouched());\n        this.touched$.next();\n      }\n    });\n    this.updateAutoFocus();\n    this.renderer.addClass(this.elementRef.nativeElement, `bps-radio-button-${this.bpsRadioButtonType}`);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.bpsAutoFocus) {\n      this.updateAutoFocus();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this.elementRef);\n  }\n}\n","import {\n  forwardRef,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  QueryList,\n  Renderer2,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { merge, Subject, Subscription } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\n\nimport { isNotNil, InputBoolean, NzSizeLDSType } from 'ng-zorro-antd/core';\n\nimport { BpsRadioComponent } from './bps-radio.component';\n\nexport type NzRadioButtonStyle = 'outline' | 'solid';\n\n@Component({\n  selector: 'bps-radio-group',\n  exportAs: 'bpsRadioGroup',\n  preserveWhitespaces: false,\n  templateUrl: './bps-radio-group.component.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => BpsRadioGroupComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.ant-radio-group-large]': `bpsSize === 'large'`,\n    '[class.ant-radio-group-small]': `bpsSize === 'small'`,\n    '[class.ant-radio-group-solid]': `bpsButtonStyle === 'solid'`\n  }\n})\nexport class BpsRadioGroupComponent implements AfterContentInit, ControlValueAccessor, OnDestroy, OnChanges {\n  /* tslint:disable-next-line:no-any */\n  private value: any;\n  private destroy$ = new Subject();\n  private selectSubscription: Subscription;\n  private touchedSubscription: Subscription;\n  onChange: (_: string) => void = () => null;\n  onTouched: () => void = () => null;\n  @ContentChildren(forwardRef(() => BpsRadioComponent), { descendants: true }) radios: QueryList<BpsRadioComponent>;\n  @Input() @InputBoolean() bpsDisabled: boolean;\n  @Input() bpsButtonStyle: NzRadioButtonStyle = 'outline';\n  @Input() bpsSize: NzSizeLDSType = 'default';\n  @Input() bpsName: string;\n\n  updateChildrenStatus(): void {\n    if (this.radios) {\n      Promise.resolve().then(() => {\n        this.radios.forEach(radio => {\n          radio.checked = radio.bpsValue === this.value;\n          if (isNotNil(this.bpsDisabled)) {\n            radio.bpsDisabled = this.bpsDisabled;\n          }\n          if (this.bpsName) {\n            radio.name = this.bpsName;\n          }\n          radio.markForCheck();\n        });\n      });\n    }\n  }\n\n  constructor(private cdr: ChangeDetectorRef, renderer: Renderer2, elementRef: ElementRef) {\n    renderer.addClass(elementRef.nativeElement, 'ant-radio-group');\n  }\n\n  ngAfterContentInit(): void {\n    this.radios.changes\n      .pipe(\n        startWith(null),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(() => {\n        this.updateChildrenStatus();\n        if (this.selectSubscription) {\n          this.selectSubscription.unsubscribe();\n        }\n        this.selectSubscription = merge(...this.radios.map(radio => radio.select$))\n          .pipe(takeUntil(this.destroy$))\n          .subscribe(radio => {\n            if (this.value !== radio.bpsValue) {\n              this.value = radio.bpsValue;\n              this.updateChildrenStatus();\n              this.onChange(this.value);\n            }\n          });\n        if (this.touchedSubscription) {\n          this.touchedSubscription.unsubscribe();\n        }\n        this.touchedSubscription = merge(...this.radios.map(radio => radio.touched$))\n          .pipe(takeUntil(this.destroy$))\n          .subscribe(() => {\n            Promise.resolve().then(() => this.onTouched());\n          });\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.bpsDisabled || changes.bpsName) {\n      this.updateChildrenStatus();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  /* tslint:disable-next-line:no-any */\n  writeValue(value: any): void {\n    this.value = value;\n    this.updateChildrenStatus();\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: (_: string) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.bpsDisabled = isDisabled;\n    this.cdr.markForCheck();\n  }\n}\n","import {\r\n  forwardRef,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  Renderer2,\r\n  ViewEncapsulation,\r\n  Input\r\n} from '@angular/core';\r\n\r\nimport { FocusMonitor } from '@angular/cdk/a11y';\r\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { BpsRadioComponent } from './bps-radio.component';\r\n\r\n@Component({\r\n  selector: '[bps-radio-button]',\r\n  exportAs: 'bpsRadioButton',\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => BpsRadioComponent),\r\n      multi: true\r\n    },\r\n    {\r\n      provide: BpsRadioComponent,\r\n      useExisting: forwardRef(() => BpsRadioButtonComponent)\r\n    }\r\n  ],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false,\r\n  templateUrl: './bps-radio-button.component.html',\r\n  host: {\r\n    '[class.ant-radio-button-wrapper-checked]': 'checked',\r\n    '[class.ant-radio-button-wrapper-disabled]': 'bpsDisabled'\r\n  },\r\n  styleUrls: ['./bps-radio-button.component.css']\r\n})\r\nexport class BpsRadioButtonComponent extends BpsRadioComponent {\r\n\r\n  /* tslint:disable-next-line:no-any */\r\n  constructor(elementRef: ElementRef, renderer: Renderer2, cdr: ChangeDetectorRef, focusMonitor: FocusMonitor) {\r\n    super(elementRef, renderer, cdr, focusMonitor);\r\n    renderer.removeClass(elementRef.nativeElement, 'ant-radio-wrapper');\r\n    renderer.addClass(elementRef.nativeElement, 'ant-radio-button-wrapper');\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { InputBoolean, NzConfigService, WithConfig } from 'ng-zorro-antd/core';\n\nimport { BpsCollapsePanelComponent } from './bps-collapse-panel.component';\n\nconst NZ_CONFIG_COMPONENT_NAME = 'collapse';\n\n@Component({\n  selector: 'bps-collapse',\n  exportAs: 'bpsCollapse',\n  templateUrl: './bps-collapse.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styles: [\n    `\n      bps-collapse {\n        display: block;\n      }\n    `\n  ],\n  styleUrls: ['./bps-collapse.component.css']\n})\nexport class BpsCollapseComponent {\n  private listOfNzCollapsePanelComponent: BpsCollapsePanelComponent[] = [];\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME, false) @InputBoolean() bpsAccordion: boolean;\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME, true) @InputBoolean() bpsBordered: boolean;\n\n  constructor(public nzConfigService: NzConfigService) {}\n\n  addPanel(value: BpsCollapsePanelComponent): void {\n    this.listOfNzCollapsePanelComponent.push(value);\n  }\n\n  removePanel(value: BpsCollapsePanelComponent): void {\n    this.listOfNzCollapsePanelComponent.splice(this.listOfNzCollapsePanelComponent.indexOf(value), 1);\n  }\n\n  click(collapse: BpsCollapsePanelComponent): void {\n    if (this.bpsAccordion && !collapse.bpsActive) {\n      this.listOfNzCollapsePanelComponent\n        .filter(item => item !== collapse)\n        .forEach(item => {\n          if (item.bpsActive) {\n            item.bpsActive = false;\n            item.bpsActiveChange.emit(item.bpsActive);\n            item.markForCheck();\n          }\n        });\n    }\n    collapse.bpsActive = !collapse.bpsActive;\n    collapse.bpsActiveChange.emit(collapse.bpsActive);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Host,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { collapseMotion, InputBoolean, NzConfigService, WithConfig } from 'ng-zorro-antd/core';\n\nimport { BpsCollapseComponent } from './bps-collapse.component';\n\nconst NZ_CONFIG_COMPONENT_NAME = 'collapsePanel';\n\n@Component({\n  selector: 'bps-collapse-panel',\n  exportAs: 'bpsCollapsePanel',\n  templateUrl: './bps-collapse-panel.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  animations: [collapseMotion],\n  styles: [\n    `\n      bps-collapse-panel {\n        display: block;\n      }\n    `\n  ],\n  styleUrls: ['./bps-collapse-panel.component.css'],\n  host: {\n    '[class.ant-collapse-no-arrow]': '!bpsShowArrow',\n    '[class.ant-collapse-item-active]': 'bpsActive',\n    '[class.ant-collapse-item-disabled]': 'bpsDisabled'\n  }\n})\nexport class BpsCollapsePanelComponent implements OnInit, OnDestroy {\n  @Input() @InputBoolean() bpsActive = false;\n  @Input() @InputBoolean() bpsDisabled = false;\n  @Input() bpsValid = null;\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME, true) @InputBoolean() bpsShowArrow: boolean;\n  @Input() bpsExtra: string | TemplateRef<void>;\n  @Input() bpsHeader: string | TemplateRef<void>;\n  @Input() bpsExpandedIcon: string | TemplateRef<void>;\n  @Output() readonly bpsActiveChange = new EventEmitter<boolean>();\n\n  clickHeader(): void {\n    if (!this.bpsDisabled) {\n      this.bpsCollapseComponent.click(this);\n    }\n  }\n\n  markForCheck(): void {\n    this.cdr.markForCheck();\n  }\n\n  constructor(\n    public nzConfigService: NzConfigService,\n    private cdr: ChangeDetectorRef,\n    @Host() private bpsCollapseComponent: BpsCollapseComponent,\n    elementRef: ElementRef,\n    renderer: Renderer2\n  ) {\n    renderer.addClass(elementRef.nativeElement, 'ant-collapse-item');\n  }\n\n  ngOnInit(): void {\n    this.bpsCollapseComponent.addPanel(this);\n  }\n\n  ngOnDestroy(): void {\n    this.bpsCollapseComponent.removePanel(this);\n  }\n}\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  Host,\r\n  Input,\r\n  Optional,\r\n  TemplateRef,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\n\r\nimport { zoomBigMotion, NzNoAnimationDirective, NzTSType } from 'ng-zorro-antd/core';\r\nimport { NzTooltipBaseComponentLegacy, NzToolTipComponent } from 'ng-zorro-antd/tooltip';\r\nimport { BpsPopoverType } from './bps-popover.directive';\r\n\r\n@Component({\r\n  selector: 'bps-popover',\r\n  exportAs: 'bpsPopoverComponent',\r\n  animations: [zoomBigMotion],\r\n  templateUrl: './bps-popover.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  providers: [\r\n    {\r\n      provide: NzTooltipBaseComponentLegacy,\r\n      useExisting: BpsPopoverComponent\r\n    }\r\n  ],\r\n  preserveWhitespaces: false,\r\n  styles: [\r\n    `\r\n      .ant-popover {\r\n        position: relative;\r\n      }\r\n    `\r\n  ],\r\n  styleUrls: ['bps-popover.component.css']\r\n})\r\nexport class BpsPopoverComponent extends NzToolTipComponent {\r\n  _prefix = 'ant-popover-placement';\r\n\r\n  @Input() bpsPopoverType: BpsPopoverType = 'variation_1';\r\n\r\n  @Input() bpsTitle: NzTSType;\r\n  @ContentChild('neverUsedTemplate', { static: true }) bpsTitleTemplate: TemplateRef<void>;\r\n\r\n  @Input() bpsContent: NzTSType;\r\n  @ContentChild('nzTemplate', { static: true }) bpsContentTemplate: TemplateRef<void>;\r\n\r\n  constructor(cdr: ChangeDetectorRef, @Host() @Optional() public noAnimation?: NzNoAnimationDirective) {\r\n    super(cdr, noAnimation);\r\n  }\r\n}\r\n","import { CdkOverlayOrigin } from '@angular/cdk/overlay';\r\nimport {\r\n  AfterViewInit,\r\n  ComponentFactory,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  Renderer2,\r\n  SimpleChanges,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport { warnDeprecation, NgStyleInterface, NzNoAnimationDirective, NzTSType } from 'ng-zorro-antd/core';\r\nimport { Subject } from 'rxjs';\r\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\r\n\r\nimport { NzTooltipTrigger, NzTooltipBaseComponent, NzTooltipBaseComponentLegacy } from 'ng-zorro-antd';\r\n\r\nexport abstract class NzTooltipBaseDirective implements OnChanges, OnInit, OnDestroy, AfterViewInit {\r\n  directiveNameTitle?: NzTSType | null;\r\n  specificTitle?: NzTSType | null;\r\n  directiveNameContent?: NzTSType | null;\r\n  specificContent?: NzTSType | null;\r\n  specificTrigger?: NzTooltipTrigger;\r\n  specificPlacement?: string;\r\n  popoverType?: string;\r\n  tooltipDisabled?: boolean;\r\n  tooltipRef: ComponentRef<NzTooltipBaseComponent>;\r\n\r\n  /**\r\n   * @deprecated 9.0.0. This is deprecated and going to be removed in 9.0.0.\r\n   * Please use a more specific API. Like `nzTooltipTitle`.\r\n   */\r\n  @Input() nzTitle: NzTSType | null;\r\n\r\n  /**\r\n   * @deprecated 9.0.0. This is deprecated and going to be removed in 9.0.0.\r\n   * Please use a more specific API. Like `nzPopoverContent`.\r\n   */\r\n  @Input() nzContent: NzTSType | null;\r\n\r\n  /**\r\n   * @deprecated 9.0.0. This is deprecated and going to be removed in 9.0.0.\r\n   * Please use a more specific API. Like `nzTooltipTrigger`.\r\n   */\r\n  @Input() nzTrigger: NzTooltipTrigger = 'hover';\r\n\r\n  /**\r\n   * @deprecated 9.0.0. This is deprecated and going to be removed in 9.0.0.\r\n   * Please use a more specific API. Like `nzTooltipPlacement`.\r\n   */\r\n  @Input() nzPlacement: string = 'top';\r\n\r\n  @Input() nzMouseEnterDelay: number;\r\n  @Input() nzMouseLeaveDelay: number;\r\n  @Input() nzOverlayClassName: string;\r\n  @Input() nzOverlayStyle: NgStyleInterface;\r\n  @Input() nzVisible: boolean;\r\n\r\n  /**\r\n   * For create tooltip dynamically. This should be override for each different component.\r\n   */\r\n  protected componentFactory: ComponentFactory<NzTooltipBaseComponent>;\r\n\r\n  /**\r\n   * This true title that would be used in other parts on this component.\r\n   */\r\n  protected get title(): NzTSType | null {\r\n    return this.specificTitle || this.directiveNameTitle || this.nzTitle;\r\n  }\r\n\r\n  protected get content(): NzTSType | null {\r\n    return this.specificContent || this.directiveNameContent || this.nzContent;\r\n  }\r\n\r\n  protected get placement(): string {\r\n    return this.specificPlacement || this.nzPlacement;\r\n  }\r\n\r\n  protected get type(): string {\r\n    return this.popoverType;\r\n  }\r\n\r\n  protected get trigger(): NzTooltipTrigger {\r\n    return this.specificTrigger || this.nzTrigger;\r\n  }\r\n\r\n  protected needProxyProperties = [\r\n    'nzOverlayClassName',\r\n    'nzOverlayStyle',\r\n    'nzMouseEnterDelay',\r\n    'nzMouseLeaveDelay',\r\n    'nzVisible',\r\n    'noAnimation'\r\n  ];\r\n\r\n  @Output() readonly nzVisibleChange = new EventEmitter<boolean>();\r\n\r\n  tooltip: NzTooltipBaseComponent;\r\n\r\n  isTooltipComponentVisible = false;\r\n\r\n  /**\r\n   * @deprecated 9.0.0. Tooltips would always be dynamic in 9.0.0.\r\n   */\r\n  protected isDynamicTooltip = false;\r\n\r\n  protected readonly triggerUnlisteners: Array<() => void> = [];\r\n\r\n  protected $destroy = new Subject<void>();\r\n\r\n  private delayTimer?: number;\r\n\r\n  constructor(\r\n    public elementRef: ElementRef,\r\n    protected hostView: ViewContainerRef,\r\n    protected resolver: ComponentFactoryResolver,\r\n    protected renderer: Renderer2,\r\n    /**\r\n     * @deprecated 9.0.0. This will always be `null`.\r\n     */\r\n    protected _tooltip?: NzTooltipBaseComponentLegacy,\r\n    protected noAnimation?: NzNoAnimationDirective\r\n  ) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const { nzTrigger, specificTrigger } = changes;\r\n    const trigger = specificTrigger || nzTrigger;\r\n\r\n    if (trigger && !trigger.isFirstChange()) {\r\n      this.registerTriggers();\r\n    }\r\n\r\n    if (this.tooltip && this.isDynamicTooltip) {\r\n      this.updateChangedProperties(changes);\r\n    }\r\n\r\n    // TODO: enable these warning in 9.0.0.\r\n    // if (changes.nzTitle) {\r\n    //   warnDeprecation(\r\n    //     `'nzTitle' of 'nz-tooltip' is deprecated and will be removed in 10.0.0. Please use 'nzTooltipTitle' instead. The same with 'nz-popover' and 'nz-popconfirm'.`\r\n    //   );\r\n    // }\r\n\r\n    // if (changes.nzContent) {\r\n    //   warnDeprecation(\r\n    //     `'nzContent' of 'nz-popover' is deprecated and will be removed in 10.0.0. Please use 'nzPopoverContent' instead.`\r\n    //   );\r\n    // }\r\n\r\n    // if (changes.nzPlacement) {\r\n    //   warnDeprecation(\r\n    //     `'nzPlacement' of 'nz-tooltip' is deprecated and will be removed in 10.0.0. Please use 'nzTooltipContent' instead. The same with 'nz-popover' and 'nz-popconfirm'.`\r\n    //   );\r\n    // }\r\n\r\n    // if (changes.nzTrigger) {\r\n    //   warnDeprecation(\r\n    //     `'nzTrigger' of 'nz-tooltip' is deprecated and will be removed in 10.0.0. Please use 'nzTooltipTrigger' instead. The same with 'nz-popover' and 'nz-popconfirm'.`\r\n    //   );\r\n    // }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (!this._tooltip) {\r\n      this.createDynamicTooltipComponent();\r\n    } else {\r\n      warnDeprecation(\r\n        `'<nz-tooltip></nz-tooltip>', '<nz-popover></nz-popover>' and '<nz-popconfirm></nz-popconfirm>' is deprecated and will be removed in 9.0.0. Refer: https://ng.ant.design/components/tooltip/zh .`\r\n      );\r\n      this.tooltip = this._tooltip;\r\n      this.tooltip.setOverlayOrigin(this as CdkOverlayOrigin);\r\n    }\r\n\r\n    this.tooltip.nzVisibleChange\r\n      .pipe(\r\n        distinctUntilChanged(),\r\n        takeUntil(this.$destroy)\r\n      )\r\n      .subscribe((visible: boolean) => {\r\n        this.isTooltipComponentVisible = visible;\r\n        this.nzVisibleChange.emit(visible);\r\n      });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.registerTriggers();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.$destroy.next();\r\n    this.$destroy.complete();\r\n\r\n    // Clear toggling timer. Issue #3875 #4317 #4386\r\n    this.clearTogglingTimer();\r\n    this.removeTriggerListeners();\r\n\r\n    if (this.tooltipRef) {\r\n      this.tooltipRef.destroy();\r\n    }\r\n  }\r\n\r\n  show(): void {\r\n    this.tooltip.show();\r\n  }\r\n\r\n  hide(): void {\r\n    this.tooltip.hide();\r\n  }\r\n\r\n  /**\r\n   * Force the component to update its position.\r\n   */\r\n  updatePosition(): void {\r\n    if (this.tooltip && this.isDynamicTooltip) {\r\n      this.tooltip.updatePosition();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create a dynamic tooltip component. This method can be override.\r\n   */\r\n  protected createDynamicTooltipComponent(): void {\r\n    this.isDynamicTooltip = true;\r\n\r\n    this.tooltipRef = this.hostView.createComponent(this.componentFactory);\r\n\r\n    this.tooltip = this.tooltipRef.instance;\r\n    this.renderer.removeChild(\r\n      this.renderer.parentNode(this.elementRef.nativeElement),\r\n      this.tooltipRef.location.nativeElement\r\n    ); // Remove the component's DOM because it should be in the overlay container.\r\n\r\n    // If the tooltip component is dynamically created, we should set its origin before updating properties to\r\n    // the component.\r\n    this.tooltip.setOverlayOrigin(this as CdkOverlayOrigin);\r\n    // Update all properties to the component.\r\n    this.updateChangedProperties(this.needProxyProperties);\r\n  }\r\n\r\n  protected registerTriggers(): void {\r\n    // When the method gets invoked, all properties has been synced to the dynamic component.\r\n    // After removing the old API, we can just check the directive's own `nzTrigger`.\r\n    const el = this.elementRef.nativeElement;\r\n    const trigger = this.isDynamicTooltip ? this.trigger : this.tooltip.nzTrigger;\r\n\r\n    this.removeTriggerListeners();\r\n\r\n    if (trigger === 'hover') {\r\n      let overlayElement: HTMLElement;\r\n      this.triggerUnlisteners.push(\r\n        this.renderer.listen(el, 'mouseenter', () => {\r\n          this.delayEnterLeave(true, true, this.tooltip.nzMouseEnterDelay);\r\n        })\r\n      );\r\n      this.triggerUnlisteners.push(\r\n        this.renderer.listen(el, 'mouseleave', () => {\r\n          this.delayEnterLeave(true, false, this.tooltip.nzMouseLeaveDelay);\r\n          if (this.tooltip.overlay.overlayRef && !overlayElement) {\r\n            overlayElement = this.tooltip.overlay.overlayRef.overlayElement;\r\n            this.triggerUnlisteners.push(\r\n              this.renderer.listen(overlayElement, 'mouseenter', () => {\r\n                this.delayEnterLeave(false, true);\r\n              })\r\n            );\r\n            this.triggerUnlisteners.push(\r\n              this.renderer.listen(overlayElement, 'mouseleave', () => {\r\n                this.delayEnterLeave(false, false);\r\n              })\r\n            );\r\n          }\r\n        })\r\n      );\r\n    } else if (trigger === 'focus') {\r\n      this.triggerUnlisteners.push(this.renderer.listen(el, 'focus', () => this.show()));\r\n      this.triggerUnlisteners.push(this.renderer.listen(el, 'blur', () => this.hide()));\r\n    } else if (trigger === 'click') {\r\n      this.triggerUnlisteners.push(\r\n        this.renderer.listen(el, 'click', e => {\r\n          e.preventDefault();\r\n          this.show();\r\n        })\r\n      );\r\n    } // Else do nothing because user wants to control the visibility programmatically.\r\n  }\r\n\r\n  /**\r\n   * Sync changed properties to the component and trigger change detection in that component.\r\n   */\r\n  protected updateChangedProperties(propertiesOrChanges: string[] | SimpleChanges): void {\r\n    const isArray = Array.isArray(propertiesOrChanges);\r\n    const keys_ = isArray ? (propertiesOrChanges as string[]) : Object.keys(propertiesOrChanges);\r\n\r\n    // tslint:disable-next-line no-any\r\n    keys_.forEach((property: any) => {\r\n      if (this.needProxyProperties.indexOf(property) !== -1) {\r\n        // @ts-ignore\r\n        this.updateComponentValue(property, this[property]);\r\n      }\r\n    });\r\n\r\n    if (isArray) {\r\n      this.updateComponentValue('nzTitle', this.title);\r\n      this.updateComponentValue('nzContent', this.content);\r\n      this.updateComponentValue('nzPlacement', this.placement);\r\n      this.updateComponentValue('nzTrigger', this.trigger);\r\n      this.updateComponentValue('bpsPopoverType', this.type);\r\n      this.updateComponentValue('bpsTooltipDisabled', this.tooltipDisabled);\r\n    } else {\r\n      const c = propertiesOrChanges as SimpleChanges;\r\n      if (c.specificTitle || c.directiveNameTitle || c.nzTitle) {\r\n        this.updateComponentValue('nzTitle', this.title);\r\n      }\r\n      if (c.specificContent || c.directiveNameContent || c.nzContent) {\r\n        this.updateComponentValue('nzContent', this.content);\r\n      }\r\n      if (c.specificTrigger || c.nzTrigger) {\r\n        this.updateComponentValue('nzTrigger', this.trigger);\r\n      }\r\n      if (c.specificPlacement || c.nzPlacement) {\r\n        this.updateComponentValue('nzPlacement', this.placement);\r\n      }\r\n    }\r\n\r\n    this.tooltip.updateByDirective();\r\n  }\r\n\r\n  // tslint:disable-next-line no-any\r\n  private updateComponentValue(key: string, value: any): void {\r\n    if (typeof value !== 'undefined') {\r\n      // @ts-ignore\r\n      this.tooltip[key] = value;\r\n    }\r\n  }\r\n\r\n  private delayEnterLeave(isOrigin: boolean, isEnter: boolean, delay: number = -1): void {\r\n    if (this.delayTimer) {\r\n      this.clearTogglingTimer();\r\n    } else if (delay > 0) {\r\n      this.delayTimer = setTimeout(() => {\r\n        this.delayTimer = undefined;\r\n        isEnter ? this.show() : this.hide();\r\n      }, delay * 1000);\r\n    } else {\r\n      // `isOrigin` is used due to the tooltip will not hide immediately\r\n      // (may caused by the fade-out animation).\r\n      isEnter && isOrigin ? this.show() : this.hide();\r\n    }\r\n  }\r\n\r\n  private removeTriggerListeners(): void {\r\n    this.triggerUnlisteners.forEach(cancel => cancel());\r\n    this.triggerUnlisteners.length = 0;\r\n  }\r\n\r\n  private clearTogglingTimer(): void {\r\n    if (this.delayTimer) {\r\n      clearTimeout(this.delayTimer);\r\n      this.delayTimer = undefined;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  ComponentFactory,\r\n  ComponentFactoryResolver,\r\n  Directive,\r\n  ElementRef,\r\n  Host,\r\n  Input,\r\n  Optional,\r\n  Renderer2,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\n\r\nimport { NzNoAnimationDirective, NzTSType } from 'ng-zorro-antd/core';\r\nimport { NzTooltipTrigger } from 'ng-zorro-antd/tooltip';\r\n\r\nimport { BpsPopoverComponent } from './bps-popover.component';\r\nimport { NzTooltipBaseDirective } from './base/nz-tooltip-base.directive';\r\n\r\nexport type BpsPopoverType = 'variation_1' | 'variation_2' | 'variation_3' | 'variation_4' | 'variation_5' | 'variation_6' | 'variation_7a' |\r\n  'variation_7b' | 'variation_8a' | 'variation_8b' | 'variation_9a' | 'variation_9b' | 'variation_10' | 'variation_11';\r\n\r\n@Directive({\r\n  selector: '[bps-popover]',\r\n  exportAs: 'bpsPopover',\r\n  host: {\r\n    '[class.ant-popover-open]': 'isTooltipComponentVisible'\r\n  }\r\n})\r\nexport class BpsPopoverDirective extends NzTooltipBaseDirective {\r\n  @Input('bpsPopoverTitle') specificTitle: NzTSType;\r\n  @Input('bpsPopoverContent') specificContent: NzTSType;\r\n  @Input('bps-popover') directiveNameTitle: NzTSType | null;\r\n  @Input('bpsPopoverTrigger') specificTrigger: NzTooltipTrigger;\r\n  @Input('bpsPopoverPlacement') specificPlacement: string;\r\n  @Input('bpsPopoverType') popoverType: BpsPopoverType = 'variation_1';\r\n\r\n  componentFactory: ComponentFactory<BpsPopoverComponent> = this.resolver.resolveComponentFactory(BpsPopoverComponent);\r\n\r\n  constructor(\r\n    elementRef: ElementRef,\r\n    hostView: ViewContainerRef,\r\n    resolver: ComponentFactoryResolver,\r\n    renderer: Renderer2,\r\n    @Optional() tooltip: BpsPopoverComponent,\r\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective\r\n  ) {\r\n    super(elementRef, hostView, resolver, renderer, tooltip, noAnimation);\r\n  }\r\n}\r\n","\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  Host,\r\n  Input,\r\n  Optional,\r\n  TemplateRef,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\n\r\nimport { zoomBigMotion, NzNoAnimationDirective, NzTSType, InputBoolean } from 'ng-zorro-antd/core';\r\nimport { NzTooltipBaseComponentLegacy } from 'ng-zorro-antd';\r\nimport { BpsPopoverType } from '../bps-popover/bps-popover.directive';\r\n\r\n@Component({\r\n  selector: 'bps-tooltip',\r\n  exportAs: 'bpsTooltipComponent',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: [zoomBigMotion],\r\n  templateUrl: './bps-tooltip.component.html',\r\n  preserveWhitespaces: false,\r\n  providers: [\r\n    {\r\n      provide: NzTooltipBaseComponentLegacy,\r\n      useExisting: BpsToolTipComponent\r\n    }\r\n  ],\r\n  styles: [\r\n    `\r\n      .ant-tooltip {\r\n        position: relative;\r\n      }\r\n    `\r\n  ],\r\n  styleUrls: ['./bps-tooltip.component.css']\r\n})\r\nexport class BpsToolTipComponent extends NzTooltipBaseComponentLegacy {\r\n\r\n  @Input() bpsPopoverType: BpsPopoverType = 'variation_8a';\r\n  @Input() bpsTitle: NzTSType | null;\r\n  @Input() @InputBoolean() bpsTooltipDisabled = false;\r\n  @ContentChild('nzTemplate', { static: true }) nzTitleTemplate: TemplateRef<void>;\r\n\r\n  constructor(cdr: ChangeDetectorRef, @Host() @Optional() public noAnimation?: NzNoAnimationDirective) {\r\n    super(cdr);\r\n  }\r\n}\r\n","import {\r\n  ComponentFactory,\r\n  ComponentFactoryResolver,\r\n  Directive,\r\n  ElementRef,\r\n  Host,\r\n  Input,\r\n  Optional,\r\n  Renderer2,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\n\r\nimport { NzNoAnimationDirective, NzTSType, InputBoolean } from 'ng-zorro-antd/core';\r\n\r\nimport { BpsToolTipComponent } from './bps-tooltip.component';\r\nimport { NzTooltipBaseDirective } from '../bps-popover/base/nz-tooltip-base.directive';\r\nimport { NzTooltipTrigger, NzTooltipBaseComponentLegacy } from 'ng-zorro-antd';\r\nimport { BpsPopoverType } from '../bps-popover/bps-popover.directive';\r\n\r\n@Directive({\r\n  selector: '[bps-tooltip]',\r\n  exportAs: 'bpsTooltip',\r\n  host: {\r\n    '[class.ant-tooltip-open]': 'isTooltipComponentVisible',\r\n    '[class.bps-tooltip-disabled]': 'tooltipDisabled'\r\n  }\r\n})\r\nexport class BpsTooltipDirective extends NzTooltipBaseDirective {\r\n  /**\r\n   * The title that should have highest priority.\r\n   */\r\n  @Input('bpsTooltipTitle') specificTitle: NzTSType;\r\n\r\n  /**\r\n   * Use the directive's name as the title that have priority in the second place.\r\n   */\r\n  @Input('bps-tooltip') directiveNameTitle: NzTSType | null;\r\n\r\n  @Input('bpsTooltipTrigger') specificTrigger: NzTooltipTrigger;\r\n  @Input('bpsTooltipPlacement') specificPlacement: string;\r\n  @Input('bpsTooltipType') popoverType: BpsPopoverType = 'variation_8a';\r\n  @Input('bpsTooltipDisabled') @InputBoolean() tooltipDisabled = false;\r\n\r\n  componentFactory: ComponentFactory<BpsToolTipComponent> = this.resolver.resolveComponentFactory(BpsToolTipComponent);\r\n\r\n  constructor(\r\n    elementRef: ElementRef,\r\n    hostView: ViewContainerRef,\r\n    resolver: ComponentFactoryResolver,\r\n    renderer: Renderer2,\r\n    @Optional() _tooltip?: NzTooltipBaseComponentLegacy,\r\n    @Host() @Optional() noAnimation?: NzNoAnimationDirective\r\n  ) {\r\n    super(elementRef, hostView, resolver, renderer, _tooltip, noAnimation);\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\n\r\nimport { InputBoolean, NzDirectionVHType, NzSizeLDSType, NzUpdateHostClassService } from 'ng-zorro-antd/core';\r\n\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { NzListGrid } from 'ng-zorro-antd';\r\n\r\nexport type BpsListType = 'variation1' | 'variation2' | 'variation3' | 'variation4' | 'variation5' | 'variation6';\r\n\r\n@Component({\r\n  selector: 'bps-list, [bps-list]',\r\n  exportAs: 'bpsList',\r\n  templateUrl: './bps-list.component.html',\r\n  providers: [NzUpdateHostClassService],\r\n  preserveWhitespaces: false,\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styles: [\r\n    `\r\n      bps-list,\r\n      bps-list nz-spin {\r\n        display: block;\r\n      }\r\n    `\r\n  ],\r\n  styleUrls: ['./bps-list.component.css']\r\n})\r\nexport class BpsListComponent implements OnInit, OnChanges, OnDestroy {\r\n  // #region fields\r\n  // tslint:disable-next-line:no-any\r\n  @Input() bpsDataSource: any[];\r\n\r\n  @Input() @InputBoolean() bpsBordered = false;\r\n\r\n  @Input() @InputBoolean() bpsDisabled = false;\r\n\r\n  @Input() bpsGrid: NzListGrid;\r\n\r\n  @Input() bpsListType: BpsListType = 'variation1';\r\n\r\n  @Input() bpsHeader: string | TemplateRef<void>;\r\n\r\n  @Input() bpsFooter: string | TemplateRef<void>;\r\n\r\n  @Input() bpsItemLayout: NzDirectionVHType = 'horizontal';\r\n\r\n  @Input() bpsRenderItem: TemplateRef<void>;\r\n\r\n  @Input() @InputBoolean() bpsLoading = false;\r\n\r\n  @Input() bpsLoadMore: TemplateRef<void>;\r\n\r\n  @Input() bpsPagination: TemplateRef<void>;\r\n\r\n  @Input() bpsSize: NzSizeLDSType = 'default';\r\n\r\n  @Input() @InputBoolean() bpsSplit = true;\r\n\r\n  @Input() bpsNoResult: string | TemplateRef<void>;\r\n\r\n  // #endregion\r\n\r\n  // #region styles\r\n\r\n  private prefixCls = 'ant-list';\r\n\r\n  private _setClassMap(): void {\r\n    const classMap = {\r\n      ['bps-cmacs-custom-scrollbar']: true,\r\n      [this.prefixCls]: true,\r\n      [`bps-list-type-${this.bpsListType}`]: true,\r\n      [`${this.prefixCls}-vertical`]: this.bpsItemLayout === 'vertical',\r\n      [`${this.prefixCls}-lg`]: this.bpsSize === 'large',\r\n      [`${this.prefixCls}-sm`]: this.bpsSize === 'small',\r\n      [`${this.prefixCls}-split`]: this.bpsSplit,\r\n      [`${this.prefixCls}-bordered`]: this.bpsBordered,\r\n      [`${this.prefixCls}-loading`]: this.bpsLoading,\r\n      [`${this.prefixCls}-grid`]: this.bpsGrid,\r\n      [`${this.prefixCls}-something-after-last-item`]: !!(this.bpsLoadMore || this.bpsPagination || this.bpsFooter)\r\n    };\r\n    this.updateHostClassService.updateHostClass(this.el.nativeElement, classMap);\r\n  }\r\n\r\n  // #endregion\r\n\r\n  private itemLayoutNotifySource = new BehaviorSubject<NzDirectionVHType>(this.bpsItemLayout);\r\n\r\n  get itemLayoutNotify$(): Observable<NzDirectionVHType> {\r\n    return this.itemLayoutNotifySource.asObservable();\r\n  }\r\n\r\n  constructor(private el: ElementRef, private updateHostClassService: NzUpdateHostClassService) {}\r\n\r\n  ngOnInit(): void {\r\n    this._setClassMap();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this._setClassMap();\r\n    if (changes.bpsItemLayout) {\r\n      this.itemLayoutNotifySource.next(this.bpsItemLayout);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.itemLayoutNotifySource.unsubscribe();\r\n  }\r\n}\r\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  Renderer2,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\n\n@Component({\n  selector: 'bps-list-item-meta, [bps-list-item-meta]',\n  exportAs: 'bpsListItemMeta',\n  templateUrl: './bps-list-item-meta.component.html',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class BpsListItemMetaComponent {\n  avatarStr = '';\n  avatarTpl: TemplateRef<void>;\n\n  @Input()\n  set bpsAvatar(value: string | TemplateRef<void>) {\n    if (value instanceof TemplateRef) {\n      this.avatarStr = '';\n      this.avatarTpl = value;\n    } else {\n      this.avatarStr = value;\n    }\n  }\n\n  @Input() bpsTitle: string | TemplateRef<void>;\n\n  @Input() bpsDescription: string | TemplateRef<void>;\n\n  constructor(public elementRef: ElementRef, private renderer: Renderer2) {\n    this.renderer.addClass(elementRef.nativeElement, 'ant-list-item-meta');\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  QueryList,\n  Renderer2,\n  TemplateRef,\n  ViewEncapsulation,\r\n  EventEmitter,\r\n  Output\n} from '@angular/core';\n\nimport { InputBoolean, NzDirectionVHType } from 'ng-zorro-antd/core';\nimport { Subscription } from 'rxjs';\nimport { BpsListItemMetaComponent } from './bps-list-item-meta.component';\nimport { BpsListComponent } from './bps-list.component';\n\n@Component({\n  selector: 'bps-list-item, [bps-list-item]',\n  exportAs: 'bpsListItem',\n  templateUrl: './bps-list-item.component.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.bps-delete-icon-hovered]': '_onDeleteHover'\r\n  }\n})\nexport class BpsListItemComponent implements OnDestroy, AfterViewInit {\n\n  _onDeleteHover = false;\n\n  @ContentChildren(BpsListItemMetaComponent) metas!: QueryList<BpsListItemMetaComponent>;\n  @Input() bpsActions: Array<TemplateRef<void>> = [];\n  @Input() bpsContent: string | TemplateRef<void>;\n  @Input() bpsExtra: TemplateRef<void>;\n  @Input() @InputBoolean() @HostBinding('class.ant-list-item-no-flex') bpsNoFlex: boolean = false;\n  @Input() @InputBoolean() bpsDelete = false;\n\n  @Output() ondelete: EventEmitter<any> = new EventEmitter<any>();\n  @Output() ondeletehover: EventEmitter<any> = new EventEmitter<any>();\n  @Output() hover: EventEmitter<any> = new EventEmitter<any>();\n\n  private itemLayout: NzDirectionVHType;\n  private itemLayout$: Subscription;\n\n  get isVerticalAndExtra(): boolean {\n    return this.itemLayout === 'vertical' && !!this.bpsExtra;\n  }\n\n  onDeleteHover(event) {\n    this._onDeleteHover = event;\r\n    this.ondeletehover.emit(event);\r\n  }\n\n  onHover(event) {\r\n    this.hover.emit(event);\r\n  }\n\n  onDelete() {\n    this.ondelete.emit();\r\n  }\n\n  constructor(\n    elementRef: ElementRef,\n    renderer: Renderer2,\n    private parentComp: BpsListComponent,\n    private cdr: ChangeDetectorRef\n  ) {\n    renderer.addClass(elementRef.nativeElement, 'ant-list-item');\n  }\n\n  ngAfterViewInit(): void {\n    this.itemLayout$ = this.parentComp.itemLayoutNotify$.subscribe(val => {\n      this.itemLayout = val;\n      this.cdr.detectChanges();\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.itemLayout$) {\n      this.itemLayout$.unsubscribe();\n    }\n  }\n}\n","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  AfterViewInit,\r\n  TemplateRef,\r\n  ViewChild,\r\n  TrackByFunction,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  ElementRef,\r\n  HostListener,\r\n  ChangeDetectionStrategy,\r\n} from '@angular/core';\r\nimport { Subject, config } from 'rxjs';\r\nimport { takeUntil, debounceTime } from 'rxjs/operators';\r\n\r\nimport {InputBoolean, InputNumber, NzSizeMDSType, toBoolean} from 'ng-zorro-antd/core';\r\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\r\nimport { TableConfig, Field } from '../core/interfaces/grid-config';\r\nimport { CeldType } from '../core/enums/celdType.enum';\r\nimport { BpsInputDirective } from '../bps-input/bps-input.directive';\r\n\r\nexport type BpsTableType = 'report' | 'home' | 'glass_profile';\r\n\r\n@Component({\r\n  // tslint:disable-next-line: component-selector\r\n  selector: 'bps-table',\r\n  exportAs: 'bpsTable',\r\n  templateUrl: './bps-table.component.html',\r\n  styleUrls: ['./bps-table.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n// tslint:disable-next-line no-any\r\nexport class BpsTableComponent<T = any> implements OnInit, OnDestroy, AfterViewInit, OnChanges {\r\n  locale: any = {}; // tslint:disable-line:no-any\r\n  private destroy$ = new Subject<void>();\r\n  checkboxCache: CheckboxSelect[] = [];\r\n  mapOfExpandData: { [key: string]: boolean } = {};\r\n  _data = [];\r\n  editId = null;\r\n  editProperty = null;\r\n  isExpanded = false;\r\n  searchBoxHovered = false;\r\n  private _searchSubject: Subject<string> = new Subject();\r\n\r\n  /* Table API */ \r\n  // tslint:disable-next-line: no-input-rename\r\n  @Input()\r\n  set data(data) {\r\n    this._data = data;\r\n    this.updateCheckboxCache();\r\n  }\r\n  @Input() @InputBoolean() frontPagination = true;\r\n  @Input() total = 0;\r\n  @Input() pageIndex = 1;\r\n  @Input() pageSize = 10;\r\n  @Input() @InputBoolean() showPagination = true;\r\n  @Input() paginationPosition: 'top' | 'bottom' | 'both' = 'bottom';\r\n  @Input() @InputBoolean() bordered = false;\r\n  @Input() widthConfig: string[] = [];\r\n  @Input() @InputBoolean() loading = false;\r\n  @Input() loadingDelay = 0;\r\n  @Input() loadingIndicator: TemplateRef<void>;\r\n  @Input() scroll: { x?: string | null; y?: string | null } = { x: null, y: null };\r\n  @Input() title: string | TemplateRef<void>;\r\n  @Input() footer: string | TemplateRef<void>;\r\n  @Input() noResult: string | TemplateRef<void>;\r\n  @Input() pageSizeOptions = [10, 20, 30, 40, 50];\r\n  @Input() @InputBoolean() showQuickJumper = false;\r\n  @Input() @InputBoolean() showSizeChanger = false;\r\n  @Input() showTotal: TemplateRef<{ $implicit: number; range: [number, number] }>;\r\n  @Input() @InputBoolean() hideOnSinglePage = false;\r\n  @Input() @InputBoolean() simple = false;\r\n  @Input() @InputNumber() virtualItemSize = 0;\r\n  @Input() @InputNumber() virtualMaxBufferPx = 200;\r\n  @Input() @InputNumber() virtualMinBufferPx = 100;\r\n  @Input() virtualForTrackBy: TrackByFunction<T>;\r\n  @Input() @InputBoolean() inlineEdit = false;\r\n  @Output() pageIndexChange = new EventEmitter<any>();\r\n  @Output() currentPageDataChange = new EventEmitter<any>();\r\n  @Output() queryParamsChange = new EventEmitter<any>();\r\n  @Output() pageSizeChange = new EventEmitter<any>();\r\n  @Output() onclickRow = new EventEmitter<any>();\r\n  @Output() ondblclickRow = new EventEmitter<any>();\r\n  @Output() selectionChange = new EventEmitter<any>();\r\n\r\n/* Thead API */\r\n  @Input() singleSort = true;\r\n  @Output() sortChange = new EventEmitter<any>();\r\n  \r\n  /* BPS API */ \r\n  @Input() config: TableConfig;\r\n  @Output() configChange: EventEmitter<TableConfig> = new EventEmitter<TableConfig>();\r\n  @Input() gridID: string;\r\n  @Input() filterPlaceholder: string;\r\n  @Output() onedit = new EventEmitter<any>();\r\n  @Input() tableType: BpsTableType = 'report';\r\n  @Input() @InputBoolean() expandable = false;\r\n  @Output() searchValueChange: EventEmitter<string> = new EventEmitter<string>();\r\n  @Output() moreBtnClicked: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() deleteBtnClicked: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() expandChange: EventEmitter<any> = new EventEmitter<any>();\r\n  @Input() moreMenu: TemplateRef<any>;\r\n  @Input() deleteMenu: TemplateRef<any>;\r\n  @Input() rowExpandTemplate: TemplateRef<any>;\r\n\r\n  @ViewChild(BpsInputDirective, { static: false, read: ElementRef }) inputElement: ElementRef;\r\n\r\n  @HostListener('window:mouseup', ['$event'])\r\n  handleClick(e: MouseEvent): void {\r\n    if (this.editId !== null && this.inputElement && this.inputElement.nativeElement !== e.target) {\r\n      this.emitOnEditEvent();\r\n      this.editId = null;\r\n    }\r\n  }\r\n\r\n  sort(sort: { key: string; value: string }): void {\r\n    const field: any = this.getFields().filter(item => item.property === sort.key)[0];\r\n    if (field.disabled) {\r\n      return;\r\n    }\r\n    this.sortChange.emit({ sortName: sort.key, sortValue: sort.value });\r\n  }\r\n\r\n  emitOnEditEvent() {\r\n    let editedEl = this._data.filter(el => el[this.config.fieldId] === this.editId);\r\n    if (editedEl.length) {\r\n      this.onedit.emit(editedEl);\r\n    }\r\n  }\r\n\r\n  endEditMode($event: KeyboardEvent, index: number, data: any = null) {\r\n    if ($event.key === ('Enter' || 'enter')) {\r\n      this.emitOnEditEvent();\r\n      this.editId = null;\r\n      this.editProperty = null;\r\n    }\r\n  }\r\n\r\n  preventDefault($event: MouseEvent) {\r\n    $event.preventDefault();\r\n    $event.stopImmediatePropagation();\r\n  }\r\n\r\n  emitBpsEvent($event, type: string) {\r\n    switch (type) {\r\n      case 'pageIndex':\r\n        this.pageIndexChange.emit($event);\r\n        break;\r\n      case 'currentPageData':\r\n        this.currentPageDataChange.emit($event);\r\n        break;\r\n      case 'queryParams':\r\n        this.queryParamsChange.emit($event);\r\n        break;\r\n      case 'pageSize':\r\n        this.pageSizeChange.emit($event);\r\n        break;\r\n      case 'moreBtnClicked':\r\n        this.moreBtnClicked.emit($event);\r\n        break;\r\n      case 'deleteBtnClicked':\r\n        this.deleteBtnClicked.emit($event);\r\n        break;\r\n    }\r\n  }\r\n\r\n  getFields(): Field[] {\r\n    return this.config ? this.config.fields.filter(item => item.hidden === undefined || !item.hidden) : [];\r\n  }\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private i18n: NzI18nService\r\n  ) {\r\n    this._setSearchSubscription();\r\n  }\r\n\r\n  private _setSearchSubscription() {\r\n    this._searchSubject.pipe(\r\n      debounceTime(500)\r\n    ).subscribe((searchValue: string) => {\r\n      this.searchValueChange.emit(searchValue);\r\n    });\r\n  }\r\n\r\n  public updateSearch(searchTextValue: string) {\r\n    this._searchSubject.next(searchTextValue);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.data && this.config) {\r\n      this.updateCheckboxCache();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\r\n      this.locale = this.i18n.getLocaleData('Table');\r\n      this.cdr.markForCheck();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n    this._searchSubject.unsubscribe();\r\n  }\r\n\r\n  isCeldTypeTemplateRef(field: Field) {\r\n    return field.celdType === CeldType.TemplateRef;\r\n  }\r\n\r\n  isCeldTypeDefault(field: Field) {\r\n    return field.celdType === CeldType.Default;\r\n  }\r\n\r\n  getTDClassMap(field: Field, data, fi = 9999) {\r\n    return {\r\n      ...field.ngClass,\r\n      ['bps-td-disabled']: data.disabled,\r\n      ['bps-td-no-padding']: data[this.config.fieldId] === this.editId,\r\n      ['bps-fst-column']: !fi,\r\n    }\r\n  }\r\n\r\n  isRowSelected(data: any): boolean {\r\n    if (this.config) {\r\n      const dataSelected = this.checkboxCache.filter(item => item.selected).map(item => item.data[this.config.fieldId]);\r\n      return dataSelected.indexOf(data[this.config.fieldId]) !== -1;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  updateCheckboxCache(): void {\r\n    const temp = [...this.checkboxCache];\r\n    this.checkboxCache.length = 0;\r\n    this._data.forEach(item => {\r\n      const checkItem = temp.filter(e => e.data[this.config.fieldId] === item[this.config.fieldId]);\r\n      this.checkboxCache.push({\r\n        selected: checkItem.length ? checkItem[0].selected : false,\r\n        data: item\r\n      });\r\n    });\r\n  }\r\n\r\n  clicks = 0;\r\n  clickRow(event: MouseEvent, data: any) {\r\n    this.clicks++;\r\n    setTimeout(() => {\r\n      if (this.clicks === 1) {\r\n        this.selectRow(data);\r\n        if (this.expandable) {\r\n          const key = this.config.fieldId;\r\n          this.expandRow(data, !this.mapOfExpandData[data[key]]);\r\n          this.cdr.detectChanges();\r\n        }\r\n        event.preventDefault();\r\n        event.stopImmediatePropagation();\r\n      } else if (this.clicks === 2){\r\n        this.ondblclickRow.emit(data);\r\n      }\r\n      this.clicks = 0;\r\n    }, 300);\r\n  }\r\n\r\n  startEdit(data: any, event: MouseEvent): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    if (this.inlineEdit && !data.disabled) {\r\n      this.editId = data[this.config.fieldId];\r\n      this.cdr.detectChanges();\r\n      this.inputElement.nativeElement.focus();\r\n      setTimeout(() => {\r\n        this.inputElement.nativeElement.select();\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  editRow(data, property) {\r\n    if (!data.disabled) {\r\n      this.editId = data[this.config.fieldId];\r\n      this.editProperty = property;\r\n      this.cdr.detectChanges();\r\n      this.inputElement.nativeElement.focus();\r\n      setTimeout(() => {\r\n        this.inputElement.nativeElement.select();\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  selectRow(data: any, selectionOnly = false) {\r\n    if (!data.disabled) {\r\n      if (!selectionOnly) {\r\n        this.onclickRow.emit(data);\r\n      }\r\n      this.checkboxCache.forEach(item => {\r\n        if (item.data[this.config.fieldId] === data[this.config.fieldId]) {\r\n          item.selected = true;\r\n          this.selectionChange.emit(item);\r\n        } else {\r\n          item.selected = false;\r\n        }\r\n      });\r\n      this.cdr.detectChanges();\r\n    }  \r\n  }\r\n\r\n  expandRow(data, $event) {\r\n    this.mapOfExpandData = {};\r\n    this.mapOfExpandData[data[this.config.fieldId]] = $event;\r\n    this.expandChange.emit(this.mapOfExpandData);\r\n  }\r\n\r\n}\r\n\r\nexport interface CheckboxSelect {\r\n  data: any;\r\n  selected: boolean;\r\n}\r\n","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  AfterViewInit,\r\n  TemplateRef,\r\n  ViewChild,\r\n  TrackByFunction,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  ElementRef,\r\n  HostListener,\r\n  ChangeDetectionStrategy,\r\n} from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil, window } from 'rxjs/operators';\r\n\r\nimport {InputBoolean, InputNumber, NzSizeMDSType, toBoolean} from 'ng-zorro-antd/core';\r\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\r\nimport { TableConfig, Field } from '../core/interfaces/grid-config';\r\nimport { CeldType } from '../core/enums/celdType.enum';\r\nimport { BpsInputDirective } from '../bps-input/bps-input.directive';\r\nimport { CheckboxSelect } from '../bps-table/bps-table.component';\r\nimport { NzTableComponent } from 'ng-zorro-antd';\r\n\r\n@Component({\r\n  // tslint:disable-next-line: component-selector\r\n  selector: 'bps-table-expandable-panel',\r\n  exportAs: 'bpsTableExpandablePanel',\r\n  templateUrl: './bps-table-expandable-panel.component.html',\r\n  styleUrls: ['./bps-table-expandable-panel.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n// tslint:disable-next-line no-any\r\nexport class BpsTableExpandablePanelComponent<T = any> implements OnInit, OnDestroy, AfterViewInit, OnChanges {\r\n  locale: any = {}; // tslint:disable-line:no-any\r\n  private destroy$ = new Subject<void>();\r\n  checkboxCache: CheckboxSelect[] = [];\r\n  mapOfExpandData: { [key: string]: boolean } = {};\r\n  _data = [];\r\n  editId = null;\r\n  isExpanded = false;\r\n  searchBoxHovered = false;\r\n  private _searchSubject: Subject<string> = new Subject();\r\n\r\n  /* Table API */ \r\n  // tslint:disable-next-line: no-input-rename\r\n  @Input()\r\n  set data(data) {\r\n    this._data = data;\r\n    this.updateCheckboxCache();\r\n  }\r\n  @Input() @InputBoolean() frontPagination = false;\r\n  @Input() total = 0;\r\n  @Input() pageIndex = 1;\r\n  @Input() pageSize = 10;\r\n  @Input() @InputBoolean() showPagination = false;\r\n  @Input() paginationPosition: 'top' | 'bottom' | 'both' = 'bottom';\r\n  @Input() @InputBoolean() bordered = false;\r\n  @Input() widthConfig: string[] = [];\r\n  @Input() @InputBoolean() loading = false;\r\n  @Input() loadingDelay = 0;\r\n  @Input() loadingIndicator: TemplateRef<void>;\r\n  @Input() scroll: { x?: string | null; y?: string | null } = { x: null, y: null };\r\n  @Input() title: string | TemplateRef<void>;\r\n  @Input() footer: string | TemplateRef<void>;\r\n  @Input() noResult: string | TemplateRef<void>;\r\n  @Input() pageSizeOptions = [10, 20, 30, 40, 50];\r\n  @Input() @InputBoolean() showQuickJumper = false;\r\n  @Input() @InputBoolean() showSizeChanger = false;\r\n  @Input() showTotal: TemplateRef<{ $implicit: number; range: [number, number] }>;\r\n  @Input() @InputBoolean() hideOnSinglePage = false;\r\n  @Input() @InputBoolean() simple = false;\r\n  @Input() @InputBoolean() virtualScroll = false;\r\n  @Input() @InputNumber() virtualItemSize = 0;\r\n  @Input() @InputNumber() virtualMaxBufferPx = 200;\r\n  @Input() @InputNumber() virtualMinBufferPx = 100;\r\n  @Input() virtualForTrackBy: TrackByFunction<T>;\r\n  @Input() @InputBoolean() inlineEdit = false;\r\n  @Output() pageIndexChange = new EventEmitter<any>();\r\n  @Output() currentPageDataChange = new EventEmitter<any>();\r\n  @Output() queryParamsChange = new EventEmitter<any>();\r\n  @Output() pageSizeChange = new EventEmitter<any>();\r\n  @Output() onclickRow = new EventEmitter<any>();\r\n  @Output() ondblclickRow = new EventEmitter<any>();\r\n  @Output() selectionChange = new EventEmitter<any>();\r\n\r\n/* Thead API */\r\n  @Input() singleSort = true;\r\n  @Output() sortChange = new EventEmitter<any>();\r\n  \r\n  /* BPS API */ \r\n  @Input() config: TableConfig;\r\n  @Output() configChange: EventEmitter<TableConfig> = new EventEmitter<TableConfig>();\r\n  @Input() gridID: string;\r\n  @Output() onedit = new EventEmitter<any>();\r\n  @Input() menuTemplate: TemplateRef<void>;\r\n  @Input() currentPreviewTemplate: TemplateRef<void>;\r\n\r\n  @ViewChild(BpsInputDirective, { static: false, read: ElementRef }) inputElement: ElementRef;\r\n  @ViewChild('gridComponent', { read: NzTableComponent, static: false }) gridComponent: NzTableComponent;\r\n  @ViewChild('bpsExpandablePanel', { read: ElementRef, static: false }) panel: ElementRef;\r\n\r\n  @HostListener('window:mouseup', ['$event'])\r\n  handleClick(e: MouseEvent): void {\r\n    if (this.editId !== null && this.inputElement && !this.inputElement.nativeElement.isEqualNode(e.target)) {\r\n      this.emitOnEditEvent();\r\n      this.editId = null;\r\n      this.cdr.detectChanges();\r\n    }\r\n  }\r\n\r\n  emitOnEditEvent() {\r\n    let editedEl = this._data.filter(el => el[this.config.fieldId] === this.editId);\r\n    if (editedEl.length) {\r\n      this.onedit.emit(editedEl);\r\n    }\r\n  }\r\n\r\n  endEditMode($event: KeyboardEvent, index: number, data: any = null) {\r\n    if ($event.key === ('Enter' || 'enter')) {\r\n      this.emitOnEditEvent();\r\n      this.editId = null;\r\n      this.cdr.detectChanges();\r\n    }\r\n  }\r\n\r\n  preventDefault($event: MouseEvent) {\r\n    $event.preventDefault();\r\n    $event.stopImmediatePropagation();\r\n  }\r\n\r\n  emitBpsEvent($event, type: string) {\r\n    switch (type) {\r\n      case 'pageIndex':\r\n        this.pageIndexChange.emit($event);\r\n        break;\r\n      case 'currentPageData':\r\n        this.currentPageDataChange.emit($event);\r\n        break;\r\n      case 'queryParams':\r\n        this.queryParamsChange.emit($event);\r\n        break;\r\n      case 'pageSize':\r\n        this.pageSizeChange.emit($event);\r\n        break;\r\n    }\r\n  }\r\n\r\n  getFields(): Field[] {\r\n    return this.config ? this.config.fields.filter(item => item.hidden === undefined || !item.hidden) : [];\r\n  }\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private i18n: NzI18nService\r\n  ) {  }\r\n\r\n  ngAfterViewInit() {\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.data && this.config) {\r\n      this.updateCheckboxCache();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\r\n      this.locale = this.i18n.getLocaleData('Table');\r\n      this.cdr.markForCheck();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n    this._searchSubject.unsubscribe();\r\n  }\r\n\r\n  isCeldTypeTemplateRef(field: Field) {\r\n    return field.celdType === CeldType.TemplateRef;\r\n  }\r\n\r\n  isCeldTypeDefault(field: Field) {\r\n    return field.celdType === CeldType.Default;\r\n  }\r\n\r\n  getTDClassMap(field: Field, data, fi = 9999) {\r\n    return {\r\n      ...field.ngClass,\r\n      ['bps-td-expandable-panel']: true,\r\n      ['bps-td-disabled']: data.disabled,\r\n      ['bps-td-no-padding']: data[this.config.fieldId] === this.editId,\r\n      ['bps-fst-column']: !fi,\r\n    }\r\n  }\r\n\r\n  isRowSelected(data: any): boolean {\r\n    if (this.config) {\r\n      const dataSelected = this.checkboxCache.filter(item => item.selected).map(item => item.data[this.config.fieldId]);\r\n      return dataSelected.indexOf(data[this.config.fieldId]) !== -1;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  updateCheckboxCache(): void {\r\n    this.checkboxCache.length = 0;\r\n    this._data.forEach(item => {\r\n      this.checkboxCache.push({\r\n        selected: item.selected ? item.selected : false,\r\n        data: item\r\n      });\r\n    });\r\n  }\r\n\r\n  clicks = 0;\r\n  clickRow(event: MouseEvent, data: any) {\r\n    event.preventDefault();\r\n    event.stopImmediatePropagation();\r\n    this.clicks++;\r\n    setTimeout(() => {\r\n      if (this.clicks === 1) {\r\n        this.selectRow(data);\r\n      } else if (this.clicks === 2) {\r\n        this.ondblclickRow.emit(data);\r\n      }\r\n      this.clicks = 0;\r\n    }, 300);\r\n  }\r\n\r\n  startEdit(data: any, event: MouseEvent): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    if (this.inlineEdit && !data.disabled) {\r\n      this.editId = data[this.config.fieldId];\r\n      this.cdr.detectChanges();\r\n      this.inputElement.nativeElement.focus();\r\n      setTimeout(() => {\r\n        this.inputElement.nativeElement.select();\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  selectText($event) {\r\n    $event.target.select();\r\n  }\r\n\r\n  selectRow(data: any) {\r\n    if (!data.disabled) {\r\n      this.onclickRow.emit(data);\r\n      this.checkboxCache.forEach(item => {\r\n        if (item.data[this.config.fieldId] === data[this.config.fieldId]) {\r\n          item.selected = true;\r\n          this.selectionChange.emit(item);\r\n        } else {\r\n          item.selected = false;\r\n        }\r\n      });\r\n    }  \r\n  }\r\n\r\n}\r\n","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n  ChangeDetectionStrategy,\r\n  Input,\r\n  EventEmitter,\r\n  Output,\r\n  AfterViewInit,\r\n} from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { InputBoolean } from 'ng-zorro-antd';\r\n\r\n@Component({\r\n  // tslint:disable-next-line: component-selector\r\n  selector: 'bps-configuration-selector',\r\n  exportAs: 'bpsConfigurationSelector',\r\n  templateUrl: './bps-configuration-selector.component.html',\r\n  styleUrls: ['./bps-configuration-selector.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n// tslint:disable-next-line no-any\r\nexport class BpsConfigurationSelectorComponent<T = any> implements OnInit, OnDestroy, AfterViewInit {\r\n  \r\n  private destroy$ = new Subject<void>();\r\n  currentDisplayedDataIndex = null;\r\n  _data = [];\r\n  _currentDisplayedData = null;\r\n\r\n  @Input()\r\n  set currentDisplayedData(value) {\r\n    this._currentDisplayedData = value;\r\n    this.currentDisplayedDataIndex = this.getCurrentElementIndex();\r\n  };\r\n\r\n  @Input() propertyName = '';\r\n  @Input() @InputBoolean() disabled = false;\r\n  @Output() currentDisplayedDataChange: EventEmitter<any> = new EventEmitter<any>();\r\n  @Input()\r\n  set data(data) {\r\n    this._data = data;\r\n    if (this._data.length) {\r\n      if (!this.currentDisplayedData) {\r\n        this._currentDisplayedData = this._data[0];\r\n        this.currentDisplayedDataIndex = 0;\r\n      } else {\r\n        this.currentDisplayedDataIndex = this.getCurrentElementIndex();\r\n      }\r\n    }\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef\r\n  ) {  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  getCurrentElementIndex() {\r\n    for (let i = 0; i < this._data.length; i++) {\r\n      if (this._data[i] === this._currentDisplayedData) {\r\n        return i;\r\n      }\r\n    }\r\n  }\r\n\r\n  getPrevElement() {\r\n    if (this.currentDisplayedDataIndex && !this.disabled) {\r\n      this.currentDisplayedDataIndex--;\r\n      this._currentDisplayedData = this._data[this.currentDisplayedDataIndex];\r\n      this.currentDisplayedDataChange.emit(this._currentDisplayedData);\r\n    }\r\n  }\r\n\r\n  getNextElement() {\r\n    if (this.currentDisplayedDataIndex + 1 < this._data.length && !this.disabled) {\r\n      this.currentDisplayedDataIndex++;\r\n      this._currentDisplayedData = this._data[this.currentDisplayedDataIndex];\r\n      this.currentDisplayedDataChange.emit(this._currentDisplayedData);\r\n    }\r\n  }\r\n\r\n}\r\n","import { Directive, ElementRef, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: 'a[bps-dropdown]',\n  exportAs: 'bpsDropdown'\n})\nexport class BpsDropDownADirective {\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {\n    this.renderer.addClass(this.elementRef.nativeElement, 'ant-dropdown-link');\n  }\n}\n","import {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  Host,\r\n  Injector,\r\n  Optional,\r\n  Renderer2,\r\n  Self,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport {\r\n  slideMotion,\r\n  NzDropdownHigherOrderServiceToken,\r\n  NzMenuBaseService,\r\n  NzNoAnimationDirective\r\n} from 'ng-zorro-antd/core';\r\n\r\nimport { Subject } from 'rxjs';\r\nimport { NzMenuDropdownService } from 'ng-zorro-antd';\r\n\r\nexport type NzPlacementType = 'bottomLeft' | 'bottomCenter' | 'bottomRight' | 'topLeft' | 'topCenter' | 'topRight' | 'rightTop';\r\n\r\nexport function dropdownMenuServiceFactory(injector: Injector): NzMenuBaseService {\r\n  return injector.get(NzMenuDropdownService);\r\n}\r\n\r\n@Component({\r\n  selector: `bps-dropdown-menu`,\r\n  templateUrl: './bps-dropdown-menu.component.html',\r\n  exportAs: `bpsDropdownMenu`,\r\n  animations: [slideMotion],\r\n  styleUrls: ['./bps-dropdown-menu.component.css'],\r\n  providers: [\r\n    NzMenuDropdownService,\r\n    {\r\n      provide: NzDropdownHigherOrderServiceToken,\r\n      useFactory: dropdownMenuServiceFactory,\r\n      deps: [[new Self(), Injector]]\r\n    }\r\n  ],\r\n  styles: [\r\n    `\r\n      :root .ant-dropdown.nz-dropdown {\r\n        top: 0;\r\n        left: 0;\r\n        position: relative;\r\n        width: 100%;\r\n        margin-top: 4px;\r\n        margin-bottom: 4px;\r\n      }\r\n    `\r\n  ],\r\n  preserveWhitespaces: false,\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class BpsDropdownMenuComponent implements AfterContentInit {\r\n  open = false;\r\n  triggerWidth = 0;\r\n  dropDownPosition: 'top' | 'center' | 'bottom' = 'bottom';\r\n  visible$ = new Subject<boolean>();\r\n  bpsTrigger: 'click' | 'hover' = 'hover';\r\n  bpsPlacement: NzPlacementType = 'bottomLeft';\r\n  bpsOverlayClassName = '';\r\n  bpsOverlayStyle: { [key: string]: string } = {};\r\n  bpsTableFilter = false;\r\n  // tslint:disable-next-line:no-any\r\n  @ViewChild(TemplateRef, { static: true }) templateRef: TemplateRef<any>;\r\n\r\n  setVisibleStateWhen(visible: boolean, trigger: 'click' | 'hover' | 'all' = 'all'): void {\r\n    if (this.bpsTrigger === trigger || trigger === 'all') {\r\n      this.visible$.next(visible);\r\n    }\r\n  }\r\n\r\n  setValue<T extends keyof BpsDropdownMenuComponent>(key: T, value: this[T]): void {\r\n    this[key] = value;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private elementRef: ElementRef,\r\n    private renderer: Renderer2,\r\n    public viewContainerRef: ViewContainerRef,\r\n    public nzMenuDropdownService: NzMenuDropdownService,\r\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective\r\n  ) {}\r\n\r\n  ngAfterContentInit(): void {\r\n    this.renderer.removeChild(this.renderer.parentNode(this.elementRef.nativeElement), this.elementRef.nativeElement);\r\n  }\r\n}\r\n","import { hasModifierKey, ESCAPE } from '@angular/cdk/keycodes';\r\nimport {\r\n  ConnectedPosition,\r\n  ConnectionPositionPair,\r\n  FlexibleConnectedPositionStrategy,\r\n  Overlay,\r\n  OverlayConfig,\r\n  OverlayRef\r\n} from '@angular/cdk/overlay';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { TemplatePortal } from '@angular/cdk/portal';\r\nimport {\r\n  AfterViewInit,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Host,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  Optional,\r\n  Output,\r\n  Renderer2,\r\n  SimpleChanges,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport { DEFAULT_DROPDOWN_POSITIONS, InputBoolean, POSITION_MAP } from 'ng-zorro-antd/core';\r\nimport { combineLatest, fromEvent, merge, EMPTY, Observable, Subject, Subscription } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, filter, map, mapTo, takeUntil, tap } from 'rxjs/operators';\r\nimport { BpsDropdownMenuComponent, NzPlacementType } from './bps-dropdown-menu.component';\r\nimport { BpsButtonComponent } from '../bps-button/bps-button.component';\r\nimport { BpsButtonGroupComponent } from '../bps-button/bps-button-group.component';\r\n\r\n@Directive({\r\n  selector: '[bps-dropdown]',\r\n  exportAs: 'bpsDropdown'\r\n})\r\nexport class BpsDropDownDirective implements AfterViewInit, OnDestroy, OnChanges {\r\n  private portal: TemplatePortal;\r\n  private overlayRef: OverlayRef | null = null;\r\n  private destroy$ = new Subject();\r\n  private triggerWidth = 0;\r\n  private el: HTMLElement = this.elementRef.nativeElement;\r\n  private dropdownOpen = false;\r\n  private positionStrategy: FlexibleConnectedPositionStrategy;\r\n  private positions: ConnectionPositionPair[] = [...DEFAULT_DROPDOWN_POSITIONS];\r\n  private positionSubscription = Subscription.EMPTY;\r\n  private overlaySubscription = Subscription.EMPTY;\r\n  readonly hover$: Observable<boolean> = merge(\r\n    fromEvent(this.el, 'mouseenter').pipe(mapTo(true)),\r\n    fromEvent(this.el, 'mouseleave').pipe(mapTo(false))\r\n  );\r\n  readonly $click: Observable<boolean> = fromEvent(this.el, 'click').pipe(\r\n    tap(e => e.stopPropagation()),\r\n    mapTo(true)\r\n  );\r\n  @Input() bpsDropdownMenu: BpsDropdownMenuComponent;\r\n  @Input() bpsTrigger: 'click' | 'hover' = 'hover';\r\n  @Input() bpsMatchWidthElement: ElementRef;\r\n  @Input() @InputBoolean() bpsBackdrop = true;\r\n  @Input() @InputBoolean() bpsClickHide = true;\r\n  @Input() @InputBoolean() bpsDisabled = false;\r\n  @Input() @InputBoolean() bpsVisible = false;\r\n  @Input() @InputBoolean() bpsTableFilter = false;\r\n  @Input() bpsOverlayClassName = '';\r\n  @Input() bpsOverlayStyle: { [key: string]: string } = {};\r\n  @Input() bpsPlacement: NzPlacementType = 'bottomLeft';\r\n  @Output() readonly bpsVisibleChange: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  setDisabled(disabled: boolean): void {\r\n    if (disabled) {\r\n      this.renderer.setAttribute(this.el, 'disabled', '');\r\n      if (this.bpsVisible) {\r\n        this.bpsVisible = false;\r\n        this.bpsVisibleChange.emit(this.bpsVisible);\r\n        this.updateOverlayByVisible();\r\n      }\r\n    } else {\r\n      this.renderer.removeAttribute(this.el, 'disabled');\r\n    }\r\n  }\r\n\r\n  private getOverlayConfig(): OverlayConfig {\r\n    return new OverlayConfig({\r\n      positionStrategy: this.overlay\r\n        .position()\r\n        .flexibleConnectedTo(this.el)\r\n        .withLockedPosition(),\r\n      minWidth: this.triggerWidth,\r\n      hasBackdrop: this.bpsTrigger === 'click',\r\n      backdropClass: this.bpsBackdrop ? undefined : 'nz-overlay-transparent-backdrop',\r\n      scrollStrategy: this.overlay.scrollStrategies.reposition()\r\n    });\r\n  }\r\n\r\n  private createOverlay(): OverlayRef {\r\n    if (!this.overlayRef) {\r\n      const config = this.getOverlayConfig();\r\n      this.overlayRef = this.overlay.create(config);\r\n      this.subscribeOverlayEvent(this.overlayRef);\r\n      this.subscribeToPositions(config.positionStrategy as FlexibleConnectedPositionStrategy);\r\n      return this.overlayRef;\r\n    } else {\r\n      const overlayConfig = this.overlayRef.getConfig();\r\n      this.updateOverlayConfig(overlayConfig);\r\n      return this.overlayRef;\r\n    }\r\n  }\r\n\r\n  updateOverlayConfig(overlayConfig: OverlayConfig): OverlayConfig {\r\n    overlayConfig.minWidth = this.triggerWidth;\r\n    overlayConfig.hasBackdrop = this.bpsTrigger === 'click';\r\n    return overlayConfig;\r\n  }\r\n\r\n  dispose(): void {\r\n    if (this.overlayRef) {\r\n      this.overlayRef.dispose();\r\n      this.overlayRef = null;\r\n      this.positionSubscription.unsubscribe();\r\n      this.overlaySubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private subscribeToPositions(position: FlexibleConnectedPositionStrategy): void {\r\n    this.positionSubscription.unsubscribe();\r\n    this.positionSubscription = position.positionChanges.pipe(takeUntil(this.destroy$)).subscribe(change => {\r\n      this.bpsOverlayClassName = '';\r\n      this.bpsDropdownMenu.setValue('bpsOverlayClassName', this.bpsOverlayClassName);\r\n      if (this.bpsPlacement === 'bottomRight' && change.connectionPair.originY === 'top') {\r\n        this.bpsOverlayClassName = 'bps-forced-updated-position';\r\n        this.bpsDropdownMenu.setValue('bpsOverlayClassName', this.bpsOverlayClassName);\r\n      }\r\n      if (this.bpsPlacement === 'rightTop' && (change.connectionPair.overlayX === 'end' || change.connectionPair.originY === 'bottom')) {\r\n        this.bpsOverlayClassName = 'bps-forced-updated-position';\r\n        this.bpsDropdownMenu.setValue('bpsOverlayClassName', this.bpsOverlayClassName);\r\n      }\r\n      this.bpsDropdownMenu.setValue('dropDownPosition', change.connectionPair.originY);\r\n    });\r\n  }\r\n\r\n  private subscribeOverlayEvent(overlayRef: OverlayRef): void {\r\n    this.overlaySubscription.unsubscribe();\r\n    this.overlaySubscription = merge(\r\n      overlayRef.backdropClick(),\r\n      overlayRef.detachments(),\r\n      overlayRef.keydownEvents().pipe(filter(e => e.keyCode === ESCAPE && !hasModifierKey(e)))\r\n    )\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(() => {\r\n        this.bpsDropdownMenu.setVisibleStateWhen(false);\r\n      });\r\n  }\r\n\r\n  private getPortal(): TemplatePortal {\r\n    if (!this.portal || this.portal.templateRef !== this.bpsDropdownMenu.templateRef) {\r\n      this.portal = new TemplatePortal(this.bpsDropdownMenu.templateRef, this.viewContainerRef);\r\n    }\r\n    return this.portal;\r\n  }\r\n\r\n  private openMenu(): void {\r\n    if (!this.dropdownOpen) {\r\n      const overlayRef = this.createOverlay();\r\n      const overlayConfig = overlayRef.getConfig();\r\n      this.bpsDropdownMenu.setValue('open', true);\r\n      this.setPosition(overlayConfig.positionStrategy as FlexibleConnectedPositionStrategy);\r\n      overlayRef.attach(this.getPortal());\r\n      this.dropdownOpen = true;\r\n    }\r\n  }\r\n\r\n  private closeMenu(): void {\r\n    if (this.overlayRef) {\r\n      this.overlayRef.detach();\r\n      this.dropdownOpen = false;\r\n      this.bpsDropdownMenu.setValue('open', false);\r\n    }\r\n  }\r\n\r\n  private setPosition(positionStrategy: FlexibleConnectedPositionStrategy): void {\r\n    this.positionStrategy = positionStrategy;\r\n    positionStrategy.withPositions([...this.positions]);\r\n  }\r\n\r\n  private updatePositionStrategy(positions: ConnectedPosition[]): void {\r\n    if (this.positionStrategy) {\r\n      this.positionStrategy.withPositions(positions);\r\n    }\r\n  }\r\n\r\n  private setTriggerWidth(): void {\r\n    if (this.platform.isBrowser) {\r\n      const element = this.bpsMatchWidthElement ? this.bpsMatchWidthElement.nativeElement : this.el;\r\n      this.triggerWidth = element.getBoundingClientRect().width;\r\n    }\r\n  }\r\n\r\n  initActionSubscribe(): void {\r\n    const hostVisible$ = this.bpsTrigger === 'hover' ? this.hover$ : this.$click;\r\n    const dropdownMenuVisible$ = this.bpsDropdownMenu.visible$;\r\n    const menuClickVisible$ = this.bpsClickHide\r\n      ? this.bpsDropdownMenu.nzMenuDropdownService.menuItemClick$.pipe(mapTo(false))\r\n      : EMPTY;\r\n    const supVisible$ = merge(dropdownMenuVisible$, hostVisible$, menuClickVisible$);\r\n    const subVisible$ = this.bpsDropdownMenu.nzMenuDropdownService.menuOpen$;\r\n    combineLatest([supVisible$, subVisible$])\r\n      .pipe(\r\n        map(([supVisible, subVisible]) => supVisible || subVisible),\r\n        debounceTime(50),\r\n        distinctUntilChanged(),\r\n        takeUntil(this.destroy$)\r\n      )\r\n      .subscribe(visible => {\r\n        if (!this.bpsDisabled && this.bpsVisible !== visible) {\r\n          this.bpsVisible = visible;\r\n          this.updateOverlayByVisible();\r\n          this.bpsVisibleChange.emit(this.bpsVisible);\r\n          this.setTriggerWidth();\r\n          this.bpsDropdownMenu.setValue('triggerWidth', this.triggerWidth);\r\n        }\r\n      });\r\n  }\r\n\r\n  updateOverlayByVisible(): void {\r\n    if (this.bpsVisible) {\r\n      this.openMenu();\r\n    } else {\r\n      this.closeMenu();\r\n    }\r\n  }\r\n\r\n  updateDisabledState(): void {\r\n    this.setDisabled(this.bpsDisabled);\r\n  }\r\n\r\n  regeneratePosition(placement: NzPlacementType, positions: ConnectionPositionPair[]): ConnectionPositionPair[] {\r\n    return [POSITION_MAP[placement], ...positions];\r\n  }\r\n\r\n  constructor(\r\n    public elementRef: ElementRef,\r\n    private renderer: Renderer2,\r\n    private overlay: Overlay,\r\n    private platform: Platform,\r\n    @Optional() @Host() private bpsButtonComponent: BpsButtonComponent,\r\n    @Optional() private bpsButtonGroupComponent: BpsButtonGroupComponent,\r\n    private viewContainerRef: ViewContainerRef\r\n  ) {\r\n    renderer.addClass(elementRef.nativeElement, 'ant-dropdown-trigger');\r\n    if (this.bpsButtonComponent) {\r\n      this.bpsButtonComponent.isInDropdown = true;\r\n    }\r\n    if (this.bpsButtonGroupComponent) {\r\n      this.bpsButtonGroupComponent.isInDropdown = true;\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.bpsDropdownMenu) {\r\n      this.setTriggerWidth();\r\n      this.initActionSubscribe();\r\n      this.updateDisabledState();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n    this.dispose();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const {\r\n      bpsVisible,\r\n      bpsTrigger,\r\n      bpsPlacement,\r\n      bpsDisabled,\r\n      bpsOverlayClassName,\r\n      bpsOverlayStyle,\r\n      bpsTableFilter\r\n    } = changes;\r\n    if (this.bpsDropdownMenu) {\r\n      if (bpsVisible) {\r\n        this.updateOverlayByVisible();\r\n        this.bpsDropdownMenu.visible$.next(this.bpsVisible);\r\n      }\r\n      if (bpsTrigger) {\r\n        this.bpsDropdownMenu.setValue('bpsTrigger', this.bpsTrigger);\r\n      }\r\n      if (bpsTableFilter) {\r\n        this.bpsDropdownMenu.setValue('bpsTableFilter', this.bpsTableFilter);\r\n      }\r\n      if (bpsOverlayClassName) {\r\n        this.bpsDropdownMenu.setValue('bpsOverlayClassName', this.bpsOverlayClassName);\r\n      }\r\n      if (bpsOverlayStyle) {\r\n        this.bpsDropdownMenu.setValue('bpsOverlayStyle', this.bpsOverlayStyle);\r\n      }\r\n      if (bpsPlacement) {\r\n        this.bpsDropdownMenu.setValue('bpsPlacement', this.bpsPlacement);\r\n        this.bpsDropdownMenu.setValue(\r\n          'dropDownPosition',\r\n          this.bpsDropdownMenu.bpsPlacement.indexOf('top') !== -1 ? 'top' : 'bottom'\r\n        );\r\n        this.positions = this.regeneratePosition(this.bpsPlacement, this.positions);\r\n        this.updatePositionStrategy(this.positions);\r\n      }\r\n    }\r\n    if (bpsDisabled) {\r\n      this.updateDisabledState();\r\n    }\r\n  }\r\n}\r\n","import {\r\n  forwardRef,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  EventEmitter,\r\n  Host,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Output,\r\n  SimpleChange,\r\n  SkipSelf,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport {\r\n  isNotNil,\r\n  warnDeprecation,\r\n  InputBoolean,\r\n  NzConfigService,\r\n  NzFormatBeforeDropEvent,\r\n  NzFormatEmitEvent,\r\n  NzNoAnimationDirective,\r\n  NzTreeBase,\r\n  NzTreeBaseService,\r\n  NzTreeHigherOrderServiceToken,\r\n  NzTreeNode,\r\n  WithConfig\r\n} from 'ng-zorro-antd/core';\r\nimport { NzTreeService } from 'ng-zorro-antd';\r\n\r\nexport function NzTreeServiceFactory(\r\n  higherOrderService: NzTreeBaseService,\r\n  treeService: NzTreeService\r\n): NzTreeBaseService {\r\n  return higherOrderService ? higherOrderService : treeService;\r\n}\r\n\r\nconst NZ_CONFIG_COMPONENT_NAME = 'tree';\r\n\r\n@Component({\r\n  selector: 'bps-tree',\r\n  exportAs: 'bpsTree',\r\n  templateUrl: './bps-tree.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    NzTreeService,\r\n    {\r\n      provide: NzTreeBaseService,\r\n      useFactory: NzTreeServiceFactory,\r\n      deps: [[new SkipSelf(), new Optional(), NzTreeHigherOrderServiceToken], NzTreeService]\r\n    },\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => BpsTreeComponent),\r\n      multi: true\r\n    }\r\n  ],\r\n  styleUrls: ['./bps-tree.component.css']\r\n})\r\nexport class BpsTreeComponent extends NzTreeBase implements OnInit, OnDestroy, ControlValueAccessor, OnChanges {\r\n  @Input() @InputBoolean() @WithConfig(NZ_CONFIG_COMPONENT_NAME, false) bpsShowIcon: boolean;\r\n  @Input() @InputBoolean() bpsShowExpand: boolean = true;\r\n  @Input() @InputBoolean() bpsShowLine = false;\r\n  @Input() bpsExpandedIcon: TemplateRef<{ $implicit: NzTreeNode }>;\r\n  @Input() @InputBoolean() bpsCheckable = false;\r\n  @Input() @InputBoolean() bpsAsyncData = false;\r\n  @Input() @InputBoolean() bpsDraggable: boolean = false;\r\n\r\n  @Input() @InputBoolean() @WithConfig(NZ_CONFIG_COMPONENT_NAME, false) bpsHideUnMatched: boolean;\r\n  @Input() @InputBoolean() bpsSelectMode = false;\r\n  @Input() @InputBoolean() bpsCheckStrictly = false;\r\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME, false) @InputBoolean() bpsBlockNode: boolean;\r\n  @Input() @InputBoolean() bpsExpandAll = false;\r\n\r\n  @Input() @InputBoolean() bpsCustomTree = true;\r\n\r\n  @Input() bpsTreeTemplate: TemplateRef<{ $implicit: NzTreeNode }>;\r\n  @ContentChild('bpsTreeTemplate', { static: true }) bpsTreeTemplateChild: TemplateRef<{ $implicit: NzTreeNode }>;\r\n  get treeTemplate(): TemplateRef<{ $implicit: NzTreeNode }> {\r\n    return this.bpsTreeTemplate || this.bpsTreeTemplateChild;\r\n  }\r\n\r\n  /**\r\n   * @deprecated 9.0.0 use `bpsExpandAll` instead.\r\n   */\r\n  @Input()\r\n  @InputBoolean()\r\n  set bpsDefaultExpandAll(value: boolean) {\r\n    warnDeprecation(`'bpsDefaultExpandAll' would be removed in 9.0.0. Please use 'bpsExpandAll' instead.`);\r\n    this.bpsExpandAll = value;\r\n    this._bpsDefaultExpandAll = value;\r\n  }\r\n\r\n  get bpsDefaultExpandAll(): boolean {\r\n    return this._bpsDefaultExpandAll;\r\n  }\r\n\r\n  private _bpsDefaultExpandAll = false;\r\n\r\n  @Input() bpsBeforeDrop: (confirm: NzFormatBeforeDropEvent) => Observable<boolean>;\r\n\r\n  @Input() @InputBoolean() bpsMultiple = false;\r\n\r\n  @Input()\r\n  // tslint:disable-next-line:no-any\r\n  set bpsData(value: any[]) {\r\n    this.initNzData(value);\r\n  }\r\n\r\n  /**\r\n   * @deprecated 9.0.0 - use `bpsExpandedKeys` instead.\r\n   */\r\n  @Input()\r\n  set bpsDefaultExpandedKeys(value: string[]) {\r\n    warnDeprecation(`'bpsDefaultExpandedKeys' would be removed in 9.0.0. Please use 'bpsExpandedKeys' instead.`);\r\n    this.bpsDefaultSubject.next({ type: 'nzExpandedKeys', keys: value });\r\n  }\r\n\r\n  /**\r\n   * @deprecated 9.0.0 - use `bpsSelectedKeys` instead.\r\n   */\r\n  @Input()\r\n  set bpsDefaultSelectedKeys(value: string[]) {\r\n    warnDeprecation(`'bpsDefaultSelectedKeys' would be removed in 9.0.0. Please use 'bpsSelectedKeys' instead.`);\r\n    this.bpsDefaultSubject.next({ type: 'nzSelectedKeys', keys: value });\r\n  }\r\n\r\n  /**\r\n   * @deprecated 9.0.0 - use `bpsCheckedKeys` instead.\r\n   */\r\n  @Input()\r\n  set bpsDefaultCheckedKeys(value: string[]) {\r\n    warnDeprecation(`'bpsDefaultCheckedKeys' would be removed in 9.0.0. Please use 'bpsCheckedKeys' instead.`);\r\n    this.bpsDefaultSubject.next({ type: 'nzCheckedKeys', keys: value });\r\n  }\r\n\r\n  @Input()\r\n  set bpsExpandedKeys(value: string[]) {\r\n    this.bpsDefaultSubject.next({ type: 'nzExpandedKeys', keys: value });\r\n  }\r\n\r\n  @Input()\r\n  set bpsSelectedKeys(value: string[]) {\r\n    this.bpsDefaultSubject.next({ type: 'nzSelectedKeys', keys: value });\r\n  }\r\n\r\n  @Input()\r\n  set bpsCheckedKeys(value: string[]) {\r\n    this.bpsDefaultSubject.next({ type: 'nzCheckedKeys', keys: value });\r\n  }\r\n\r\n  @Input()\r\n  set bpsSearchValue(value: string) {\r\n    this._searchValue = value;\r\n    this.nzTreeService.searchExpand(value);\r\n    if (isNotNil(value)) {\r\n      this.bpsSearchValueChange.emit(this.nzTreeService.formatEvent('search', null, null));\r\n      /**\r\n       * @deprecated 9.0.0 - use `nzOnSearchNode` instead.\r\n       * Hide warning, need remove next version\r\n       */\r\n      this.bpsOnSearchNode.emit(this.nzTreeService.formatEvent('search', null, null));\r\n    }\r\n  }\r\n\r\n  get bpsSearchValue(): string {\r\n    return this._searchValue;\r\n  }\r\n\r\n  /**\r\n   * To render nodes if root is changed.\r\n   */\r\n  get bpsNodes(): NzTreeNode[] {\r\n    return this.nzTreeService.rootNodes;\r\n  }\r\n\r\n  @Output() readonly bpsExpandedKeysChange: EventEmitter<string[]> = new EventEmitter<string[]>();\r\n  @Output() readonly bpsSelectedKeysChange: EventEmitter<string[]> = new EventEmitter<string[]>();\r\n  @Output() readonly bpsCheckedKeysChange: EventEmitter<string[]> = new EventEmitter<string[]>();\r\n\r\n  @Output() readonly bpsSearchValueChange = new EventEmitter<NzFormatEmitEvent>();\r\n\r\n  /**\r\n   * @deprecated use `nzSearchValueChange` instead.\r\n   */\r\n  @Output() readonly bpsOnSearchNode = new EventEmitter<NzFormatEmitEvent>();\r\n\r\n  @Output() readonly bpsClick = new EventEmitter<NzFormatEmitEvent>();\r\n  @Output() readonly bpsDblClick = new EventEmitter<NzFormatEmitEvent>();\r\n  @Output() readonly bpsContextMenu = new EventEmitter<NzFormatEmitEvent>();\r\n  @Output() readonly bpsCheckBoxChange = new EventEmitter<NzFormatEmitEvent>();\r\n  @Output() readonly bpsExpandChange = new EventEmitter<NzFormatEmitEvent>();\r\n\r\n  @Output() readonly bpsOnDragStart = new EventEmitter<NzFormatEmitEvent>();\r\n  @Output() readonly bpsOnDragEnter = new EventEmitter<NzFormatEmitEvent>();\r\n  @Output() readonly bpsOnDragOver = new EventEmitter<NzFormatEmitEvent>();\r\n  @Output() readonly bpsOnDragLeave = new EventEmitter<NzFormatEmitEvent>();\r\n  @Output() readonly bpsOnDrop = new EventEmitter<NzFormatEmitEvent>();\r\n  @Output() readonly bpsOnDragEnd = new EventEmitter<NzFormatEmitEvent>();\r\n\r\n  _searchValue: string;\r\n  bpsDefaultSubject = new ReplaySubject<{ type: string; keys: string[] }>(6);\r\n  destroy$ = new Subject();\r\n  prefixCls = 'ant-tree';\r\n  classMap = {};\r\n\r\n  onChange: (value: NzTreeNode[]) => void = () => null;\r\n  onTouched: () => void = () => null;\r\n\r\n  setClassMap(): void {\r\n    this.classMap = {\r\n      [this.prefixCls]: true,\r\n      ['bps-tree']: true,\r\n      [this.prefixCls + '-show-line']: this.bpsShowLine,\r\n      [`${this.prefixCls}-icon-hide`]: !this.bpsShowIcon,\r\n      [`${this.prefixCls}-block-node`]: this.bpsBlockNode,\r\n      ['draggable-tree']: this.bpsDraggable,\r\n      ['ant-select-tree']: this.bpsSelectMode\r\n    };\r\n  }\r\n\r\n  writeValue(value: NzTreeNode[]): void {\r\n    this.initNzData(value);\r\n  }\r\n\r\n  registerOnChange(fn: (_: NzTreeNode[]) => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  // tslint:disable-next-line:no-any\r\n  initNzData(value: any[]): void {\r\n    if (Array.isArray(value)) {\r\n      this.nzTreeService.isCheckStrictly = this.bpsCheckStrictly;\r\n      this.nzTreeService.isMultiple = this.bpsMultiple;\r\n      this.nzTreeService.initTree(this.coerceTreeNodes(value));\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    nzTreeService: NzTreeBaseService,\r\n    public nzConfigService: NzConfigService,\r\n    private cdr: ChangeDetectorRef,\r\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective\r\n  ) {\r\n    super(nzTreeService);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setClassMap();\r\n    this.bpsDefaultSubject.pipe(takeUntil(this.destroy$)).subscribe((data: { type: string; keys: string[] }) => {\r\n      if (!data || !data.keys) {\r\n        return;\r\n      }\r\n      switch (data.type) {\r\n        case 'nzExpandedKeys':\r\n          this.nzTreeService.calcExpandedKeys(data.keys, this.bpsNodes);\r\n          this.bpsExpandedKeysChange.emit(data.keys);\r\n          break;\r\n        case 'nzSelectedKeys':\r\n          this.nzTreeService.calcSelectedKeys(data.keys, this.bpsNodes, this.bpsMultiple);\r\n          this.bpsSelectedKeysChange.emit(data.keys);\r\n          break;\r\n        case 'nzCheckedKeys':\r\n          this.nzTreeService.calcCheckedKeys(data.keys, this.bpsNodes, this.bpsCheckStrictly);\r\n          this.bpsCheckedKeysChange.emit(data.keys);\r\n          break;\r\n      }\r\n      this.cdr.markForCheck();\r\n    });\r\n    this.nzTreeService\r\n      .eventTriggerChanged()\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(data => {\r\n        switch (data.eventName) {\r\n          case 'expand':\r\n            if (this.bpsCustomTree) {\r\n              const keys = data.keys;\r\n              data.keys = [keys[keys.length - 1]];\r\n              this.nzTreeService.calcExpandedKeys(data.keys, this.bpsNodes);\r\n            }\r\n            this.bpsExpandChange.emit(data);\r\n            break;\r\n          case 'click':\r\n            this.bpsClick.emit(data);\r\n            break;\r\n          case 'check':\r\n            this.bpsCheckBoxChange.emit(data);\r\n            break;\r\n          case 'dblclick':\r\n            this.bpsDblClick.emit(data);\r\n            break;\r\n          case 'contextmenu':\r\n            this.bpsContextMenu.emit(data);\r\n            break;\r\n          // drag drop\r\n          case 'dragstart':\r\n            this.bpsOnDragStart.emit(data);\r\n            break;\r\n          case 'dragenter':\r\n            this.bpsOnDragEnter.emit(data);\r\n            break;\r\n          case 'dragover':\r\n            this.bpsOnDragOver.emit(data);\r\n            break;\r\n          case 'dragleave':\r\n            this.bpsOnDragLeave.emit(data);\r\n            break;\r\n          case 'drop':\r\n            this.bpsOnDrop.emit(data);\r\n            break;\r\n          case 'dragend':\r\n            this.bpsOnDragEnd.emit(data);\r\n            break;\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnChanges(changes: { [propertyName: string]: SimpleChange }): void {\r\n    if (changes.bpsCheckStrictly) {\r\n      this.nzTreeService.isCheckStrictly = this.bpsCheckStrictly;\r\n    }\r\n    if (changes.bpsMultiple) {\r\n      this.nzTreeService.isMultiple = this.bpsMultiple;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n}\r\n","export enum TemplateType {\r\n    Date,\r\n    Select,\r\n    Number,\r\n    String,\r\n    Boolean,\r\n    Time\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  Host,\r\n  HostListener,\r\n  Input,\r\n  NgZone,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Renderer2,\r\n  TemplateRef,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { fromEvent, Observable, Subject } from 'rxjs';\r\nimport { filter, takeUntil } from 'rxjs/operators';\r\n\r\nimport {\r\n  treeCollapseMotion,\r\n  warnDeprecation,\r\n  InputBoolean,\r\n  NzFormatBeforeDropEvent,\r\n  NzNoAnimationDirective,\r\n  NzTreeBaseService,\r\n  NzTreeNode\r\n} from 'ng-zorro-antd/core';\r\n\r\n@Component({\r\n  selector: 'bps-tree-node',\r\n  exportAs: 'bpsTreeNode',\r\n  templateUrl: './bps-tree-node.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false,\r\n  animations: [treeCollapseMotion]\r\n})\r\nexport class BpsTreeNodeComponent implements OnInit, OnChanges, OnDestroy {\r\n  @ViewChild('dragElement', { static: false }) dragElement: ElementRef;\r\n\r\n  /**\r\n   * for global property\r\n   */\r\n  @Input() bpsTreeNode: NzTreeNode;\r\n  @Input() @InputBoolean() bpsShowLine: boolean;\r\n  @Input() @InputBoolean() bpsShowExpand: boolean;\r\n  @Input() @InputBoolean() bpsCheckable: boolean;\r\n  @Input() @InputBoolean() bpsAsyncData: boolean;\r\n  @Input() @InputBoolean() bpsHideUnMatched = false;\r\n  @Input() @InputBoolean() bpsNoAnimation = false;\r\n  @Input() @InputBoolean() bpsSelectMode = false;\r\n  @Input() @InputBoolean() bpsShowIcon = false;\r\n  @Input() bpsExpandedIcon: TemplateRef<{ $implicit: NzTreeNode }>;\r\n  @Input() bpsTreeTemplate: TemplateRef<{ $implicit: NzTreeNode }>;\r\n  @Input() bpsBeforeDrop: (confirm: NzFormatBeforeDropEvent) => Observable<boolean>;\r\n  @Input() bpsSearchValue = '';\r\n\r\n  @Input() @InputBoolean() bpsCustomTree = true;\r\n\r\n  @Input()\r\n  set bpsDraggable(value: boolean) {\r\n    this._bpsDraggable = value;\r\n    this.handDragEvent();\r\n  }\r\n\r\n  get bpsDraggable(): boolean {\r\n    return this._bpsDraggable;\r\n  }\r\n\r\n  /**\r\n   * @deprecated use `nzExpandAll` instead.\r\n   */\r\n  @Input()\r\n  set bpsDefaultExpandAll(value: boolean) {\r\n    warnDeprecation(`'bpsDefaultExpandAll' is going to be removed in 9.0.0. Please use 'bpsExpandAll' instead.`);\r\n    this._bpsExpandAll = value;\r\n    if (value && this.bpsTreeNode && !this.bpsTreeNode.isLeaf) {\r\n      this.bpsTreeNode.isExpanded = true;\r\n    }\r\n  }\r\n\r\n  get bpsDefaultExpandAll(): boolean {\r\n    return this._bpsExpandAll;\r\n  }\r\n\r\n  // default set\r\n  @Input()\r\n  set bpsExpandAll(value: boolean) {\r\n    this._bpsExpandAll = value;\r\n    if (value && this.bpsTreeNode && !this.bpsTreeNode.isLeaf) {\r\n      this.bpsTreeNode.isExpanded = true;\r\n    }\r\n  }\r\n\r\n  get bpsExpandAll(): boolean {\r\n    return this._bpsExpandAll;\r\n  }\r\n\r\n  // default var\r\n  prefixCls = 'ant-tree';\r\n  bpsNodeClass = {};\r\n  bpsNodeSwitcherClass = {};\r\n  bpsNodeContentClass = {};\r\n  bpsNodeCheckboxClass = {};\r\n  bpsNodeContentIconClass = {};\r\n  bpsNodeContentLoadingClass = {};\r\n\r\n  /**\r\n   * drag var\r\n   */\r\n  destroy$ = new Subject();\r\n  dragPos = 2;\r\n  dragPosClass: { [key: string]: string } = {\r\n    '0': 'drag-over',\r\n    '1': 'drag-over-gap-bottom',\r\n    '-1': 'drag-over-gap-top'\r\n  };\r\n\r\n  /**\r\n   * default set\r\n   */\r\n  _bpsDraggable = false;\r\n  _bpsExpandAll = false;\r\n\r\n  get bpsIcon(): string {\r\n    return this.bpsTreeNode.icon;\r\n  }\r\n\r\n  get canDraggable(): boolean | null {\r\n    return this.bpsDraggable && !this.bpsTreeNode.isDisabled ? true : null;\r\n  }\r\n\r\n  get isShowLineIcon(): boolean {\r\n    return !this.bpsTreeNode.isLeaf && this.bpsShowLine;\r\n  }\r\n\r\n  get isShowSwitchIcon(): boolean {\r\n    return !this.bpsTreeNode.isLeaf && !this.bpsShowLine;\r\n  }\r\n\r\n  get isSwitcherOpen(): boolean {\r\n    return this.bpsTreeNode.isExpanded && !this.bpsTreeNode.isLeaf;\r\n  }\r\n\r\n  get isSwitcherClose(): boolean {\r\n    return !this.bpsTreeNode.isExpanded && !this.bpsTreeNode.isLeaf;\r\n  }\r\n\r\n  get displayStyle(): string {\r\n    // to hide unmatched nodes\r\n    return this.bpsSearchValue &&\r\n      this.bpsHideUnMatched &&\r\n      !this.bpsTreeNode.isMatched &&\r\n      !this.bpsTreeNode.isExpanded &&\r\n      this.bpsTreeNode.canHide\r\n      ? 'none'\r\n      : '';\r\n  }\r\n\r\n  /**\r\n   * reset node class\r\n   */\r\n  setClassMap(): void {\r\n    this.prefixCls = this.bpsSelectMode ? 'ant-select-tree' : 'ant-tree';\r\n    this.bpsNodeClass = {\r\n      [`${this.prefixCls}-treenode-disabled`]: this.bpsTreeNode.isDisabled,\r\n      [`${this.prefixCls}-treenode-switcher-open`]: this.isSwitcherOpen,\r\n      [`${this.prefixCls}-treenode-switcher-close`]: this.isSwitcherClose,\r\n      [`${this.prefixCls}-treenode-checkbox-checked`]: this.bpsTreeNode.isChecked,\r\n      [`${this.prefixCls}-treenode-checkbox-indeterminate`]: this.bpsTreeNode.isHalfChecked,\r\n      [`${this.prefixCls}-treenode-selected`]: this.bpsTreeNode.isSelected,\r\n      [`${this.prefixCls}-treenode-loading`]: this.bpsTreeNode.isLoading\r\n    };\r\n    this.bpsNodeSwitcherClass = {\r\n      [`${this.prefixCls}-switcher`]: true,\r\n      [`${this.prefixCls}-switcher-noop`]: this.bpsTreeNode.isLeaf,\r\n      [`${this.prefixCls}-switcher_open`]: this.isSwitcherOpen,\r\n      [`${this.prefixCls}-switcher_close`]: this.isSwitcherClose\r\n    };\r\n\r\n    this.bpsNodeCheckboxClass = {\r\n      [`${this.prefixCls}-checkbox`]: true,\r\n      [`${this.prefixCls}-checkbox-checked`]: this.bpsTreeNode.isChecked,\r\n      [`${this.prefixCls}-checkbox-indeterminate`]: this.bpsTreeNode.isHalfChecked,\r\n      [`${this.prefixCls}-checkbox-disabled`]: this.bpsTreeNode.isDisabled || this.bpsTreeNode.isDisableCheckbox\r\n    };\r\n\r\n    this.bpsNodeContentClass = {\r\n      [`${this.prefixCls}-node-content-wrapper`]: true,\r\n      [`bps-tree-leaf`]: this.bpsTreeNode.isLeaf,\r\n      [`bps-tree-parent`]: !this.bpsTreeNode.isLeaf,\r\n      [`${this.prefixCls}-node-content-wrapper-open`]: this.isSwitcherOpen,\r\n      [`${this.prefixCls}-node-content-wrapper-close`]: this.isSwitcherClose,\r\n      [`${this.prefixCls}-node-selected`]: this.bpsTreeNode.isSelected\r\n    };\r\n    this.bpsNodeContentIconClass = {\r\n      [`${this.prefixCls}-iconEle`]: true,\r\n      [`${this.prefixCls}-icon__customize`]: true\r\n    };\r\n    this.bpsNodeContentLoadingClass = {\r\n      [`${this.prefixCls}-iconEle`]: true\r\n    };\r\n  }\r\n\r\n  @HostListener('mousedown', ['$event'])\r\n  onMousedown(event: MouseEvent): void {\r\n    if (this.bpsSelectMode) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * click node to select, 200ms to dbl click\r\n   */\r\n  @HostListener('click', ['$event'])\r\n  nzClick(event: MouseEvent): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    if (this.bpsTreeNode.isSelectable && !this.bpsTreeNode.isDisabled) {\r\n      if (!this.bpsTreeNode.isSelected) {\r\n        this.bpsTreeNode.isSelected = true;\r\n      }\r\n      if (this.bpsCustomTree) {\r\n        this._clickExpand(event);\r\n      }\r\n    }\r\n    const eventNext = this.nzTreeService.formatEvent('click', this.bpsTreeNode, event);\r\n    this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n  }\r\n\r\n  @HostListener('dblclick', ['$event'])\r\n  nzDblClick(event: MouseEvent): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    const eventNext = this.nzTreeService.formatEvent('dblclick', this.bpsTreeNode, event);\r\n    this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n  }\r\n\r\n  /**\r\n   * @param event\r\n   */\r\n  @HostListener('contextmenu', ['$event'])\r\n  nzContextMenu(event: MouseEvent): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    const eventNext = this.nzTreeService.formatEvent('contextmenu', this.bpsTreeNode, event);\r\n    this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n  }\r\n\r\n  /**\r\n   * collapse node\r\n   * @param event\r\n   */\r\n  _clickExpand(event: MouseEvent): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    if (!this.bpsTreeNode.isLoading && !this.bpsTreeNode.isLeaf) {\r\n      // set async state\r\n      if (this.bpsAsyncData && this.bpsTreeNode.children.length === 0 && !this.bpsTreeNode.isExpanded) {\r\n        this.bpsTreeNode.isLoading = true;\r\n      }\r\n      this.bpsTreeNode.isExpanded = !this.bpsTreeNode.isExpanded;\r\n      if (this.bpsTreeNode.isMatched) {\r\n        this.setDisplayForParentNodes(this.bpsTreeNode);\r\n      }\r\n      this.setDisplayForChildNodes(this.bpsTreeNode);\r\n      const eventNext = this.nzTreeService.formatEvent('expand', this.bpsTreeNode, event);\r\n      this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n    }\r\n  }\r\n\r\n  private setDisplayForChildNodes(parentNode: NzTreeNode): void {\r\n    const { children } = parentNode;\r\n    if (children.length > 0) {\r\n      children.map(node => {\r\n        const canHide = !node.isMatched;\r\n        node.canHide = canHide;\r\n        this.setDisplayForChildNodes(node);\r\n      });\r\n    }\r\n  }\r\n\r\n  private setDisplayForParentNodes(targetNode: NzTreeNode): void {\r\n    const parentNode = targetNode.getParentNode();\r\n    if (parentNode) {\r\n      parentNode.canHide = false;\r\n      this.setDisplayForParentNodes(parentNode);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * check node\r\n   * @param event\r\n   */\r\n  _clickCheckBox(event: MouseEvent): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    // return if node is disabled\r\n    if (this.bpsTreeNode.isDisabled || this.bpsTreeNode.isDisableCheckbox) {\r\n      return;\r\n    }\r\n    this.bpsTreeNode.isChecked = !this.bpsTreeNode.isChecked;\r\n    this.bpsTreeNode.isHalfChecked = false;\r\n    if (!this.nzTreeService.isCheckStrictly) {\r\n      this.nzTreeService.conduct(this.bpsTreeNode);\r\n    }\r\n    const eventNext = this.nzTreeService.formatEvent('check', this.bpsTreeNode, event);\r\n    this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n  }\r\n\r\n  /**\r\n   * drag event\r\n   * @param e\r\n   */\r\n  clearDragClass(): void {\r\n    const dragClass = ['drag-over-gap-top', 'drag-over-gap-bottom', 'drag-over'];\r\n    dragClass.forEach(e => {\r\n      this.renderer.removeClass(this.dragElement.nativeElement, e);\r\n    });\r\n  }\r\n\r\n  handleDragStart(e: DragEvent): void {\r\n    e.stopPropagation();\r\n    try {\r\n      // ie throw error\r\n      // firefox-need-it\r\n      e.dataTransfer!.setData('text/plain', this.bpsTreeNode.key!);\r\n    } catch (error) {\r\n      // empty\r\n    }\r\n    this.nzTreeService.setSelectedNode(this.bpsTreeNode);\r\n    this.bpsTreeNode.isExpanded = false;\r\n    const eventNext = this.nzTreeService.formatEvent('dragstart', this.bpsTreeNode, e);\r\n    this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n  }\r\n\r\n  handleDragEnter(e: DragEvent): void {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    // reset position\r\n    this.dragPos = 2;\r\n    this.ngZone.run(() => {\r\n      const node = this.nzTreeService.getSelectedNode();\r\n      if (node && node.key !== this.bpsTreeNode.key && !this.bpsTreeNode.isExpanded && !this.bpsTreeNode.isLeaf) {\r\n        this.bpsTreeNode.isExpanded = true;\r\n      }\r\n      const eventNext = this.nzTreeService.formatEvent('dragenter', this.bpsTreeNode, e);\r\n      this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n    });\r\n  }\r\n\r\n  handleDragOver(e: DragEvent): void {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    const dropPosition = this.nzTreeService.calcDropPosition(e);\r\n    if (this.dragPos !== dropPosition) {\r\n      this.clearDragClass();\r\n      this.dragPos = dropPosition;\r\n      // leaf node will pass\r\n      if (!(this.dragPos === 0 && this.bpsTreeNode.isLeaf)) {\r\n        this.renderer.addClass(this.dragElement.nativeElement, this.dragPosClass[this.dragPos]);\r\n      }\r\n    }\r\n    const eventNext = this.nzTreeService.formatEvent('dragover', this.bpsTreeNode, e);\r\n    this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n  }\r\n\r\n  handleDragLeave(e: DragEvent): void {\r\n    e.stopPropagation();\r\n    this.ngZone.run(() => {\r\n      this.clearDragClass();\r\n    });\r\n    const eventNext = this.nzTreeService.formatEvent('dragleave', this.bpsTreeNode, e);\r\n    this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n  }\r\n\r\n  handleDragDrop(e: DragEvent): void {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    this.ngZone.run(() => {\r\n      this.clearDragClass();\r\n      const node = this.nzTreeService.getSelectedNode();\r\n      if (!node || (node && node.key === this.bpsTreeNode.key) || (this.dragPos === 0 && this.bpsTreeNode.isLeaf)) {\r\n        return;\r\n      }\r\n      // pass if node is leafNo\r\n      const dropEvent = this.nzTreeService.formatEvent('drop', this.bpsTreeNode, e);\r\n      const dragEndEvent = this.nzTreeService.formatEvent('dragend', this.bpsTreeNode, e);\r\n      if (this.bpsBeforeDrop) {\r\n        this.bpsBeforeDrop({\r\n          dragNode: this.nzTreeService.getSelectedNode()!,\r\n          node: this.bpsTreeNode,\r\n          pos: this.dragPos\r\n        }).subscribe((canDrop: boolean) => {\r\n          if (canDrop) {\r\n            this.nzTreeService.dropAndApply(this.bpsTreeNode, this.dragPos);\r\n          }\r\n          this.nzTreeService!.triggerEventChange$!.next(dropEvent);\r\n          this.nzTreeService!.triggerEventChange$!.next(dragEndEvent);\r\n        });\r\n      } else if (this.bpsTreeNode) {\r\n        this.nzTreeService.dropAndApply(this.bpsTreeNode, this.dragPos);\r\n        this.nzTreeService!.triggerEventChange$!.next(dropEvent);\r\n      }\r\n    });\r\n  }\r\n\r\n  handleDragEnd(e: DragEvent): void {\r\n    e.stopPropagation();\r\n    this.ngZone.run(() => {\r\n      // if user do not custom beforeDrop\r\n      if (!this.bpsBeforeDrop) {\r\n        const eventNext = this.nzTreeService.formatEvent('dragend', this.bpsTreeNode, e);\r\n        this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Listening to dragging events.\r\n   */\r\n  handDragEvent(): void {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      if (this.bpsDraggable) {\r\n        this.destroy$ = new Subject();\r\n        fromEvent<DragEvent>(this.elRef.nativeElement, 'dragstart')\r\n          .pipe(takeUntil(this.destroy$))\r\n          .subscribe((e: DragEvent) => this.handleDragStart(e));\r\n        fromEvent<DragEvent>(this.elRef.nativeElement, 'dragenter')\r\n          .pipe(takeUntil(this.destroy$))\r\n          .subscribe((e: DragEvent) => this.handleDragEnter(e));\r\n        fromEvent<DragEvent>(this.elRef.nativeElement, 'dragover')\r\n          .pipe(takeUntil(this.destroy$))\r\n          .subscribe((e: DragEvent) => this.handleDragOver(e));\r\n        fromEvent<DragEvent>(this.elRef.nativeElement, 'dragleave')\r\n          .pipe(takeUntil(this.destroy$))\r\n          .subscribe((e: DragEvent) => this.handleDragLeave(e));\r\n        fromEvent<DragEvent>(this.elRef.nativeElement, 'drop')\r\n          .pipe(takeUntil(this.destroy$))\r\n          .subscribe((e: DragEvent) => this.handleDragDrop(e));\r\n        fromEvent<DragEvent>(this.elRef.nativeElement, 'dragend')\r\n          .pipe(takeUntil(this.destroy$))\r\n          .subscribe((e: DragEvent) => this.handleDragEnd(e));\r\n      } else {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n      }\r\n    });\r\n  }\r\n\r\n  isTemplateRef(value: {}): boolean {\r\n    return value instanceof TemplateRef;\r\n  }\r\n\r\n  markForCheck(): void {\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  constructor(\r\n    public nzTreeService: NzTreeBaseService,\r\n    private ngZone: NgZone,\r\n    private renderer: Renderer2,\r\n    private elRef: ElementRef,\r\n    private cdr: ChangeDetectorRef,\r\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // init expanded / selected / checked list\r\n    if (this.bpsTreeNode.isSelected) {\r\n      this.nzTreeService.setNodeActive(this.bpsTreeNode);\r\n    }\r\n    if (this.bpsTreeNode.isExpanded) {\r\n      this.nzTreeService.setExpandedNodeList(this.bpsTreeNode);\r\n    }\r\n    if (this.bpsTreeNode.isChecked) {\r\n      this.nzTreeService.setCheckedNodeList(this.bpsTreeNode);\r\n    }\r\n    // TODO\r\n    this.bpsTreeNode.component = this;\r\n    this.nzTreeService\r\n      .eventTriggerChanged()\r\n      .pipe(\r\n        filter(data => data.node!.key === this.bpsTreeNode.key),\r\n        takeUntil(this.destroy$)\r\n      )\r\n      .subscribe(() => {\r\n        this.setClassMap();\r\n        this.markForCheck();\r\n      });\r\n    this.setClassMap();\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    this.setClassMap();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n}\r\n","import { Directive, Optional, TemplateRef } from '@angular/core';\nimport { NzModalRef } from 'ng-zorro-antd';\r\n\n@Directive({\n  selector: '[bpsModalFooter]',\n  exportAs: 'bpsModalFooter'\n})\nexport class BpsModalFooterDirective {\n  constructor(@Optional() private nzModalRef: NzModalRef, public templateRef: TemplateRef<{}>) {\n    if (this.nzModalRef) {\n      this.nzModalRef.getInstance().setFooterWithTemplate(this.templateRef);\n    }\n  }\n}\n","import { Observable } from 'rxjs';\n\nimport { BpsModalComponent } from './bps-modal.component';\n\n/**\n * API class that public to users to handle the modal instance.\n * NzModalRef is aim to avoid accessing to the modal instance directly by users.\n */\n// tslint:disable-next-line:no-any\nexport abstract class BpsModalRef<T = any, R = any> {\n  abstract afterOpen: Observable<void>;\n  abstract afterClose: Observable<R>;\n\n  abstract open(): void;\n  abstract close(result?: R): void;\n  abstract destroy(result?: R): void;\n\n  /**\n   * Trigger the nzOnOk/nzOnCancel by manual\n   */\n  abstract triggerOk(): void;\n  abstract triggerCancel(): void;\n\n  // /**\n  //  * Return the ComponentRef of nzContent when specify nzContent as a Component\n  //  * Note: this method may return undefined if the Component has not ready yet. (it only available after Modal's ngOnInit)\n  //  */\n  // abstract getContentComponentRef(): ComponentRef<{}>;\n\n  /**\n   * Return the component instance of nzContent when specify nzContent as a Component\n   * Note: this method may return undefined if the Component has not ready yet. (it only available after Modal's ngOnInit)\n   */\n  abstract getContentComponent(): T;\n\n  /**\n   * Get the dom element of this Modal\n   */\n  abstract getElement(): HTMLElement;\n\n  /**\n   * Get the instance of the Modal itself\n   */\n  abstract getInstance(): BpsModalComponent;\n}\n","import { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { BpsModalRef } from './bps-modal-ref.class';\nimport { NzModalControlServiceModule } from 'ng-zorro-antd';\n\ninterface RegisteredMeta {\n  modalRef: BpsModalRef;\n  afterOpenSubscription: Subscription;\n  afterCloseSubscription: Subscription;\n}\n\n@Injectable({\n  providedIn: NzModalControlServiceModule\n})\nexport class BpsModalControlService {\n  // Track singleton afterAllClose through over the injection tree\n  get afterAllClose(): Subject<void> {\n    return this.parentService ? this.parentService.afterAllClose : this.rootAfterAllClose!;\n  }\n\n  // Track singleton openModals array through over the injection tree\n  get openModals(): BpsModalRef[] {\n    return this.parentService ? this.parentService.openModals : this.rootOpenModals!;\n  }\n\n  private rootOpenModals: BpsModalRef[] | null = this.parentService ? null : [];\n  private rootAfterAllClose: Subject<void> | null = this.parentService ? null : new Subject<void>();\n  private rootRegisteredMetaMap: Map<BpsModalRef, RegisteredMeta> | null = this.parentService ? null : new Map();\n\n  private get registeredMetaMap(): Map<BpsModalRef, RegisteredMeta> {\n    // Registered modal for later usage\n    return this.parentService ? this.parentService.registeredMetaMap : this.rootRegisteredMetaMap!;\n  }\n\n  constructor(@Optional() @SkipSelf() private parentService: BpsModalControlService) {}\n\n  // Register a modal to listen its open/close\n  registerModal(modalRef: BpsModalRef): void {\n    if (!this.hasRegistered(modalRef)) {\n      const afterOpenSubscription = modalRef.afterOpen.subscribe(() => this.openModals.push(modalRef));\n      const afterCloseSubscription = modalRef.afterClose.subscribe(() => this.removeOpenModal(modalRef));\n\n      this.registeredMetaMap.set(modalRef, { modalRef, afterOpenSubscription, afterCloseSubscription });\n    }\n  }\n\n  // deregister modals\n  deregisterModal(modalRef: BpsModalRef): void {\n    const registeredMeta = this.registeredMetaMap.get(modalRef);\n    if (registeredMeta) {\n      // Remove this modal if it is still in the opened modal list (NOTE: it may trigger \"afterAllClose\")\n      this.removeOpenModal(registeredMeta.modalRef);\n      registeredMeta.afterOpenSubscription.unsubscribe();\n      registeredMeta.afterCloseSubscription.unsubscribe();\n      this.registeredMetaMap.delete(modalRef);\n    }\n  }\n\n  hasRegistered(modalRef: BpsModalRef): boolean {\n    return this.registeredMetaMap.has(modalRef);\n  }\n\n  // Close all registered opened modals\n  closeAll(): void {\n    let i = this.openModals.length;\n\n    while (i--) {\n      this.openModals[i].close();\n    }\n  }\n\n  private removeOpenModal(modalRef: BpsModalRef): void {\n    const index = this.openModals.indexOf(modalRef);\n\n    if (index > -1) {\n      this.openModals.splice(index, 1);\n\n      if (!this.openModals.length) {\n        this.afterAllClose.next();\n      }\n    }\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport interface BpsModalConfig {\n  bpsMask?: boolean;\n  bpsMaskClosable?: boolean;\n}\nexport const NZ_MODAL_CONFIG = new InjectionToken<BpsModalConfig>('NZ_MODAL_CONFIG');\n","import { FocusTrap, FocusTrapFactory } from '@angular/cdk/a11y';\r\n\r\nimport { ESCAPE } from '@angular/cdk/keycodes';\r\nimport { BlockScrollStrategy, Overlay, OverlayKeyboardDispatcher, OverlayRef } from '@angular/cdk/overlay';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  ContentChild,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  Injector,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Output,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  Type,\r\n  ViewChild,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\n\r\nimport { fromEvent, Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport {\r\n  getElementOffset,\r\n  isPromise,\r\n  warnDeprecation,\r\n  InputBoolean,\r\n  NzConfigService,\r\n  WithConfig\r\n} from 'ng-zorro-antd/core';\r\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\r\nimport { BpsModalFooterDirective } from './bps-modal-footer.directive';\r\nimport { BpsModalRef } from './bps-modal-ref.class';\r\nimport { ModalOptions, ModalButtonOptions, ModalType, OnClickCallback } from './bps-modal.type';\r\nimport { BpsModalControlService } from './bps-modal-control.service';\r\nimport { BpsModalConfig, NZ_MODAL_CONFIG } from './bps-modal-config';\r\n\r\nexport const MODAL_ANIMATE_DURATION = 200; // Duration when perform animations (ms)\r\nexport const WRAP_CLASS_NAME = 'ant-modal-wrap';\r\n\r\ntype AnimationState = 'enter' | 'leave' | null;\r\n\r\nconst NZ_CONFIG_COMPONENT_NAME = 'modal';\r\n\r\n@Component({\r\n  selector: 'bps-modal',\r\n  exportAs: 'bpsModal',\r\n  templateUrl: './bps-modal.component.html',\r\n  styleUrls: ['./bps-modal.component.css'],\r\n  // Using OnPush for modal caused footer can not to detect changes. we can fix it when 8.x.\r\n  changeDetection: ChangeDetectionStrategy.Default\r\n})\r\n\r\n// tslint:disable-next-line:no-any\r\nexport class BpsModalComponent<T = any, R = any> extends BpsModalRef<T, R>\r\n  implements OnInit, OnChanges, AfterViewInit, OnDestroy, ModalOptions<T> {\r\n  @Input() @InputBoolean() bpsVisible: boolean = false;\r\n  @Input() @InputBoolean() bpsClosable: boolean = true;\r\n  @Input() @InputBoolean() bpsOkLoading: boolean = false;\r\n  @Input() @InputBoolean() bpsOkDisabled: boolean = false;\r\n  @Input() @InputBoolean() bpsCancelDisabled: boolean = false;\r\n  @Input() @InputBoolean() bpsCancelLoading: boolean = false;\r\n  @Input() @InputBoolean() bpsKeyboard: boolean = true;\r\n  @Input() @InputBoolean() bpsNoAnimation = false;\r\n  @Input() @InputBoolean() bpsModalDisabled = false;\r\n\r\n  // TODO(hsuanxyz): add default value once old API is deprecated.\r\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) @InputBoolean() bpsMask: boolean;\r\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) @InputBoolean() bpsMaskClosable: boolean;\r\n\r\n  @Input() bpsContent: string | TemplateRef<{}> | Type<T>; // [STATIC] If not specified, will use <ng-content>\r\n  @Input() bpsComponentParams: T; // [STATIC] ONLY avaliable when nzContent is a component\r\n  @Input() bpsFooter: string | TemplateRef<{}> | Array<ModalButtonOptions<T>> | null; // [STATIC] Default Modal ONLY\r\n  @Input() bpsGetContainer: HTMLElement | OverlayRef | (() => HTMLElement | OverlayRef) = () => this.overlay.create(); // [STATIC]\r\n  @Input() bpsZIndex: number = 1000;\r\n  @Input() bpsWidth: number | string = 520;\r\n  @Input() bpsWrapClassName: string;\r\n  @Input() bpsClassName: string;\r\n  @Input() bpsStyle: object;\r\n  @Input() bpsTitle: string | TemplateRef<{}>;\r\n  @Input() bpsCloseIcon: string | TemplateRef<void> = 'close';\r\n  @Input() bpsMaskStyle: object;\r\n  @Input() bpsBodyStyle: object;\r\n  @Input() bpsOkText: string | null;\r\n  @Input() bpsCancelText: string | null;\r\n  @Input() bpsOkType: string = 'variation-1';\r\n  @Input() bpsIconType: string = 'question-circle'; // Confirm Modal ONLY\r\n  @Input() bpsModalType: ModalType = 'default';\r\n\r\n  @Input() @Output() readonly bpsOnOk: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\r\n  @Input() @Output() readonly bpsOnCancel: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\r\n\r\n  @Output() readonly bpsAfterOpen = new EventEmitter<void>(); // Trigger when modal open(visible) after animations\r\n  @Output() readonly bpsAfterClose = new EventEmitter<R>(); // Trigger when modal leave-animation over\r\n  @Output() readonly bpsVisibleChange = new EventEmitter<boolean>();\r\n\r\n  @ViewChild('modalContainer', { static: true }) modalContainer: ElementRef;\r\n  @ViewChild('bodyContainer', { static: false, read: ViewContainerRef }) bodyContainer: ViewContainerRef;\r\n  @ViewChild('autoFocusButtonOk', { static: false, read: ElementRef }) autoFocusButtonOk: ElementRef; // Only aim to focus the ok button that needs to be auto focused\r\n\r\n  @ContentChild(BpsModalFooterDirective, { static: false })\r\n  set modalFooter(value: BpsModalFooterDirective) {\r\n    if (value && value.templateRef) {\r\n      this.setFooterWithTemplate(value.templateRef);\r\n    }\r\n  }\r\n\r\n  get afterOpen(): Observable<void> {\r\n    // Observable alias for nzAfterOpen\r\n    return this.bpsAfterOpen.asObservable();\r\n  }\r\n\r\n  get afterClose(): Observable<R> {\r\n    // Observable alias for nzAfterClose\r\n    return this.bpsAfterClose.asObservable();\r\n  }\r\n\r\n  get cancelText(): string {\r\n    return this.bpsCancelText || this.locale.cancelText!;\r\n  }\r\n\r\n  get okText(): string {\r\n    return this.bpsOkText || this.locale.okText!;\r\n  }\r\n\r\n  get hidden(): boolean {\r\n    return !this.bpsVisible && !this.animationState;\r\n  } // Indicate whether this dialog should hidden\r\n\r\n  /**\r\n   * @description\r\n   * The calculated highest weight of mask value\r\n   *\r\n   * Weight of different mask input:\r\n   * component default value < global configuration < component input value\r\n   */\r\n  get mask(): boolean {\r\n    if (this.bpsMask != null) {\r\n      return this.bpsMask;\r\n    } else if (this.bpsModalGlobalConfig && this.bpsModalGlobalConfig.bpsMask != null) {\r\n      return this.bpsModalGlobalConfig.bpsMask;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description\r\n   * The calculated highest weight of maskClosable value\r\n   *\r\n   * Weight of different maskClosable input:\r\n   * component default value < global configuration < component input value\r\n   */\r\n  get maskClosable(): boolean {\r\n    if (this.bpsMaskClosable != null) {\r\n      return this.bpsMaskClosable;\r\n    } else if (this.bpsModalGlobalConfig && this.bpsModalGlobalConfig.bpsMaskClosable != null) {\r\n      return this.bpsModalGlobalConfig.bpsMaskClosable;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  locale: { okText?: string; cancelText?: string } = {};\r\n  maskAnimationClassMap: object | null;\r\n  modalAnimationClassMap: object | null;\r\n  transformOrigin = '0px 0px 0px'; // The origin point that animation based on\r\n\r\n  private contentComponentRef: ComponentRef<T>; // Handle the reference when using nzContent as Component\r\n  private animationState: AnimationState; // Current animation state\r\n  private container: HTMLElement | OverlayRef;\r\n  private unsubscribe$ = new Subject<void>();\r\n  private previouslyFocusedElement: HTMLElement;\r\n  private focusTrap: FocusTrap;\r\n  private scrollStrategy: BlockScrollStrategy;\r\n  private overlayRef: OverlayRef;\r\n  private dialogMouseDown = false;\r\n  private timeoutId: number;\r\n\r\n  [key: string]: any; // tslint:disable-line:no-any\r\n\r\n  constructor(\r\n    public nzConfigService: NzConfigService,\r\n    private overlay: Overlay,\r\n    private overlayKeyboardDispatcher: OverlayKeyboardDispatcher,\r\n    private i18n: NzI18nService,\r\n    private cfr: ComponentFactoryResolver,\r\n    private elementRef: ElementRef,\r\n    private viewContainer: ViewContainerRef,\r\n    private modalControl: BpsModalControlService,\r\n    private focusTrapFactory: FocusTrapFactory,\r\n    private cdr: ChangeDetectorRef,\r\n    @Optional() @Inject(NZ_MODAL_CONFIG) private bpsModalGlobalConfig: BpsModalConfig,\r\n    @Inject(DOCUMENT) private document: any // tslint:disable-line:no-any\r\n  ) {\r\n    super();\r\n    this.scrollStrategy = this.overlay.scrollStrategies.block();\r\n\r\n    if (this.bpsModalGlobalConfig) {\r\n      warnDeprecation(\r\n        '`NZ_MODAL_CONFIG` has been deprecated and will be removed in 9.0.0. Please use global config instead.'\r\n      );\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.i18n.localeChange.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\r\n      this.locale = this.i18n.getLocaleData('Modal');\r\n    });\r\n\r\n    if (this.isComponent(this.bpsContent)) {\r\n      this.createDynamicComponent(this.bpsContent as Type<T>); // Create component along without View\r\n    }\r\n\r\n    if (this.isModalButtons(this.bpsFooter)) {\r\n      // Setup default button options\r\n      this.bpsFooter = this.formatModalButtons(this.bpsFooter as Array<ModalButtonOptions<T>>);\r\n    }\r\n\r\n    // Place the modal dom to elsewhere\r\n    this.container = typeof this.bpsGetContainer === 'function' ? this.bpsGetContainer() : this.bpsGetContainer;\r\n    if (this.container instanceof HTMLElement) {\r\n      this.container.appendChild(this.elementRef.nativeElement);\r\n      fromEvent<KeyboardEvent>(this.document.body, 'keydown')\r\n        .pipe(takeUntil(this.unsubscribe$))\r\n        .subscribe(e => this.keydownListener(e));\r\n    } else if (this.container instanceof OverlayRef) {\r\n      // NOTE: only attach the dom to overlay, the view container is not changed actually\r\n      this.setOverlayRef(this.container);\r\n      this.container.overlayElement.appendChild(this.elementRef.nativeElement);\r\n    }\r\n\r\n    if (this.overlayRef) {\r\n      this.overlayRef\r\n        .keydownEvents()\r\n        .pipe(takeUntil(this.unsubscribe$))\r\n        .subscribe(e => this.keydownListener(e));\r\n    }\r\n\r\n    // Register modal when afterOpen/afterClose is stable\r\n    this.modalControl.registerModal(this);\r\n  }\r\n\r\n  // [NOTE] NOT available when using by service!\r\n  // Because ngOnChanges never be called when using by service,\r\n  // here we can't support \"nzContent\"(Component) etc. as inputs that initialized dynamically.\r\n  // BUT: User also can change \"nzContent\" dynamically to trigger UI changes (provided you don't use \bComponent that needs initializations)\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.bpsVisible) {\r\n      this.handleVisibleStateChange(this.bpsVisible, !changes.bpsVisible.firstChange); // Do not trigger animation while initializing\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // If using Component, it is the time to attach View while bodyContainer is ready\r\n    if (this.contentComponentRef) {\r\n      this.bodyContainer.insert(this.contentComponentRef.hostView);\r\n    }\r\n\r\n    if (this.autoFocusButtonOk) {\r\n      (this.autoFocusButtonOk.nativeElement as HTMLButtonElement).focus();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // Close self before destructing\r\n    this.changeVisibleFromInside(false).then(() => {\r\n      this.modalControl.deregisterModal(this);\r\n\r\n      if (this.container instanceof OverlayRef) {\r\n        this.container.dispose();\r\n      }\r\n\r\n      this.unsubscribe$.next();\r\n      this.unsubscribe$.complete();\r\n    });\r\n    clearTimeout(this.timeoutId);\r\n  }\r\n\r\n  setFooterWithTemplate(templateRef: TemplateRef<{}>): void {\r\n    this.bpsFooter = templateRef;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  setOverlayRef(overlayRef: OverlayRef): void {\r\n    this.overlayRef = overlayRef;\r\n  }\r\n\r\n  keydownListener(event: KeyboardEvent): void {\r\n    if (event.keyCode === ESCAPE && this.bpsKeyboard) {\r\n      this.onClickOkCancel('cancel');\r\n    }\r\n  }\r\n\r\n  open(): void {\r\n    this.changeVisibleFromInside(true);\r\n  }\r\n\r\n  close(result?: R): void {\r\n    this.changeVisibleFromInside(false, result);\r\n  }\r\n\r\n  destroy(result?: R): void {\r\n    // Destroy equals Close\r\n    this.close(result);\r\n  }\r\n\r\n  triggerOk(): void {\r\n    this.onClickOkCancel('ok');\r\n  }\r\n\r\n  triggerCancel(): void {\r\n    this.onClickOkCancel('cancel');\r\n  }\r\n\r\n  getInstance(): BpsModalComponent {\r\n    return this;\r\n  }\r\n\r\n  getContentComponentRef(): ComponentRef<T> {\r\n    return this.contentComponentRef;\r\n  }\r\n\r\n  getContentComponent(): T {\r\n    return this.contentComponentRef && this.contentComponentRef.instance;\r\n  }\r\n\r\n  getElement(): HTMLElement {\r\n    return this.elementRef && this.elementRef.nativeElement;\r\n  }\r\n\r\n  onMaskDialogDown(): void {\r\n    this.dialogMouseDown = true;\r\n  }\r\n\r\n  onDialogUp(): void {\r\n    if (this.dialogMouseDown) {\r\n      this.timeoutId = setTimeout(() => {\r\n        this.dialogMouseDown = false;\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  onClickMask($event: MouseEvent): void {\r\n    if (\r\n      this.mask &&\r\n      this.maskClosable &&\r\n      ($event.target as HTMLElement).classList.contains(WRAP_CLASS_NAME) &&\r\n      this.bpsVisible &&\r\n      !this.dialogMouseDown\r\n    ) {\r\n      this.onClickOkCancel('cancel');\r\n    }\r\n  }\r\n\r\n  isModalType(type: ModalType): boolean {\r\n    return this.bpsModalType === type;\r\n  }\r\n\r\n  public onClickCloseBtn(): void {\r\n    if (this.bpsVisible) {\r\n      this.onClickOkCancel('cancel');\r\n    }\r\n  }\r\n\r\n  public onClickOkCancel(type: 'ok' | 'cancel'): void {\r\n    const trigger = { ok: this.bpsOnOk, cancel: this.bpsOnCancel }[type];\r\n    const loadingKey = { ok: 'bpsOkLoading', cancel: 'bpsCancelLoading' }[type];\r\n    if (trigger instanceof EventEmitter) {\r\n      trigger.emit(this.getContentComponent());\r\n    } else if (typeof trigger === 'function') {\r\n      const result = trigger(this.getContentComponent());\r\n      const caseClose = (doClose: boolean | void | {}) => doClose !== false && this.close(doClose as R); // Users can return \"false\" to prevent closing by default\r\n      if (isPromise(result)) {\r\n        this[loadingKey] = true;\r\n        const handleThen = (doClose: boolean | void | {}) => {\r\n          this[loadingKey] = false;\r\n          caseClose(doClose);\r\n        };\r\n        (result as Promise<void>).then(handleThen).catch(handleThen);\r\n      } else {\r\n        caseClose(result);\r\n      }\r\n    }\r\n  }\r\n\r\n  public isNonEmptyString(value: {}): boolean {\r\n    return typeof value === 'string' && value !== '';\r\n  }\r\n\r\n  public isTemplateRef(value: {}): boolean {\r\n    return value instanceof TemplateRef;\r\n  }\r\n\r\n  public isComponent(value: {}): boolean {\r\n    return value instanceof Type;\r\n  }\r\n\r\n  public isModalButtons(value: string | TemplateRef<{}> | Array<ModalButtonOptions<T>> | null): boolean {\r\n    return Array.isArray(value) && value.length > 0;\r\n  }\r\n\r\n  // Do rest things when visible state changed\r\n  private handleVisibleStateChange(visible: boolean, animation: boolean = true, closeResult?: R): Promise<void> {\r\n    if (visible) {\r\n      // Hide scrollbar at the first time when shown up\r\n      this.scrollStrategy.enable();\r\n      this.savePreviouslyFocusedElement();\r\n      this.trapFocus();\r\n      if (this.container instanceof OverlayRef) {\r\n        this.overlayKeyboardDispatcher.add(this.overlayRef);\r\n      }\r\n    } else {\r\n      if (this.container instanceof OverlayRef) {\r\n        this.overlayKeyboardDispatcher.remove(this.overlayRef);\r\n      }\r\n    }\r\n\r\n    return Promise.resolve(animation ? this.animateTo(visible) : undefined).then(() => {\r\n      // Emit open/close event after animations over\r\n      if (visible) {\r\n        this.bpsAfterOpen.emit();\r\n      } else {\r\n        this.bpsAfterClose.emit(closeResult);\r\n        this.restoreFocus();\r\n        this.scrollStrategy.disable();\r\n        // Mark the for check so it can react if the view container is using OnPush change detection.\r\n        this.cdr.markForCheck();\r\n      }\r\n    });\r\n  }\r\n\r\n  // Lookup a button's property, if the prop is a function, call & then return the result, otherwise, return itself.\r\n  public getButtonCallableProp(options: ModalButtonOptions<T>, prop: string): {} {\r\n    const value = options[prop];\r\n    const args: T[] = [];\r\n    if (this.contentComponentRef) {\r\n      args.push(this.contentComponentRef.instance);\r\n    }\r\n    return typeof value === 'function' ? value.apply(options, args) : value;\r\n  }\r\n\r\n  // On nzFooter's modal button click\r\n  public onButtonClick(button: ModalButtonOptions<T>): void {\r\n    const result = this.getButtonCallableProp(button, 'onClick'); // Call onClick directly\r\n    if (isPromise(result)) {\r\n      button.loading = true;\r\n      (result as Promise<{}>).then(() => (button.loading = false)).catch(() => (button.loading = false));\r\n    }\r\n  }\r\n\r\n  // Change nzVisible from inside\r\n  private changeVisibleFromInside(visible: boolean, closeResult?: R): Promise<void> {\r\n    if (this.bpsVisible !== visible) {\r\n      // Change nzVisible value immediately\r\n      this.bpsVisible = visible;\r\n      this.bpsVisibleChange.emit(visible);\r\n      return this.handleVisibleStateChange(visible, true, closeResult);\r\n    }\r\n    return Promise.resolve();\r\n  }\r\n\r\n  private changeAnimationState(state: AnimationState): void {\r\n    this.animationState = state;\r\n    if (state) {\r\n      this.maskAnimationClassMap = {\r\n        [`fade-${state}`]: true,\r\n        [`fade-${state}-active`]: true\r\n      };\r\n      this.modalAnimationClassMap = {\r\n        [`zoom-${state}`]: true,\r\n        [`zoom-${state}-active`]: true\r\n      };\r\n    } else {\r\n      this.maskAnimationClassMap = this.modalAnimationClassMap = null;\r\n    }\r\n  }\r\n\r\n  private animateTo(isVisible: boolean): Promise<void> {\r\n    if (isVisible) {\r\n      // Figure out the lastest click position when shows up\r\n      setTimeout(() => this.updateTransformOrigin()); // [NOTE] Using timeout due to the document.click event is fired later than visible change, so if not postponed to next event-loop, we can't get the lastest click position\r\n    }\r\n\r\n    this.changeAnimationState(isVisible ? 'enter' : 'leave');\r\n    return new Promise(resolve =>\r\n      setTimeout(\r\n        () => {\r\n          // Return when animation is over\r\n          this.changeAnimationState(null);\r\n          resolve();\r\n        },\r\n        this.bpsNoAnimation ? 0 : MODAL_ANIMATE_DURATION\r\n      )\r\n    );\r\n  }\r\n\r\n  private formatModalButtons(buttons: Array<ModalButtonOptions<T>>): Array<ModalButtonOptions<T>> {\r\n    return buttons.map(button => {\r\n      return {\r\n        ...{\r\n          type: 'default',\r\n          size: 'default',\r\n          autoLoading: true,\r\n          show: true,\r\n          loading: false,\r\n          disabled: false\r\n        },\r\n        ...button\r\n      };\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Create a component dynamically but not attach to any View (this action will be executed when bodyContainer is ready)\r\n   * @param component Component class\r\n   */\r\n  private createDynamicComponent(component: Type<T>): void {\r\n    const factory = this.cfr.resolveComponentFactory(component);\r\n    const childInjector = Injector.create({\r\n      providers: [{ provide: BpsModalRef, useValue: this }],\r\n      parent: this.viewContainer.parentInjector\r\n    });\r\n    this.contentComponentRef = factory.create(childInjector);\r\n    if (this.bpsComponentParams) {\r\n      Object.assign(this.contentComponentRef.instance, this.bpsComponentParams);\r\n    }\r\n    // Do the first change detection immediately (or we do detection at ngAfterViewInit, multi-changes error will be thrown)\r\n    this.contentComponentRef.changeDetectorRef.detectChanges();\r\n  }\r\n\r\n  // Update transform-origin to the last click position on document\r\n  private updateTransformOrigin(): void {\r\n    const modalElement = this.modalContainer.nativeElement as HTMLElement;\r\n    if (this.previouslyFocusedElement) {\r\n      const previouslyDOMRect = this.previouslyFocusedElement.getBoundingClientRect();\r\n      const lastPosition = getElementOffset(this.previouslyFocusedElement);\r\n      const x = lastPosition.left + previouslyDOMRect.width / 2;\r\n      const y = lastPosition.top + previouslyDOMRect.height / 2;\r\n      this.transformOrigin = `${x - modalElement.offsetLeft}px ${y - modalElement.offsetTop}px 0px`;\r\n    }\r\n  }\r\n\r\n  private savePreviouslyFocusedElement(): void {\r\n    if (this.document) {\r\n      this.previouslyFocusedElement = this.document.activeElement as HTMLElement;\r\n    }\r\n  }\r\n\r\n  private trapFocus(): void {\r\n    if (!this.focusTrap) {\r\n      this.focusTrap = this.focusTrapFactory.create(this.elementRef.nativeElement);\r\n    }\r\n    this.focusTrap.focusInitialElementWhenReady();\r\n  }\r\n\r\n  private restoreFocus(): void {\r\n    // We need the extra check, because IE can set the `activeElement` to null in some cases.\r\n    if (this.previouslyFocusedElement && typeof this.previouslyFocusedElement.focus === 'function') {\r\n      this.previouslyFocusedElement.focus();\r\n    }\r\n    if (this.focusTrap) {\r\n      this.focusTrap.destroy();\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, ViewEncapsulation, Output, Input, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\nimport { InputBoolean } from 'ng-zorro-antd';\r\n\ndeclare var tinymce: any;\n\n@Component({\n  exportAs: 'bpsTextEditor',\n  selector: 'bps-text-editor',\n  templateUrl: './bps-text-editor.component.html',\n  styleUrls: ['./bps-text-editor.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class BpsTextEditorComponent implements OnInit, OnChanges {\n\n  showEditor = false;\r\n  @Input() @InputBoolean() lazyLoaded = false;\r\n  @Output() oninit: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() onchange: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() onblur: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() onkeyup: EventEmitter<any> = new EventEmitter<any>();\r\n  @Input() @InputBoolean() disabled = false;\r\n  @Input() height = '250px';\r\n  @Input() editorID = 'myEditor';\r\n  @Input() statusbar = false;\r\n  @Input() resize = false;\r\n  // tslint:disable-next-line: max-line-length\r\n  @Input() toolbarmobile = ['bold', 'italic', 'underline', 'strikethrough', 'alignleft', 'aligncenter', 'alignright', 'alignjustify', 'bullist', 'numlist', 'forecolor'];\r\n  @Input() toolbar = 'bold italic underline forecolor | strikethrough backcolor | alignleft aligncenter alignright alignjustify | bullist numlist image';\r\n  @Input() tinyMceSettings!: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    if (!this.lazyLoaded) {\r\n      this.initTinyMCE();\r\n    }\r\n  }\n\n  initTinyMCE() {\n    if (this.tinyMceSettings === undefined) {\r\n      this.tinyMceSettings = {\r\n        mobile: {\r\n          theme: 'mobile',\r\n          plugins: ['image table textcolor lists advlist'],\r\n          toolbar: this.toolbarmobile\r\n        },\r\n        menubar: false,\r\n        content_css: '/assets/tiny.css',\r\n        image_title: true,\r\n        toolbar_location: 'bottom',\r\n        resize: this.resize,\r\n        automatic_uploads: true,\r\n        height: this.height,\r\n        statusbar: this.statusbar,\r\n        file_picker_types: 'image',\r\n        images_upload_url: '#',\r\n        setup: (editor: any) => {\r\n          editor.on('init', (obj) => {\r\n            if (this.disabled) {\r\n              this.disableEditor();\r\n            }\r\n            this.oninit.emit(obj);\r\n          });\r\n          editor.on('blur', (obj) => {\r\n            this.onblur.emit(obj);\r\n          });\r\n          editor.on('keyup', (obj) => {\r\n            this.onkeyup.emit(obj);\r\n          });\r\n          editor.on('Change', (obj) => {\r\n            this.onchange.emit(obj);\r\n          });\r\n        },\r\n        color_map: [\r\n          \"e94c0a\", \"Orange\",\r\n          \"00a2d1\", \"Blue\",\r\n          \"7bc053\", \"Green\",\r\n          \"d80f0f\", \"Red\",\r\n          \"e9d90a\", \"Yellow\",\r\n          \"ffffff\", \"White\"\r\n        ],\r\n        plugins: ['image table textcolor lists advlist'],\r\n        toolbar: this.toolbar\r\n      };\r\n    }\r\n\r\n    setTimeout(() => {\r\n      this.showEditor = true;\r\n    }, 100);\r\n  }\n\n  disableEditor() {\n    tinymce.get(this.editorID).mode.set('readonly');\r\n  }\n\n  enableEditor() {\n    tinymce.get(this.editorID).mode.set('design');\r\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.disabled !== null && changes.disabled !== undefined && tinymce.get(this.editorID)) {\r\n      if (changes.disabled) {\r\n        this.disableEditor();\r\n      } else {\r\n        this.enableEditor();\r\n      }\r\n    }\r\n\r\n    if (changes.lazyLoaded !== null && changes.lazyLoaded !== undefined) {\r\n      if (!this.lazyLoaded) {\r\n        this.initTinyMCE();\r\n      } else if (tinymce.get(this.editorID)) {\r\n        this.showEditor = false;\r\n        tinymce.get(this.editorID).remove();\r\n      }\r\n    }\r\n  }\n\n}\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, EventEmitter } from '@angular/core';\nimport { InputBoolean } from 'ng-zorro-antd';\r\n\n@Component({\n  selector: 'bps-grid',\n  templateUrl: './bps-grid.component.html',\n  styleUrls: ['./bps-grid.component.css'],\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BpsGridComponent {\n\n  _columns: any[] = [];\n  _rows: any[] = [];\n  _selection: number[] = [1, 2];\n  _latestSelection: number[] = [1, 2];\n  @Input() @InputBoolean() disabled = false;\n  @Output() selectionChange: EventEmitter<any> = new EventEmitter<any>();\n\n  @Input()\n  set columns(value: number) {\n    if (value >= 1) {\r\n      this._columns = new Array(value);\r\n    }\r\n  }\n\n  @Input()\n  set rows(value: number) {\n    if (value >= 1) {\r\n      this._rows = new Array(value);\r\n    }\r\n  }\n\n  @Input()\n  set selection(value: number[]) {\n    this._selection = value;\r\n    this._latestSelection = value;\r\n  }\n\n  get selection() {\n    return this._selection;\r\n  }\n\n  constructor() { }\n\n  onSelectionChange(row, column) {\n    this.selection = [row, column];\r\n    this._latestSelection = [row, column];\r\n    this.selectionChange.emit(this.selection);\r\n  }\n\n  isSelected(row: number, column: number) {\n    return (row <= this.selection[0] && !column) || (!row && column <= this.selection[1]) || (row <= this.selection[0] && column === this.selection[1]) || (row === this.selection[0] && column <= this.selection[1]); \r\n  }\n\n  previewSelection(row, column) {\r\n    const newSel = [row, column];\r\n    this._selection = [...newSel];\r\n  }\r\n\r\n  endPreviewSelection() {\n    this._selection = this._latestSelection;\r\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { BpsComponentsLibComponent } from './bps-components-lib.component';\r\nimport { NgZorroAntdModule, NzNoAnimationModule, NzOverlayModule, NZ_I18N, en_US, NzToolTipModule, NzSpinModule, NzGridModule, NzAvatarModule, NzTableModule } from 'ng-zorro-antd';\r\nimport {CommonModule} from '@angular/common';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { NzAddOnModule, NzWaveModule, NzHighlightModule, NzPipesModule } from 'ng-zorro-antd/core';\r\nimport { NzIconModule } from 'ng-zorro-antd/icon';\r\nimport { NzEmptyModule } from 'ng-zorro-antd/empty';\r\nimport {FormsModule} from '@angular/forms';\r\nimport { ObserversModule } from '@angular/cdk/observers';\r\nimport { EditorModule } from '@tinymce/tinymce-angular';\r\n\r\n/* BPS Input */\r\nimport {BpsInputDirective} from './components/bps-input/bps-input.directive';\r\nimport {BpsAutosizeDirective} from './components/bps-input/bps-autosize.directive';\r\nimport {BpsInputGroupComponent} from './components/bps-input/bps-input-group.component';\r\n\r\n/* BPS Select */\r\nimport {BpsOptionComponent} from './components/bps-select/bps-option.component';\r\nimport {BpsFilterGroupOptionPipe} from './components/bps-select/bps-option.pipe';\r\nimport {BpsFilterOptionPipe} from './components/bps-select/bps-option.pipe';\r\nimport {BpsOptionContainerComponent} from './components/bps-select/bps-option-container.component';\r\nimport {BpsOptionGroupComponent} from './components/bps-select/bps-option-group.component';\r\nimport {BpsOptionLiComponent} from './components/bps-select/bps-option-li.component';\r\nimport {BpsSelectComponent} from './components/bps-select/bps-select.component';\r\nimport {BpsSelectTopControlComponent} from './components/bps-select/bps-select-top-control.component';\r\nimport {BpsSelectUnselectableDirective} from './components/bps-select/bps-select-unselectable.directive';\r\n\r\n/* BPS Form */\r\nimport {BpsFormDirective} from './components/bps-form/bps-form.directive';\r\nimport {BpsFormControlComponent} from './components/bps-form/bps-form-control.component';\r\nimport {BpsFormExplainComponent} from './components/bps-form/bps-form-explain.component';\r\nimport {BpsFormExtraComponent} from './components/bps-form/bps-form-extra.component';\r\nimport {BpsFormItemComponent} from './components/bps-form/bps-form-item.component';\r\nimport {BpsFormLabelComponent} from './components/bps-form/bps-form-label.component';\r\nimport {BpsFormSplitComponent} from './components/bps-form/bps-form-split.component';\r\nimport {BpsFormTextComponent} from './components/bps-form/bps-form-text.component';\r\n\r\n/* BPS Button */\r\nimport {BpsButtonComponent} from './components/bps-button/bps-button.component';\r\nimport { BpsButtonGroupComponent } from './components/bps-button/bps-button-group.component';\r\n\r\n/* BPS Switch */\r\nimport { BpsSwitchComponent } from './components/bps-switch/bps-switch.component';\r\n\r\n/* BPS Checkbox */\r\nimport { BpsCheckboxGroupComponent } from './components/bps-checkbox/bps-checkbox-group.component';\r\nimport { BpsCheckboxWrapperComponent } from './components/bps-checkbox/bps-checkbox-wrapper.component';\r\nimport { BpsCheckboxComponent } from './components/bps-checkbox/bps-checkbox.component';\r\n\r\n/* BPS Radio */\r\nimport { BpsRadioComponent } from './components/bps-radio/bps-radio.component';\r\nimport { BpsRadioGroupComponent } from './components/bps-radio/bps-radio-group.component';\r\nimport { BpsRadioButtonComponent } from './components/bps-radio/bps-radio-button.component';\r\n\r\n/* BPS Collapse */\r\nimport { BpsCollapseComponent } from './components/bps-collapse/bps-collapse.component';\r\nimport { BpsCollapsePanelComponent } from './components/bps-collapse/bps-collapse-panel.component';\r\n\r\n/* BPS Popover */\r\nimport { BpsPopoverComponent } from './components/bps-popover/bps-popover.component';\r\nimport { BpsPopoverDirective } from './components/bps-popover/bps-popover.directive';\r\n\r\n/* BPS Tooltip */\r\nimport { BpsTooltipDirective } from './components/bps-tooltip/bps-tooltip.directive';\r\nimport { BpsToolTipComponent } from './components/bps-tooltip/bps-tooltip.component';\r\n\r\n/* BPS List */\r\nimport { BpsListComponent } from './components/bps-list/bps-list.component';\r\nimport { BpsListItemComponent } from './components/bps-list/bps-list-item.component';\r\nimport { BpsListItemMetaComponent } from './components/bps-list/bps-list-item-meta.component';\r\n\r\n/*BPS Table */\r\nimport { BpsTableComponent } from './components/bps-table/bps-table.component';\r\n\r\n/* BPS Table Expandable Panel */\r\nimport { BpsTableExpandablePanelComponent } from './components/bps-table-expandable-panel/bps-table-expandable-panel.component';\r\n\r\n/* BPS Configuration Selector */\r\nimport { BpsConfigurationSelectorComponent } from './components/bps-configuration-selector/bps-configuration-selector.component';\r\n\r\nimport { NzResizableModule } from 'ng-zorro-antd/resizable';\r\n\r\n/* BPS Overflow Menu */ \r\nimport { BpsDropDownADirective } from './components/bps-dropdown/bps-dropdown-a.directive';\r\nimport { BpsDropdownMenuComponent } from './components/bps-dropdown/bps-dropdown-menu.component';\r\nimport { BpsDropDownDirective } from './components/bps-dropdown/bps-dropdown.directive';\r\n\r\n/* BPS Tree */\r\nimport { BpsTreeComponent } from './components/bps-tree/bps-tree.component';\r\nimport { BpsTreeNodeComponent } from './components/bps-tree/bps-tree-node.component';\r\n\r\n/* Bps Modal */\r\nimport { BpsModalComponent } from './components/bps-modal/bps-modal.component';\r\nimport { BpsModalFooterDirective } from './components/bps-modal/bps-modal-footer.directive';\r\n\r\n/* BPS Text Editor */\r\nimport { BpsTextEditorComponent } from './components/bps-text-editor/bps-text-editor.component';\nimport { BpsGridComponent } from './components/bps-grid/bps-grid.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    BpsModalComponent,\r\n    BpsModalFooterDirective,\r\n    BpsTreeComponent,\r\n    BpsTreeNodeComponent,\r\n    BpsDropDownDirective,\r\n    BpsDropdownMenuComponent,\r\n    BpsDropDownADirective,\r\n    BpsTableComponent,\r\n    BpsListComponent,\r\n    BpsListItemComponent,\r\n    BpsListItemMetaComponent,\r\n    BpsTooltipDirective,\r\n    BpsToolTipComponent,\r\n    BpsPopoverDirective,\r\n    BpsPopoverComponent,\r\n    BpsComponentsLibComponent,\r\n    BpsInputGroupComponent,\r\n    BpsInputDirective,\r\n    BpsAutosizeDirective,\r\n    BpsOptionComponent,\r\n    BpsFilterOptionPipe,\r\n    BpsFilterGroupOptionPipe,\r\n    BpsOptionContainerComponent,\r\n    BpsOptionGroupComponent,\r\n    BpsOptionLiComponent,\r\n    BpsSelectComponent,\r\n    BpsSelectTopControlComponent,\r\n    BpsSelectUnselectableDirective,\r\n    BpsFormDirective,\r\n    BpsFormExplainComponent,\r\n    BpsFormControlComponent,\r\n    BpsFormExtraComponent,\r\n    BpsFormItemComponent,\r\n    BpsFormLabelComponent,\r\n    BpsFormSplitComponent,\r\n    BpsFormTextComponent,\r\n    BpsButtonComponent,\r\n    BpsButtonGroupComponent,\r\n    BpsSwitchComponent,\r\n    BpsCheckboxGroupComponent,\r\n    BpsCheckboxWrapperComponent,\r\n    BpsCheckboxComponent,\r\n    BpsRadioComponent,\r\n    BpsRadioGroupComponent,\r\n    BpsRadioButtonComponent,\r\n    BpsCollapseComponent,\r\n    BpsCollapsePanelComponent,\r\n    BpsTableExpandablePanelComponent,\r\n    BpsConfigurationSelectorComponent,\r\n    BpsTextEditorComponent,\r\n    BpsGridComponent\r\n  ],\r\n  imports: [\r\n    NzPipesModule,\r\n    NzHighlightModule,\r\n    NgZorroAntdModule,\r\n    CommonModule,\r\n    NzAddOnModule,\r\n    NzIconModule,\r\n    OverlayModule,\r\n    NzNoAnimationModule,\r\n    NzToolTipModule,\r\n    NzOverlayModule,\r\n    NzEmptyModule,\r\n    FormsModule,\r\n    ObserversModule,\r\n    NzWaveModule,\r\n    NzSpinModule,\r\n    NzGridModule,\r\n    NzAvatarModule,\r\n    NzTableModule,\r\n    EditorModule,\r\n    NzResizableModule\r\n  ],\r\n  exports: [\r\n    BpsGridComponent,\r\n    BpsModalComponent,\r\n    BpsModalFooterDirective,\r\n    BpsTreeComponent,\r\n    BpsTreeNodeComponent,\r\n    BpsDropDownDirective,\r\n    BpsDropdownMenuComponent,\r\n    BpsDropDownADirective,\r\n    BpsConfigurationSelectorComponent,\r\n    BpsTableComponent,\r\n    BpsListComponent,\r\n    BpsListItemComponent,\r\n    BpsListItemMetaComponent,\r\n    BpsPopoverDirective,\r\n    BpsPopoverComponent,\r\n    BpsComponentsLibComponent,\r\n    BpsComponentsLibComponent,\r\n    BpsInputGroupComponent,\r\n    BpsInputDirective,\r\n    BpsAutosizeDirective,\r\n    BpsOptionComponent,\r\n    BpsFilterOptionPipe,\r\n    BpsFilterGroupOptionPipe,\r\n    BpsOptionContainerComponent,\r\n    BpsOptionGroupComponent,\r\n    BpsOptionLiComponent,\r\n    BpsSelectComponent,\r\n    BpsSelectTopControlComponent,\r\n    BpsSelectUnselectableDirective,\r\n    BpsFormDirective,\r\n    BpsFormExplainComponent,\r\n    BpsFormControlComponent,\r\n    BpsFormExtraComponent,\r\n    BpsFormItemComponent,\r\n    BpsFormLabelComponent,\r\n    BpsFormSplitComponent,\r\n    BpsFormTextComponent,\r\n    BpsButtonComponent,\r\n    BpsButtonGroupComponent,\r\n    BpsSwitchComponent,\r\n    BpsCheckboxGroupComponent,\r\n    BpsCheckboxWrapperComponent,\r\n    BpsCheckboxComponent,\r\n    BpsRadioComponent,\r\n    BpsRadioGroupComponent,\r\n    BpsRadioButtonComponent,\r\n    BpsCollapseComponent,\r\n    BpsCollapsePanelComponent,\r\n    BpsTooltipDirective,\r\n    BpsToolTipComponent,\r\n    BpsTableExpandablePanelComponent,\r\n    BpsTextEditorComponent\r\n  ],\r\n  providers: [\r\n    { provide: NZ_I18N, useValue: en_US }\r\n  ],\r\n  entryComponents: [\r\n    BpsPopoverComponent,\r\n    BpsToolTipComponent\r\n  ]\r\n})\r\nexport class BpsComponentsLibModule { }\r\n"]}