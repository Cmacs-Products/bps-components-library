{"version":3,"file":"bps-components-lib.mjs","sources":["../../../projects/bps-components-lib/src/lib/bps-components-lib.service.ts","../../../projects/bps-components-lib/src/lib/bps-components-lib.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-input/bps-input.directive.ts","../../../projects/bps-components-lib/src/lib/components/core/addon/string_template_outlet.ts","../../../projects/bps-components-lib/src/lib/components/bps-input/input-group-slot.component.ts","../../../projects/bps-components-lib/src/lib/components/core/form/feedback.ts","../../../projects/bps-components-lib/src/lib/components/bps-input/bps-input-group.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-tree/tree/config.ts","../../../projects/bps-components-lib/src/lib/components/bps-tree/tree/config.service.ts","../../../projects/bps-components-lib/src/lib/components/core/services/update-host-class.service.ts","../../../projects/bps-components-lib/src/lib/components/core/responsive/nz-breakpoint.ts","../../../projects/bps-components-lib/src/lib/components/core/services/nz-dom-event.service.ts","../../../projects/bps-components-lib/src/lib/components/bps-grid/nz-row.directive.ts","../../../projects/bps-components-lib/src/lib/components/bps-grid/nz-col.directive.ts","../../../projects/bps-components-lib/src/lib/components/bps-form/bps-form-explain.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-form/bps-form-explain.component.html","../../../projects/bps-components-lib/src/lib/components/bps-form/bps-form-item.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-form/bps-form-item.component.html","../../../projects/bps-components-lib/src/lib/components/bps-form/bps-form-label.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-form/bps-form-label.component.html","../../../projects/bps-components-lib/src/lib/components/bps-form/bps-form.directive.ts","../../../projects/bps-components-lib/src/lib/components/bps-form/bps-form-control.component.html","../../../projects/bps-components-lib/src/lib/components/bps-form/bps-form-control.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-form/bps-form-extra.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-form/bps-form-extra.component.html","../../../projects/bps-components-lib/src/lib/components/bps-form/bps-form-split.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-form/bps-form-split.component.html","../../../projects/bps-components-lib/src/lib/components/bps-form/bps-form-text.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-form/bps-form-text.component.html","../../../projects/bps-components-lib/src/lib/components/core/util/check.ts","../../../projects/bps-components-lib/src/lib/components/core/util/dom.ts","../../../projects/bps-components-lib/src/lib/components/bps-tooltip/base.ts","../../../projects/bps-components-lib/src/lib/components/bps-tooltip/tooltip.ts","../../../projects/bps-components-lib/src/lib/components/bps-button/bps-button.component.html","../../../projects/bps-components-lib/src/lib/components/bps-button/bps-button.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-button/bps-button-group.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-button/bps-button-group.component.html","../../../projects/bps-components-lib/src/lib/components/bps-switch/bps-switch.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-checkbox/bps-checkbox-wrapper.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-checkbox/bps-checkbox.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-checkbox/bps-checkbox-group.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-radio/radio-button.directive.ts","../../../projects/bps-components-lib/src/lib/components/bps-radio/bps-radio.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-radio/radio-group.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-collapse/bps-collapse.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-collapse/bps-collapse.component.html","../../../projects/bps-components-lib/src/lib/components/bps-collapse/bps-collapse-panel.component.html","../../../projects/bps-components-lib/src/lib/components/bps-collapse/bps-collapse-panel.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-popover/bps-popover.ts","../../../projects/bps-components-lib/src/lib/components/bps-list/bps-list.component.html","../../../projects/bps-components-lib/src/lib/components/bps-list/bps-list.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-list/bps-list-item-meta.component.html","../../../projects/bps-components-lib/src/lib/components/bps-list/bps-list-item-meta.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-list/bps-list-item.component.html","../../../projects/bps-components-lib/src/lib/components/bps-list/bps-list-item.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-dropdown/bps-dropdown.directive.ts","../../../projects/bps-components-lib/src/lib/components/bps-table/bps-table.component.html","../../../projects/bps-components-lib/src/lib/components/bps-table/bps-table.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-table-expandable-panel/bps-table-expandable-panel.component.html","../../../projects/bps-components-lib/src/lib/components/bps-table-expandable-panel/bps-table-expandable-panel.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-configuration-selector/bps-configuration-selector.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-configuration-selector/bps-configuration-selector.component.html","../../../projects/bps-components-lib/src/lib/components/bps-dropdown/bps-dropdown-a.directive.ts","../../../projects/bps-components-lib/src/lib/components/bps-dropdown/dropdown-menu.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-tree/tree/nz-tree-base-node.ts","../../../projects/bps-components-lib/src/lib/components/bps-tree/tree/nz-tree-base.ts","../../../projects/bps-components-lib/src/lib/components/bps-tree/tree/nz-tree-base-util.ts","../../../projects/bps-components-lib/src/lib/components/bps-tree/tree/nz-tree-base.service.ts","../../../projects/bps-components-lib/src/lib/components/bps-tree/bps-tree.service.ts","../../../projects/bps-components-lib/src/lib/components/bps-tree/tree/nz-tree-service.resolver.ts","../../../projects/bps-components-lib/src/lib/components/bps-tree/bps-tree-node.component.html","../../../projects/bps-components-lib/src/lib/components/bps-tree/bps-tree-node.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-tree/bps-tree.component.html","../../../projects/bps-components-lib/src/lib/components/bps-tree/bps-tree.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-modal/nz-modal-ref.class.ts","../../../projects/bps-components-lib/src/lib/components/bps-modal/bps-modal-footer.directive.ts","../../../projects/bps-components-lib/src/lib/components/bps-modal/bps-modal-ref.class.ts","../../../projects/bps-components-lib/src/lib/components/bps-modal/bps-modal-config.ts","../../../projects/bps-components-lib/src/lib/components/bps-modal/nz-modal-control.service.module.ts","../../../projects/bps-components-lib/src/lib/components/bps-modal/bps-modal-control.service.ts","../../../projects/bps-components-lib/src/lib/components/core/pipes/nz-css-unit.pipe.ts","../../../projects/bps-components-lib/src/lib/components/bps-modal/bps-modal.component.html","../../../projects/bps-components-lib/src/lib/components/bps-modal/bps-modal.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-text-editor/bps-text-editor.component.html","../../../projects/bps-components-lib/src/lib/components/bps-text-editor/bps-text-editor.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-grid/bps-grid.component.html","../../../projects/bps-components-lib/src/lib/components/bps-grid/bps-grid.component.ts","../../../projects/bps-components-lib/src/lib/components/core/addon/classlist_add.ts","../../../projects/bps-components-lib/src/lib/components/core/addon/addon.module.ts","../../../projects/bps-components-lib/src/lib/components/bps-input/autosize.directive.ts","../../../projects/bps-components-lib/src/lib/components/bps-input/textarea-count.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-dropdown/dropdown-button.directive.ts","../../../projects/bps-components-lib/src/lib/components/bps-select/option-group.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-select/option.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-select/option-item.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-select/option-item-group.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-select/option-container.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-select/select-search.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-select/select-item.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-select/select-placeholder.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-select/select-top-control.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-select/select-arrow.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-select/select-clear.component.ts","../../../projects/bps-components-lib/src/lib/components/bps-select/select.component.ts","../../../projects/bps-components-lib/src/lib/bps-components-lib.module.ts","../../../projects/bps-components-lib/src/public-api.ts","../../../projects/bps-components-lib/src/bps-components-lib.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BpsComponentsLibService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-bps-components-lib',\n  template: `\n    <p>\n      bps-components-lib works!\n    </p>\n  `,\n  styles: []\n})\nexport class BpsComponentsLibComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Direction, Directionality } from '@angular/cdk/bidi';\nimport {\n  ComponentRef,\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Renderer2,\n  Self,\n  SimpleChanges,\n  ViewContainerRef\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, takeUntil } from 'rxjs/operators';\n\nimport { NzFormItemFeedbackIconComponent, NzFormNoStatusService, NzFormStatusService } from 'ng-zorro-antd/core/form';\nimport { BooleanInput, NgClassInterface, NzSizeLDSType, NzStatus, NzValidateStatus } from 'ng-zorro-antd/core/types';\nimport { InputBoolean, getStatusClassNames } from 'ng-zorro-antd/core/util';\n\n@Directive({\n  selector: 'input[bps-input],textarea[bps-input]',\n  exportAs: 'bpsInput',\n  host: {\n    class: 'ant-input',\n    '[class.bps-input-opened]': 'opened',\n    '[class.ant-input-disabled]': 'disabled',\n    '[class.ant-input-borderless]': 'borderless',\n    '[class.ant-input-lg]': `size === 'large'`,\n    '[class.ant-input-sm]': `size === 'small'`,\n    '[attr.disabled]': 'disabled || null',\n    '[class.ant-input-rtl]': `dir=== 'rtl'`,\n    '[class.ant-input-stepperless]': `nzStepperless`\n  }\n})\nexport class BpsInputDirective implements OnChanges, OnInit, OnDestroy {\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_borderless: BooleanInput;\n  @Input() @InputBoolean() borderless = false;\n  @Input() size: NzSizeLDSType = 'default';\n  @Input() @InputBoolean() nzStepperless: boolean = true;\n  @Input() nzStatus: NzStatus = '';\n  @Input() @InputBoolean() opened = false;\n  @Input()\n  get disabled(): boolean {\n    if (this.ngControl && this.ngControl.disabled !== null) {\n      return this.ngControl.disabled;\n    }\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = value != null && `${value}` !== 'false';\n  }\n  _disabled = false;\n  disabled$ = new Subject<boolean>();\n  dir: Direction = 'ltr';\n  // status\n  prefixCls: string = 'ant-input';\n  status: NzValidateStatus = '';\n  statusCls: NgClassInterface = {};\n  hasFeedback: boolean = false;\n  feedbackRef: ComponentRef<NzFormItemFeedbackIconComponent> | null = null;\n  components: Array<ComponentRef<NzFormItemFeedbackIconComponent>> = [];\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    @Optional() @Self() public ngControl: NgControl,\n    private renderer: Renderer2,\n    private elementRef: ElementRef,\n    protected hostView: ViewContainerRef,\n    @Optional() private directionality: Directionality,\n    @Optional() private nzFormStatusService?: NzFormStatusService,\n    @Optional() public nzFormNoStatusService?: NzFormNoStatusService\n  ) { }\n\n  ngOnInit(): void {\n    this.nzFormStatusService?.formStatusChanges\n      .pipe(\n        distinctUntilChanged((pre, cur) => {\n          return pre.status === cur.status && pre.hasFeedback === cur.hasFeedback;\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(({ status, hasFeedback }) => {\n        this.setStatusStyles(status, hasFeedback);\n      });\n\n    if (this.ngControl) {\n      this.ngControl.statusChanges\n        ?.pipe(\n          filter(() => this.ngControl.disabled !== null),\n          takeUntil(this.destroy$)\n        )\n        .subscribe(() => {\n          this.disabled$.next(this.ngControl.disabled!);\n        });\n    }\n\n    this.dir = this.directionality.value;\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { disabled, nzStatus } = changes;\n    if (disabled) {\n      this.disabled$.next(this.disabled);\n    }\n    if (nzStatus) {\n      this.setStatusStyles(this.nzStatus, this.hasFeedback);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private setStatusStyles(status: NzValidateStatus, hasFeedback: boolean): void {\n    // set inner status\n    this.status = status;\n    this.hasFeedback = hasFeedback;\n    this.renderFeedbackIcon();\n    // render status if nzStatus is set\n    this.statusCls = getStatusClassNames(this.prefixCls, status, hasFeedback);\n    Object.keys(this.statusCls).forEach(status => {\n      if (this.statusCls[status]) {\n        this.renderer.addClass(this.elementRef.nativeElement, status);\n      } else {\n        this.renderer.removeClass(this.elementRef.nativeElement, status);\n      }\n    });\n  }\n\n  private renderFeedbackIcon(): void {\n    if (!this.status || !this.hasFeedback || !!this.nzFormNoStatusService) {\n      // remove feedback\n      this.hostView.clear();\n      this.feedbackRef = null;\n      return;\n    }\n\n    this.feedbackRef = this.feedbackRef || this.hostView.createComponent(NzFormItemFeedbackIconComponent);\n    this.feedbackRef.location.nativeElement.classList.add('ant-input-suffix');\n    this.feedbackRef.instance.status = this.status;\n    this.feedbackRef.instance.updateIcon();\n  }\n}\n","import {\n  Directive,\n  EmbeddedViewRef,\n  Input,\n  OnChanges,\n  SimpleChange,\n  SimpleChanges,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\n\n@Directive({\n  selector: '[nzStringTemplateOutlet]',\n  exportAs: 'nzStringTemplateOutlet'\n})\nexport class NzStringTemplateOutletDirective implements OnChanges {\n  private isTemplate: boolean;\n  // tslint:disable-next-line:no-any\n  private inputTemplate: TemplateRef<any> | null = null;\n  private inputViewRef: EmbeddedViewRef<void> | null = null;\n  private defaultViewRef: EmbeddedViewRef<void> | null = null;\n\n  // tslint:disable-next-line:no-any\n  @Input() nzStringTemplateOutletContext: any | null = null;\n\n  @Input()\n  // tslint:disable-next-line:no-any\n  set nzStringTemplateOutlet(value: string | TemplateRef<any>) {\n    if (value instanceof TemplateRef) {\n      this.isTemplate = true;\n      this.inputTemplate = value;\n    } else {\n      this.isTemplate = false;\n    }\n  }\n\n  recreateView(): void {\n    if (!this.isTemplate) {\n      /** use default template when input is string **/\n      if (!this.defaultViewRef) {\n        if (this.defaultTemplate) {\n          this.defaultViewRef = this.viewContainer.createEmbeddedView(\n            this.defaultTemplate,\n            this.nzStringTemplateOutletContext\n          );\n        }\n      }\n    } else {\n      /** use input template when input is templateRef **/\n      if (!this.inputViewRef) {\n        if (this.inputTemplate) {\n          this.inputViewRef = this.viewContainer.createEmbeddedView(\n            this.inputTemplate,\n            this.nzStringTemplateOutletContext\n          );\n        }\n      }\n    }\n  }\n\n  // tslint:disable-next-line:no-any\n  private getType(value: string | TemplateRef<any>): 'template' | 'string' {\n    if (value instanceof TemplateRef) {\n      return 'template';\n    } else {\n      return 'string';\n    }\n  }\n\n  private shouldRecreateView(changes: SimpleChanges): boolean {\n    const { nzStringTemplateOutletContext, nzStringTemplateOutlet } = changes;\n    let shouldOutletRecreate = false;\n    if (nzStringTemplateOutlet) {\n      if (nzStringTemplateOutlet.firstChange) {\n        shouldOutletRecreate = true;\n      } else {\n        const previousOutletType = this.getType(nzStringTemplateOutlet.previousValue);\n        const currentOutletType = this.getType(nzStringTemplateOutlet.currentValue);\n        shouldOutletRecreate = !(previousOutletType === 'string' && currentOutletType === 'string');\n      }\n    }\n    const shouldContextRecreate =\n      nzStringTemplateOutletContext && this.hasContextShapeChanged(nzStringTemplateOutletContext);\n    return shouldContextRecreate || shouldOutletRecreate;\n  }\n\n  private hasContextShapeChanged(ctxChange: SimpleChange): boolean {\n    const prevCtxKeys = Object.keys(ctxChange.previousValue || {});\n    const currCtxKeys = Object.keys(ctxChange.currentValue || {});\n\n    if (prevCtxKeys.length === currCtxKeys.length) {\n      for (const propName of currCtxKeys) {\n        if (prevCtxKeys.indexOf(propName) === -1) {\n          return true;\n        }\n      }\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  // tslint:disable-next-line:no-any\n  private updateExistingContext(ctx: any): void {\n    for (const propName of Object.keys(ctx)) {\n      // tslint:disable-next-line:no-any\n      (this.inputViewRef!.context as any)[propName] = this.nzStringTemplateOutletContext[propName];\n    }\n  }\n\n  constructor(private viewContainer: ViewContainerRef, private defaultTemplate: TemplateRef<void>) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const recreateView = this.shouldRecreateView(changes);\n    if (recreateView) {\n      if (this.viewContainer) {\n        this.viewContainer.clear();\n        this.defaultViewRef = null;\n        this.inputViewRef = null;\n      }\n      this.recreateView();\n    } else {\n      if (this.inputViewRef && this.nzStringTemplateOutletContext) {\n        this.updateExistingContext(this.nzStringTemplateOutletContext);\n      }\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, TemplateRef, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: '[bps-input-group-slot]',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <i nz-icon [nzType]=\"icon\" *ngIf=\"icon\"></i>\n    <ng-container *nzStringTemplateOutlet=\"template\">{{ template }}</ng-container>\n  `,\n  host: {\n    '[class.ant-input-group-addon]': `type === 'addon'`,\n    '[class.ant-input-prefix]': `type === 'prefix'`,\n    '[class.ant-input-suffix]': `type === 'suffix'`\n  }\n})\nexport class BpsInputGroupSlotComponent {\n  @Input() icon?: string | null = null;\n  @Input() type: 'addon' | 'prefix' | 'suffix' | null = null;\n  @Input() template?: string | TemplateRef<void> | null = null;\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { NzValidateStatus } from 'ng-zorro-antd/core/types';\n\nconst iconTypeMap = {\n  error: 'close-circle-fill',\n  validating: 'loading',\n  success: 'check-circle-fill',\n  warning: 'exclamation-circle-fill'\n} as const;\n\n@Component({\n  selector: 'bps-form-item-feedback-icon',\n  exportAs: 'bpsFormFeedbackIcon',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: ` <span *ngIf=\"iconType\" nz-icon [nzType]=\"iconType\"></span> `,\n  host: {\n    class: 'ant-form-item-feedback-icon',\n    '[class.ant-form-item-feedback-icon-error]': 'status===\"error\"',\n    '[class.ant-form-item-feedback-icon-warning]': 'status===\"warning\"',\n    '[class.ant-form-item-feedback-icon-success]': 'status===\"success\"',\n    '[class.ant-form-item-feedback-icon-validating]': 'status===\"validating\"'\n  }\n})\nexport class BpsFormItemFeedbackIconComponent implements OnChanges {\n  @Input() status: NzValidateStatus = '';\n  constructor(public cdr: ChangeDetectorRef) { }\n\n  iconType: typeof iconTypeMap[keyof typeof iconTypeMap] | null = null;\n\n  ngOnChanges(_changes: SimpleChanges): void {\n    this.updateIcon();\n  }\n\n  updateIcon(): void {\n    this.iconType = this.status ? iconTypeMap[this.status] : null;\n    this.cdr.markForCheck();\n  }\n}\n","import { FocusMonitor } from '@angular/cdk/a11y';\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  QueryList,\n  Renderer2,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { merge, Subject } from 'rxjs';\nimport { distinctUntilChanged, map, mergeMap, startWith, switchMap, takeUntil } from 'rxjs/operators';\n\nimport { NzFormNoStatusService, NzFormStatusService } from 'ng-zorro-antd/core/form';\nimport { BooleanInput, NgClassInterface, NzSizeLDSType, NzStatus, NzValidateStatus } from 'ng-zorro-antd/core/types';\nimport { getStatusClassNames, InputBoolean } from 'ng-zorro-antd/core/util';\n\nimport { BpsInputDirective } from './bps-input.directive';\n\n@Directive({\n  selector: `bps-input-group[bpsSuffix], bps-input-group[bpsPrefix]`\n})\nexport class NzInputGroupWhitSuffixOrPrefixDirective {\n  constructor(public elementRef: ElementRef) { }\n}\n\n@Component({\n  selector: 'bps-input-group',\n  exportAs: 'bpsInputGroup',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [NzFormNoStatusService],\n  template: `\n    <span class=\"ant-input-wrapper ant-input-group\" *ngIf=\"isAddOn; else noAddOnTemplate\">\n      <span\n        *ngIf=\"bpsAddOnBefore || bpsAddOnBeforeIcon\"\n        bps-input-group-slot\n        type=\"addon\"\n        [icon]=\"bpsAddOnBeforeIcon\"\n        [template]=\"bpsAddOnBefore\"\n      ></span>\n      <span\n        *ngIf=\"isAffix || hasFeedback; else contentTemplate\"\n        class=\"ant-input-affix-wrapper\"\n        [class.ant-input-affix-wrapper-disabled]=\"disabled\"\n        [class.ant-input-affix-wrapper-sm]=\"isSmall\"\n        [class.ant-input-affix-wrapper-lg]=\"isLarge\"\n        [class.ant-input-affix-wrapper-focused]=\"focused\"\n        [ngClass]=\"affixInGroupStatusCls\"\n      >\n        <ng-template [ngTemplateOutlet]=\"affixTemplate\"></ng-template>\n      </span>\n      <span\n        *ngIf=\"bpsAddOnAfter || bpsAddOnAfterIcon\"\n        bps-input-group-slot\n        type=\"addon\"\n        [icon]=\"bpsAddOnAfterIcon\"\n        [template]=\"bpsAddOnAfter\"\n      ></span>\n    </span>\n    <ng-template #noAddOnTemplate>\n      <ng-template [ngIf]=\"isAffix\" [ngIfElse]=\"contentTemplate\">\n        <ng-template [ngTemplateOutlet]=\"affixTemplate\"></ng-template>\n      </ng-template>\n    </ng-template>\n    <ng-template #affixTemplate>\n      <span\n        *ngIf=\"bpsPrefix || bpsPrefixIcon\"\n        bps-input-group-slot\n        type=\"prefix\"\n        [icon]=\"bpsPrefixIcon\"\n        [template]=\"bpsPrefix\"\n      ></span>\n      <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n      <span\n        *ngIf=\"bpsSuffix || bpsSuffixIcon || isFeedback\"\n        bps-input-group-slot\n        type=\"suffix\"\n        [icon]=\"bpsSuffixIcon\"\n        [template]=\"bpsSuffix\"\n      >\n        <bps-form-item-feedback-icon *ngIf=\"isFeedback\" [status]=\"status\"></bps-form-item-feedback-icon>\n      </span>\n    </ng-template>\n    <ng-template #contentTemplate>\n      <ng-content></ng-content>\n      <span *ngIf=\"!isAddOn && !isAffix && isFeedback\" bps-input-group-slot type=\"suffix\">\n        <bps-form-item-feedback-icon [status]=\"status\"></bps-form-item-feedback-icon>\n      </span>\n    </ng-template>\n  `,\n  host: {\n    '[class.ant-input-group-compact]': `bpsCompact`,\n    '[class.ant-input-search-enter-button]': `bpsSearch`,\n    '[class.ant-input-search]': `bpsSearch`,\n    '[class.ant-input-search-rtl]': `dir === 'rtl'`,\n    '[class.ant-input-search-sm]': `bpsSearch && isSmall`,\n    '[class.ant-input-search-large]': `bpsSearch && isLarge`,\n    '[class.ant-input-group-wrapper]': `isAddOn`,\n    '[class.ant-input-group-wrapper-rtl]': `dir === 'rtl'`,\n    '[class.ant-input-group-wrapper-lg]': `isAddOn && isLarge`,\n    '[class.ant-input-group-wrapper-sm]': `isAddOn && isSmall`,\n    '[class.ant-input-affix-wrapper]': `isAffix && !isAddOn`,\n    '[class.ant-input-affix-wrapper-rtl]': `dir === 'rtl'`,\n    '[class.ant-input-affix-wrapper-focused]': `isAffix && focused`,\n    '[class.ant-input-affix-wrapper-disabled]': `isAffix && disabled`,\n    '[class.ant-input-affix-wrapper-lg]': `isAffix && !isAddOn && isLarge`,\n    '[class.ant-input-affix-wrapper-sm]': `isAffix && !isAddOn && isSmall`,\n    '[class.ant-input-group]': `!isAffix && !isAddOn`,\n    '[class.ant-input-group-rtl]': `dir === 'rtl'`,\n    '[class.ant-input-group-lg]': `!isAffix && !isAddOn && isLarge`,\n    '[class.ant-input-group-sm]': `!isAffix && !isAddOn && isSmall`\n  }\n})\nexport class BpsInputGroupComponent implements AfterContentInit, OnChanges, OnInit, OnDestroy {\n  static ngAcceptInputType_bpsSearch: BooleanInput;\n  static ngAcceptInputType_bpsCompact: BooleanInput;\n\n  @ContentChildren(BpsInputDirective) listOfNzInputDirective!: QueryList<BpsInputDirective>;\n  @Input() bpsAddOnBeforeIcon?: string | null = null;\n  @Input() bpsAddOnAfterIcon?: string | null = null;\n  @Input() bpsPrefixIcon?: string | null = null;\n  @Input() bpsSuffixIcon?: string | null = null;\n  @Input() bpsAddOnBefore?: string | TemplateRef<void>;\n  @Input() bpsAddOnAfter?: string | TemplateRef<void>;\n  @Input() bpsPrefix?: string | TemplateRef<void>;\n  @Input() bpsStatus: NzStatus = '';\n  @Input() bpsSuffix?: string | TemplateRef<void>;\n  @Input() bpsSize: NzSizeLDSType = 'default';\n  @Input() @InputBoolean() bpsSearch = false;\n  @Input() @InputBoolean() bpsCompact = false;\n  isLarge = false;\n  isSmall = false;\n  isAffix = false;\n  isAddOn = false;\n  isFeedback = false;\n  focused = false;\n  disabled = false;\n  dir: Direction = 'ltr';\n  // status\n  prefixCls: string = 'ant-input';\n  affixStatusCls: NgClassInterface = {};\n  groupStatusCls: NgClassInterface = {};\n  affixInGroupStatusCls: NgClassInterface = {};\n  status: NzValidateStatus = '';\n  hasFeedback: boolean = false;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private focusMonitor: FocusMonitor,\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    private cdr: ChangeDetectorRef,\n    @Optional() private directionality: Directionality,\n    @Optional() private nzFormStatusService?: NzFormStatusService,\n    @Optional() private nzFormNoStatusService?: NzFormNoStatusService\n  ) { }\n\n  updateChildrenInputSize(): void {\n    if (this.listOfNzInputDirective) {\n      this.listOfNzInputDirective.forEach(item => (item.size = this.bpsSize));\n    }\n  }\n\n  ngOnInit(): void {\n    this.nzFormStatusService?.formStatusChanges\n      .pipe(\n        distinctUntilChanged((pre, cur) => {\n          return pre.status === cur.status && pre.hasFeedback === cur.hasFeedback;\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(({ status, hasFeedback }) => {\n        this.setStatusStyles(status, hasFeedback);\n      });\n\n    this.focusMonitor\n      .monitor(this.elementRef, true)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(focusOrigin => {\n        this.focused = !!focusOrigin;\n        this.cdr.markForCheck();\n      });\n\n    this.dir = this.directionality.value;\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n    });\n  }\n\n  ngAfterContentInit(): void {\n    this.updateChildrenInputSize();\n    const listOfInputChange$ = this.listOfNzInputDirective.changes.pipe(startWith(this.listOfNzInputDirective));\n    listOfInputChange$\n      .pipe(\n        switchMap(list => merge(...[listOfInputChange$, ...list.map((input: BpsInputDirective) => input.disabled$)])),\n        mergeMap(() => listOfInputChange$),\n        map(list => list.some((input: BpsInputDirective) => input.disabled)),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(disabled => {\n        this.disabled = disabled;\n        this.cdr.markForCheck();\n      });\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    const {\n      bpsSize,\n      bpsSuffix,\n      bpsPrefix,\n      bpsPrefixIcon,\n      bpsSuffixIcon,\n      bpsAddOnAfter,\n      bpsAddOnBefore,\n      bpsAddOnAfterIcon,\n      bpsAddOnBeforeIcon,\n      bpsStatus\n    } = changes;\n    if (bpsSize) {\n      this.updateChildrenInputSize();\n      this.isLarge = this.bpsSize === 'large';\n      this.isSmall = this.bpsSize === 'small';\n    }\n    if (bpsSuffix || bpsPrefix || bpsPrefixIcon || bpsSuffixIcon) {\n      this.isAffix = !!(this.bpsSuffix || this.bpsPrefix || this.bpsPrefixIcon || this.bpsSuffixIcon);\n    }\n    if (bpsAddOnAfter || bpsAddOnBefore || bpsAddOnAfterIcon || bpsAddOnBeforeIcon) {\n      this.isAddOn = !!(this.bpsAddOnAfter || this.bpsAddOnBefore || this.bpsAddOnAfterIcon || this.bpsAddOnBeforeIcon);\n      this.nzFormNoStatusService?.noFormStatus?.next(this.isAddOn);\n    }\n    if (bpsStatus) {\n      this.setStatusStyles(this.bpsStatus, this.hasFeedback);\n    }\n  }\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this.elementRef);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private setStatusStyles(status: NzValidateStatus, hasFeedback: boolean): void {\n    // set inner status\n    this.status = status;\n    this.hasFeedback = hasFeedback;\n    this.isFeedback = !!status && hasFeedback;\n    const baseAffix = !!(this.bpsSuffix || this.bpsPrefix || this.bpsPrefixIcon || this.bpsSuffixIcon);\n    this.isAffix = baseAffix || (!this.isAddOn && hasFeedback);\n    this.affixInGroupStatusCls =\n      this.isAffix || this.isFeedback\n        ? (this.affixStatusCls = getStatusClassNames(`${this.prefixCls}-affix-wrapper`, status, hasFeedback))\n        : {};\n    this.cdr.markForCheck();\n    // render status if nzStatus is set\n    this.affixStatusCls = getStatusClassNames(\n      `${this.prefixCls}-affix-wrapper`,\n      this.isAddOn ? '' : status,\n      this.isAddOn ? false : hasFeedback\n    );\n    this.groupStatusCls = getStatusClassNames(\n      `${this.prefixCls}-group-wrapper`,\n      this.isAddOn ? status : '',\n      this.isAddOn ? hasFeedback : false\n    );\n    const statusCls = {\n      ...this.affixStatusCls,\n      ...this.groupStatusCls\n    };\n    Object.keys(statusCls).forEach(status => {\n      if (statusCls[status]) {\n        this.renderer.addClass(this.elementRef.nativeElement, status);\n      } else {\n        this.renderer.removeClass(this.elementRef.nativeElement, status);\n      }\n    });\n  }\n}\n","import { InjectionToken, TemplateRef, Type } from '@angular/core';\n\nimport { NzAlignType, NzShapeSCType, NzSizeDSType, NzSizeLDSType, NzSizeMDSType } from '../../core/types';\n\nimport { SafeUrl } from '@angular/platform-browser';\nimport { NzBreakpoint } from '../../core/responsive';\r\nimport { BreakpointMap } from 'ng-zorro-antd/core/services';\r\n\nexport interface NzConfig {\n  affix?: AffixConfig;\n  alert?: AlertConfig;\n  anchor?: AnchorConfig;\n  avatar?: AvatarConfig;\n  backTop?: BackTopConfig;\n  badge?: BadgeConfig;\n  button?: ButtonConfig;\n  card?: CardConfig;\n  carousel?: CarouselConfig;\n  cascader?: CascaderConfig;\n  codeEditor?: CodeEditorConfig;\n  collapse?: CollapseConfig;\n  collapsePanel?: CollapsePanelConfig;\n  descriptions?: DescriptionsConfig;\n  drawer?: DrawerConfig;\n  empty?: EmptyConfig;\n  form?: FormConfig;\n  grid?: GridConfig;\n  icon?: IconConfig;\n  message?: MessageConfig;\n  modal?: ModalConfig;\n  notification?: NotificationConfig;\n  pageHeader?: PageHeaderConfig;\n  progress?: ProgressConfig;\n  rate?: RateConfig;\n  spin?: SpinConfig;\n  switch?: SwitchConfig;\n  table?: TableConfig;\n  tabs?: TabsConfig;\n  timePicker?: TimePickerConfig;\n  tree?: TreeConfig;\n  treeSelect?: TreeSelectConfig;\n  typography?: TypographyConfig;\n}\n\nexport interface AffixConfig {\n  nzOffsetBottom?: number;\n  nzOffsetTop?: number;\n}\n\nexport interface AlertConfig {\n  nzCloseable?: boolean;\n  nzShowIcon?: boolean;\n}\n\nexport interface AvatarConfig {\n  nzShape?: NzShapeSCType;\n  nzSize?: NzSizeLDSType | number;\n}\n\nexport interface AnchorConfig {\n  nzBounds?: number;\n  nzOffsetBottom?: number;\n  nzOffsetTop?: number;\n  nzShowInkInFixed?: boolean;\n}\n\nexport interface BackTopConfig {\n  nzVisibilityHeight?: number;\n}\n\nexport interface BadgeConfig {\n  nzColor?: number;\n  nzOverflowCount?: number;\n  nzShowZero?: number;\n}\n\nexport interface ButtonConfig {\n  nzSize?: 'large' | 'default' | 'small';\n}\n\nexport interface CodeEditorConfig {\n  assetsRoot?: string | SafeUrl;\n  defaultEditorOption?: any; // tslint:disable-line no-any\n  useStaticLoading?: boolean;\n\n  onLoad?(): void;\n  onFirstEditorInit?(): void;\n  onInit?(): void;\n}\n\nexport interface CardConfig {\n  nzSize?: NzSizeDSType;\n  nzHoverable?: boolean;\n  nzBordered?: boolean;\n}\n\nexport interface CarouselConfig {\n  nzAutoPlay?: boolean;\n  nzAutoPlaySpeed?: boolean;\n  nzDots?: boolean;\n  nzEffect?: 'scrollx' | 'fade' | string;\n  nzEnableSwipe?: boolean;\n  nzVertical?: boolean;\n}\n\nexport interface CascaderConfig {\n  nzSize?: string;\n}\n\nexport interface CollapseConfig {\n  nzAccordion?: boolean;\n  nzBordered?: boolean;\n}\n\nexport interface CollapsePanelConfig {\n  nzShowArrow?: boolean;\n}\n\nexport interface DescriptionsConfig {\n  nzBorder?: boolean;\n  nzColumn?: { [key in NzBreakpoint]?: number } | number;\n  nzSize?: 'default' | 'middle' | 'small';\n  nzColon?: boolean;\n}\n\nexport interface DrawerConfig {\n  nzMask?: boolean;\n  nzMaskClosable?: boolean;\n}\n\nexport interface EmptyConfig {\n  // tslint:disable-next-line no-any\n  nzDefaultEmptyContent?: Type<any> | TemplateRef<string> | string | undefined;\n}\n\nexport interface FormConfig {\n  nzNoColon?: boolean;\n}\n\nexport interface GridConfig {\n  nzAlign?: NzAlignType;\n  nzGutter?: number | BreakpointMap;\n  nzJustify?: 'start' | 'end' | 'center' | 'space-around' | 'space-between';\n  nzType?: 'flex';\n}\n\nexport interface IconConfig {\n  nzTheme?: 'fill' | 'outline' | 'twotone';\n  nzTwotoneColor?: string;\n}\n\nexport interface MessageConfig {\n  nzAnimate?: boolean;\n  nzDuration?: number;\n  nzMaxStack?: number;\n  nzPauseOnHover?: boolean;\n  nzTop?: number | string;\n}\n\nexport interface ModalConfig {\n  nzMask?: boolean;\n  nzMaskClosable?: boolean;\n}\n\nexport interface NotificationConfig extends MessageConfig {\n  nzTop?: string | number;\n  nzBottom?: string | number;\n  nzPlacement?: 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight' | string;\n}\n\nexport interface PageHeaderConfig {\n  nzGhost: boolean;\n}\n\nexport interface ProgressConfig {\n  nzGapDegree?: number;\n  nzGapPosition?: 'top' | 'right' | 'bottom' | 'left';\n  nzShowInfo?: boolean;\n  nzStrokeSwitch?: number;\n  nzStrokeWidth?: number;\n  nzSize?: 'default' | 'small';\n  nzStrokeLinecap?: 'round' | 'square';\n  nzStrokeColor?: string;\n}\n\nexport interface RateConfig {\n  nzAllowClear?: boolean;\n  nzAllowHalf?: boolean;\n}\n\nexport interface SpinConfig {\n  nzIndicator?: TemplateRef<void>;\n}\n\nexport interface SwitchConfig {\n  nzSize: NzSizeDSType;\n}\n\nexport interface TableConfig {\n  nzBordered?: boolean;\n  nzSize?: NzSizeMDSType;\n  nzShowQuickJumper?: boolean;\n  nzShowSizeChanger?: boolean;\n  nzSimple?: boolean;\n  nzHideOnSinglePage?: boolean;\n}\n\nexport interface TabsConfig {\n  nzAnimated?:\n    | boolean\n    | {\n        inkBar: boolean;\n        tabPane: boolean;\n      };\n  nzSize?: NzSizeLDSType;\n  nzType?: 'line' | 'card';\n  nzTabBarGutter?: number;\n  nzShowPagination?: boolean;\n}\n\nexport interface TimePickerConfig {\n  nzAllowEmpty?: boolean;\n  nzClearText?: string;\n  nzFormat?: string;\n  nzHourStep?: number;\n  nzMinuteStep?: number;\n  nzSecondStep?: number;\n  nzPopupClassName?: string;\n  nzUse12Hours?: string;\n}\n\nexport interface TreeConfig {\n  nzBlockNode?: boolean;\n  nzShowIcon?: boolean;\n  nzHideUnMatched?: boolean;\n}\n\nexport interface TreeSelectConfig {\n  nzShowIcon?: string;\n  nzShowLine?: boolean;\n  nzDropdownMatchSelectWidth?: boolean;\n  nzHideUnMatched?: boolean;\n  nzSize?: 'large' | 'small' | 'default';\n}\n\nexport interface TypographyConfig {\n  nzEllipsisRows?: number;\n}\n\nexport type NzConfigKey = keyof NzConfig;\n\n/**\n * User should provide an object implements this interface to set global configurations.\n */\nexport const NZ_CONFIG = new InjectionToken<NzConfig>('nz-config');\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport { filter, mapTo } from 'rxjs/operators';\n\nimport { NzConfig, NzConfigKey, NZ_CONFIG } from './config';\n\nconst isDefined = function(value?: any): boolean {\n  return value !== undefined;\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NzConfigService {\n  private configUpdated$ = new Subject<keyof NzConfig>();\n\n  /** Global config holding property. */\n  private config: NzConfig;\n\n  constructor(@Optional() @Inject(NZ_CONFIG) defaultConfig?: NzConfig) {\n    this.config = defaultConfig || {};\n  }\n\n  getConfigForComponent<T extends NzConfigKey>(componentName: T): NzConfig[T] {\n    return this.config[componentName];\n  }\n\n  getConfigChangeEventForComponent(componentName: NzConfigKey): Observable<void> {\n    return this.configUpdated$.pipe(\n      filter(n => n === componentName),\n      mapTo(undefined)\n    );\n  }\n\n  set<T extends NzConfigKey>(componentName: T, value: NzConfig[T]): void {\n    this.config[componentName] = { ...this.config[componentName], ...value };\n    this.configUpdated$.next(componentName);\n  }\n}\n\n// tslint:disable:no-invalid-this\n// tslint:disable:no-any\n\n/**\n * This decorator is used to decorate properties. If a property is decorated, it would try to load default value from\n * config.\n */\n// tslint:disable-next-line:typedef\nexport function WithConfig<T>(componentName: NzConfigKey, innerDefaultValue?: T) {\n  return function ConfigDecorator(target: any, propName: any, originalDescriptor?: TypedPropertyDescriptor<T>): any {\n    const privatePropName = `$$__assignedValue__${propName}`;\n\n    if (Object.prototype.hasOwnProperty.call(target, privatePropName)) {\n      console.warn(\n        `The prop \"${privatePropName}\" is already exist, it will be override by ${componentName} decorator.`\n      );\n    }\n\n    Object.defineProperty(target, privatePropName, {\n      configurable: true,\n      writable: true,\n      enumerable: false\n    });\n\n    return {\n      get(): T | undefined {\n        const originalValue =\n          originalDescriptor && originalDescriptor.get ? originalDescriptor.get.bind(this)() : this[privatePropName];\n\n        if (isDefined(originalValue)) {\n          return originalValue;\n        }\n\n        const componentConfig = this.nzConfigService.getConfigForComponent(componentName) || {};\n        const configValue = componentConfig[propName];\n\n        return isDefined(configValue) ? configValue : innerDefaultValue;\n      },\n      set(value?: T): void {\n        if (originalDescriptor && originalDescriptor.set) {\n          originalDescriptor.set.bind(this)(value);\n        } else {\n          this[privatePropName] = value;\n        }\n      },\n      configurable: true,\n      enumerable: true\n    };\n  };\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Injectable, Renderer2, RendererFactory2 } from '@angular/core';\n\nimport { NgClassInterface } from '../types/ng-class';\n\n@Injectable()\nexport class NzUpdateHostClassService {\n  private classMap = {};\n  readonly renderer: Renderer2;\n\n  updateHostClass(el: HTMLElement, classMap: object): void {\n    this.removeClass(el, this.classMap, this.renderer);\n    this.classMap = { ...classMap };\n    this.addClass(el, this.classMap, this.renderer);\n  }\n\n  private removeClass(el: HTMLElement, classMap: NgClassInterface, renderer: Renderer2): void {\n    for (const i in classMap) {\n      if (classMap.hasOwnProperty(i)) {\n        renderer.removeClass(el, i);\n      }\n    }\n  }\n\n  private addClass(el: HTMLElement, classMap: NgClassInterface, renderer: Renderer2): void {\n    for (const i in classMap) {\n      if (classMap.hasOwnProperty(i) && classMap[i]) {\n        renderer.addClass(el, i);\n      }\n    }\n  }\n\n  constructor(rendererFactory2: RendererFactory2) {\n    this.renderer = rendererFactory2.createRenderer(null, null);\n  }\n}\n","\nexport enum NzBreakpoint {\n  xxl = 'xxl',\n  xl = 'xl',\n  lg = 'lg',\n  md = 'md',\n  sm = 'sm',\n  xs = 'xs'\n}\n\nexport type NzBreakPoint = 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl';\n\nexport type BreakpointMap = { [key in NzBreakpoint]: string };\n\nexport const responsiveMap: BreakpointMap = {\n  xs: '(max-width: 575px)',\n  sm: '(min-width: 576px)',\n  md: '(min-width: 768px)',\n  lg: '(min-width: 992px)',\n  xl: '(min-width: 1200px)',\n  xxl: '(min-width: 1600px)'\n};\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Injectable, NgZone, Renderer2, RendererFactory2 } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { auditTime } from 'rxjs/operators';\n\ninterface Listener {\n  handler(e: Event): void;\n  unsubscribe?(): void;\n  countOfListeners: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NzDomEventService {\n  private readonly resizeSource = new Subject<void>();\n  private readonly domEventListeners = new Map<string, Listener>();\n  private renderer: Renderer2;\n\n  constructor(private ngZone: NgZone, private rendererFactory2: RendererFactory2) {\n    this.renderer = this.rendererFactory2.createRenderer(null, null);\n  }\n\n  registerResizeListener(): Observable<void> {\n    if (!this.domEventListeners.has('resize')) {\n      this.domEventListeners.set('resize', {\n        handler: (): void => {\n          this.resizeSource.next();\n        },\n        countOfListeners: 0\n      });\n    }\n\n    const listener = this.domEventListeners.get('resize')!;\n    this.tryToStartListener(listener, 'resize');\n\n    return this.resizeSource.pipe(auditTime(16));\n  }\n\n  unregisterResizeListener(): void {\n    if (!this.domEventListeners.has('resize')) {\n      return;\n    }\n\n    const listener = this.domEventListeners.get('resize')!;\n    this.tryToStopListener(listener);\n  }\n\n  private tryToStartListener(l: Listener, name: string): void {\n    l.countOfListeners += 1;\n    this.ngZone.runOutsideAngular(() => {\n      if (l.countOfListeners === 1) {\n        l.unsubscribe = this.renderer.listen('window', name, l.handler);\n      }\n    });\n  }\n\n  private tryToStopListener(l: Listener): void {\n    l.countOfListeners -= 1;\n    if (l.countOfListeners === 0) {\n      l.unsubscribe!();\n      l.unsubscribe = undefined;\n    }\n  }\n}\n","import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  SimpleChanges\n} from '@angular/core';\n\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { Platform } from '@angular/cdk/platform';\nimport { Subject } from 'rxjs';\nimport { finalize, takeUntil } from 'rxjs/operators';\nimport { NzBreakPoint, responsiveMap } from '../core/responsive';\r\nimport { IndexableObject, NzAlignType } from '../core/types';\r\nimport { NzUpdateHostClassService } from '../core/services/update-host-class.service';\r\nimport { NzDomEventService } from '../core/services/nz-dom-event.service';\r\n\nexport type NzJustify = 'start' | 'end' | 'center' | 'space-around' | 'space-between';\nexport type NzGridType = 'flex' | null;\n\n@Directive({\n  selector: '[nz-row],nz-row',\n  exportAs: 'nzRow',\n  providers: [NzUpdateHostClassService]\n})\nexport class NzRowDirective implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n  @Input() nzType: NzGridType;\n  @Input() nzAlign: NzAlignType = 'top';\n  @Input() nzJustify: NzJustify = 'start';\n  @Input() nzGutter: number | IndexableObject;\n  private el: HTMLElement = this.elementRef.nativeElement;\n  private prefixCls = 'ant-row';\n  private breakPoint: NzBreakPoint;\n  actualGutter: number;\n  actualGutter$ = new Subject<number>();\n  destroy$ = new Subject();\n\n  calculateGutter(): number {\n    if (typeof this.nzGutter !== 'object') {\n      return this.nzGutter;\n    } else if (this.breakPoint && this.nzGutter[this.breakPoint]) {\n      return this.nzGutter[this.breakPoint];\n    } else {\n      return 0;\n    }\n  }\n\n  updateGutter(): void {\n    const actualGutter = this.calculateGutter();\n    if (this.actualGutter !== actualGutter) {\n      this.actualGutter = actualGutter;\n      this.actualGutter$.next(this.actualGutter);\n      this.renderer.setStyle(this.el, 'margin-left', `-${this.actualGutter / 2}px`);\n      this.renderer.setStyle(this.el, 'margin-right', `-${this.actualGutter / 2}px`);\n    }\n  }\n\n  watchMedia(): void {\n    Object.keys(responsiveMap).map((screen: string) => {\n      const castBP = screen as NzBreakPoint;\n      const matchBelow = this.mediaMatcher.matchMedia(responsiveMap[castBP]).matches;\n      if (matchBelow) {\n        this.breakPoint = castBP;\n      }\n    });\n    this.updateGutter();\n  }\n\n  /** temp solution since no method add classMap to host https://github.com/angular/angular/issues/7289*/\n  setClassMap(): void {\n    const classMap = {\n      [`${this.prefixCls}`]: !this.nzType,\n      [`${this.prefixCls}-${this.nzType}`]: this.nzType,\n      [`${this.prefixCls}-${this.nzType}-${this.nzAlign}`]: this.nzType && this.nzAlign,\n      [`${this.prefixCls}-${this.nzType}-${this.nzJustify}`]: this.nzType && this.nzJustify\n    };\n    this.nzUpdateHostClassService.updateHostClass(this.el, classMap);\n  }\n\n  constructor(\n    public elementRef: ElementRef,\n    public renderer: Renderer2,\n    public nzUpdateHostClassService: NzUpdateHostClassService,\n    public mediaMatcher: MediaMatcher,\n    public ngZone: NgZone,\n    public platform: Platform,\n    private nzDomEventService: NzDomEventService\n  ) {}\n\n  ngOnInit(): void {\n    this.setClassMap();\n    this.watchMedia();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.nzType || changes.nzAlign || changes.nzJustify) {\n      this.setClassMap();\n    }\n    if (changes.nzGutter) {\n      this.updateGutter();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    if (this.platform.isBrowser) {\n      this.nzDomEventService\n        .registerResizeListener()\n        .pipe(\n          takeUntil(this.destroy$),\n          finalize(() => this.nzDomEventService.unregisterResizeListener())\n        )\n        .subscribe(() => this.watchMedia());\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  Host,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Renderer2\n} from '@angular/core';\nimport { isNotNil } from 'ng-zorro-antd/core/util';\r\nimport { Subject } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\nimport { NzUpdateHostClassService } from '../core/services/update-host-class.service';\r\nimport { NgClassInterface } from '../core/types';\r\nimport { NzRowDirective } from './nz-row.directive';\n\nexport interface EmbeddedProperty {\n  span?: number;\n  pull?: number;\n  push?: number;\n  offset?: number;\n  order?: number;\n}\n\n@Directive({\n  selector: '[nz-col],nz-col',\n  exportAs: 'nzCol',\n  providers: [NzUpdateHostClassService]\n})\nexport class NzColDirective implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n  private el: HTMLElement = this.elementRef.nativeElement;\n  private prefixCls = 'ant-col';\n  protected destroy$ = new Subject();\n\n  @Input() nzSpan: number;\n  @Input() nzOrder: number;\n  @Input() nzOffset: number;\n  @Input() nzPush: number;\n  @Input() nzPull: number;\n  @Input() nzXs: number | EmbeddedProperty;\n  @Input() nzSm: number | EmbeddedProperty;\n  @Input() nzMd: number | EmbeddedProperty;\n  @Input() nzLg: number | EmbeddedProperty;\n  @Input() nzXl: number | EmbeddedProperty;\n  @Input() nzXXl: number | EmbeddedProperty;\n\n  /** temp solution since no method add classMap to host https://github.com/angular/angular/issues/7289*/\n  setClassMap(): void {\n    const classMap = {\n      [`${this.prefixCls}`]: true,\n      [`${this.prefixCls}-${this.nzSpan}`]: isNotNil(this.nzSpan),\n      [`${this.prefixCls}-order-${this.nzOrder}`]: isNotNil(this.nzOrder),\n      [`${this.prefixCls}-offset-${this.nzOffset}`]: isNotNil(this.nzOffset),\n      [`${this.prefixCls}-pull-${this.nzPull}`]: isNotNil(this.nzPull),\n      [`${this.prefixCls}-push-${this.nzPush}`]: isNotNil(this.nzPush),\n      ...this.generateClass()\n    };\n    this.nzUpdateHostClassService.updateHostClass(this.el, classMap);\n  }\n\n  generateClass(): object {\n    const listOfSizeInputName: Array<keyof NzColDirective> = ['nzXs', 'nzSm', 'nzMd', 'nzLg', 'nzXl', 'nzXXl'];\n    const listClassMap: NgClassInterface = {};\n    listOfSizeInputName.forEach(name => {\n      const sizeName = name.replace('nz', '').toLowerCase();\n      if (isNotNil(this[name])) {\n        if (typeof this[name] === 'number' || typeof this[name] === 'string') {\n          listClassMap[`${this.prefixCls}-${sizeName}-${this[name]}`] = true;\n        } else {\n          const embedded = this[name] as EmbeddedProperty;\n          const prefixArray: Array<keyof EmbeddedProperty> = ['span', 'pull', 'push', 'offset', 'order'];\n          prefixArray.forEach(prefix => {\n            const prefixClass = prefix === 'span' ? '-' : `-${prefix}-`;\n            listClassMap[`${this.prefixCls}-${sizeName}${prefixClass}${embedded[prefix]}`] =\n              embedded && isNotNil(embedded[prefix]);\n          });\n        }\n      }\n    });\n    return listClassMap;\n  }\n\n  constructor(\n    private nzUpdateHostClassService: NzUpdateHostClassService,\n    private elementRef: ElementRef,\n    @Optional() @Host() public nzRowDirective: NzRowDirective,\n    public renderer: Renderer2\n  ) {}\n\n  ngOnChanges(): void {\n    this.setClassMap();\n  }\n\n  ngAfterViewInit(): void {\n    if (this.nzRowDirective) {\n      this.nzRowDirective.actualGutter$\n        .pipe(\n          startWith(this.nzRowDirective.actualGutter),\n          takeUntil(this.destroy$)\n        )\n        .subscribe(actualGutter => {\n          this.renderer.setStyle(this.el, 'padding-left', `${actualGutter / 2}px`);\n          this.renderer.setStyle(this.el, 'padding-right', `${actualGutter / 2}px`);\n        });\n    }\n  }\n\n  ngOnInit(): void {\n    this.setClassMap();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Renderer2, ViewEncapsulation } from '@angular/core';\r\nimport { helpMotion } from 'ng-zorro-antd/core/animation';\r\nimport { warnDeprecation } from 'ng-zorro-antd/core/logger';\r\n\r\n@Component({\r\n  selector: 'bps-form-explain',\r\n  exportAs: 'bpsFormExplain',\r\n  preserveWhitespaces: false,\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [helpMotion],\r\n  templateUrl: './bps-form-explain.component.html',\r\n  styles: [\r\n    `\r\n      bps-form-explain {\r\n        display: block;\r\n      }\r\n    `\r\n  ]\r\n})\r\n/**\r\n * @deprecated Use `[bpsSuccessTip] | [bpsWarningTip] | [bpsErrorTip] | [bpsValidatingTip]` in `bpsFormControlComponent` instead, will remove in 9.0.0.\r\n */\r\nexport class BpsFormExplainComponent {\r\n  constructor(public elementRef: ElementRef, private renderer: Renderer2) {\r\n    this.renderer.addClass(this.elementRef.nativeElement, 'ant-form-explain');\r\n    warnDeprecation(\r\n      `'bps-form-explain' is going to be removed in 9.0.0. Use [bpsSuccessTip] | [bpsWarningTip] | [bpsErrorTip] | [bpsValidatingTip] in bps-form-control instead. Read https://ng.ant.design/components/form/en`\r\n    );\r\n  }\r\n}\r\n","<div [@helpMotion]>\r\n  <ng-content></ng-content>\r\n</div>","import { MediaMatcher } from '@angular/cdk/layout';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  ElementRef,\r\n  Input,\r\n  NgZone,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  QueryList,\r\n  Renderer2,\r\n  SimpleChanges,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { startWith, takeUntil } from 'rxjs/operators';\r\n\r\nimport { BpsFormExplainComponent } from './bps-form-explain.component';\r\nimport { NzUpdateHostClassService } from '../core/services/update-host-class.service';\r\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\r\nimport { NzDomEventService } from '../core/services/nz-dom-event.service';\r\nimport { NzRowDirective } from '../bps-grid/nz-row.directive';\r\n\r\n/** should add nz-row directive to host, track https://github.com/angular/angular/issues/8785 **/\r\n@Component({\r\n  selector: 'bps-form-item',\r\n  exportAs: 'bpsFormItem',\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  providers: [NzUpdateHostClassService],\r\n  templateUrl: './bps-form-item.component.html',\r\n  host: {\r\n    '[class.ant-form-item-with-help]': 'withHelpClass'\r\n  },\r\n  styles: [\r\n    `\r\n      bps-form-item {\r\n        display: block !important;\r\n      }\r\n    `\r\n  ]\r\n})\r\nexport class BpsFormItemComponent extends NzRowDirective\r\n  implements AfterContentInit, OnDestroy, OnChanges, OnInit, OnDestroy {\r\n  @Input() @InputBoolean() bpsFlex: boolean = false;\r\n  @ContentChildren(BpsFormExplainComponent, { descendants: true })\r\n  listOfNzFormExplainComponent: QueryList<BpsFormExplainComponent>;\r\n  withHelpClass = false;\r\n  tipsMode = false;\r\n\r\n  updateFlexStyle(): void {\r\n    if (this.bpsFlex) {\r\n      this.renderer.setStyle(this.elementRef.nativeElement, 'display', 'flex');\r\n    } else {\r\n      this.renderer.removeStyle(this.elementRef.nativeElement, 'display');\r\n    }\r\n  }\r\n\r\n  setWithHelpViaTips(value: boolean): void {\r\n    this.tipsMode = true;\r\n    this.withHelpClass = value;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  constructor(\r\n    elementRef: ElementRef,\r\n    renderer: Renderer2,\r\n    nzUpdateHostClassService: NzUpdateHostClassService,\r\n    mediaMatcher: MediaMatcher,\r\n    ngZone: NgZone,\r\n    platform: Platform,\r\n    nzDomEventService: NzDomEventService,\r\n    private cdr: ChangeDetectorRef\r\n  ) {\r\n    super(elementRef, renderer, nzUpdateHostClassService as any, mediaMatcher, ngZone, platform, nzDomEventService);\r\n    renderer.addClass(elementRef.nativeElement, 'ant-form-item');\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    if (!this.tipsMode) {\r\n      this.listOfNzFormExplainComponent.changes\r\n        .pipe(\r\n          startWith(true),\r\n          takeUntil(this.destroy$)\r\n        )\r\n        .subscribe(() => {\r\n          this.withHelpClass = this.listOfNzFormExplainComponent && this.listOfNzFormExplainComponent.length > 0;\r\n          this.cdr.markForCheck();\r\n        });\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n\r\n    this.updateFlexStyle();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    super.ngOnChanges(changes);\r\n    if (changes.hasOwnProperty('bpsFlex')) {\r\n      this.updateFlexStyle();\r\n    }\r\n  }\r\n}\r\n","<ng-content></ng-content>","import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  Host,\r\n  Input,\r\n  OnDestroy,\r\n  Optional,\r\n  Renderer2,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { InputBoolean, toBoolean } from 'ng-zorro-antd/core/util';\r\nimport { NzColDirective } from '../bps-grid/nz-col.directive';\r\nimport { NzRowDirective } from '../bps-grid/nz-row.directive';\r\n\r\nimport { NzUpdateHostClassService } from '../core/services/update-host-class.service';\r\n\r\nimport { BpsFormItemComponent } from './bps-form-item.component';\r\n\r\n@Component({\r\n  selector: 'bps-form-label',\r\n  exportAs: 'bpsFormLabel',\r\n  providers: [NzUpdateHostClassService],\r\n  preserveWhitespaces: false,\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  templateUrl: './bps-form-label.component.html'\r\n})\r\nexport class BpsFormLabelComponent extends NzColDirective implements OnDestroy, AfterViewInit {\r\n  @Input() bpsFor: string;\r\n  @Input() @InputBoolean() bpsRequired = false;\r\n  @Input()\r\n  set bpsNoColon(value: boolean) {\r\n    this.noColon = toBoolean(value);\r\n  }\r\n  get bpsNoColon(): boolean {\r\n    return !!this.noColon;\r\n  }\r\n\r\n  defaultNoColon: boolean = false;\r\n  noColon: boolean | string = 'default';\r\n\r\n  constructor(\r\n    nzUpdateHostClassService: NzUpdateHostClassService,\r\n    elementRef: ElementRef,\r\n    @Optional() @Host() nzFormItemComponent: BpsFormItemComponent,\r\n    @Optional() @Host() nzRowDirective: NzRowDirective,\r\n    renderer: Renderer2,\r\n    private cdr: ChangeDetectorRef\r\n  ) {\r\n    super(nzUpdateHostClassService, elementRef, nzFormItemComponent || nzRowDirective, renderer);\r\n    renderer.addClass(elementRef.nativeElement, 'ant-form-item-label');\r\n  }\r\n\r\n  setDefaultNoColon(value: boolean): void {\r\n    this.defaultNoColon = toBoolean(value);\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    super.ngAfterViewInit();\r\n  }\r\n}\r\n","<label [attr.for]=\"bpsFor\"\r\n  [class.ant-form-item-no-colon]=\"noColon === 'default' ? defaultNoColon : bpsNoColon\"\r\n  [class.ant-form-item-required]=\"bpsRequired\">\r\n  <ng-content></ng-content>\r\n</label>\r\n","import {\r\n  AfterContentInit,\r\n  ContentChildren,\r\n  Directive,\r\n  ElementRef,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  QueryList,\r\n  Renderer2,\r\n  SimpleChanges\r\n} from '@angular/core';\r\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { NzConfigService, WithConfig } from '../bps-tree/tree/config.service';\r\nimport { NzUpdateHostClassService } from '../core/services/update-host-class.service';\r\n\r\nimport { BpsFormLabelComponent } from './bps-form-label.component';\r\n\r\nconst NZ_CONFIG_COMPONENT_NAME = 'form';\r\n\r\n@Directive({\r\n  selector: '[bps-form]',\r\n  exportAs: 'bpsForm',\r\n  providers: [NzUpdateHostClassService]\r\n})\r\nexport class BpsFormDirective implements OnInit, OnChanges, AfterContentInit, OnDestroy {\r\n  @Input() bpsLayout = 'horizontal';\r\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME, false) @InputBoolean() bpsNoColon: boolean;\r\n\r\n  @ContentChildren(BpsFormLabelComponent, { descendants: true }) bpsFormLabelComponent: QueryList<BpsFormLabelComponent>;\r\n\r\n  destroy$ = new Subject();\r\n\r\n  setClassMap(): void {\r\n    this.nzUpdateHostClassService.updateHostClass(this.elementRef.nativeElement, {\r\n      [`ant-form-${this.bpsLayout}`]: this.bpsLayout\r\n    });\r\n  }\r\n\r\n  updateItemsDefaultColon(): void {\r\n    if (this.bpsFormLabelComponent) {\r\n      this.bpsFormLabelComponent.forEach(item => item.setDefaultNoColon(this.bpsNoColon));\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    public nzConfigService: NzConfigService,\r\n    private elementRef: ElementRef,\r\n    private renderer: Renderer2,\r\n    private nzUpdateHostClassService: NzUpdateHostClassService\r\n  ) {\r\n    this.renderer.addClass(elementRef.nativeElement, 'ant-form');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setClassMap();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.setClassMap();\r\n    if (changes.hasOwnProperty('bpsNoColon')) {\r\n      this.updateItemsDefaultColon();\r\n    }\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.bpsFormLabelComponent.changes\r\n      .pipe(\r\n        takeUntil(this.destroy$)\r\n      )\r\n      .subscribe(() => {\r\n        this.updateItemsDefaultColon();\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n}\r\n","<div class=\"ant-form-item-control\" [ngClass]=\"controlClassMap\">\r\n  <span class=\"ant-form-item-children\">\r\n    <ng-content></ng-content>\r\n    <span class=\"ant-form-item-children-icon\">\r\n      <i *ngIf=\"bpsHasFeedback && iconType\" nz-icon [nzType]=\"iconType\"></i>\r\n    </span>\r\n  </span>\r\n  <div class=\"ant-form-explain\" *ngIf=\"showSuccessTip || showWarningTip || showErrorTip || showValidatingTip\">\r\n    <div @helpMotion>\r\n      <ng-container *ngIf=\"showSuccessTip\">\r\n        <ng-container *nzStringTemplateOutlet=\"bpsSuccessTip;context:{$implicit:validateControl};\">{{ bpsSuccessTip }}</ng-container>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"showWarningTip\">\r\n        <ng-container *nzStringTemplateOutlet=\"bpsWarningTip;context:{$implicit:validateControl};\">{{ bpsWarningTip }}</ng-container>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"showErrorTip\">\r\n        <ng-container *nzStringTemplateOutlet=\"bpsErrorTip;context:{$implicit:validateControl};\">{{ bpsErrorTip }}</ng-container>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"showValidatingTip\">\r\n        <ng-container *nzStringTemplateOutlet=\"bpsValidatingTip;context:{$implicit:validateControl};\">{{ bpsValidatingTip }}</ng-container>\r\n      </ng-container>\r\n    </div>\r\n  </div>\r\n  <ng-content *ngIf=\"!hasTips\" select=\"bps-form-explain\"></ng-content>\r\n  <ng-content *ngIf=\"!bpsExtra\" select=\"bps-form-extra\"></ng-content>\r\n  <div class=\"ant-form-extra\" *ngIf=\"bpsExtra\">\r\n    <ng-container *nzStringTemplateOutlet=\"bpsExtra\">{{ bpsExtra }}</ng-container>\r\n  </div>\r\n</div>\r\n","import {\r\n  AfterContentInit,\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  ElementRef,\r\n  Host,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Renderer2,\r\n  TemplateRef,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { UntypedFormControl, FormControlDirective, FormControlName, NgControl, NgModel } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { startWith } from 'rxjs/operators';\r\n\r\nimport { BpsFormItemComponent } from './bps-form-item.component';\r\nimport { helpMotion } from 'ng-zorro-antd/core/animation';\r\nimport { NzUpdateHostClassService } from '../core/services/update-host-class.service';\r\nimport { NgClassType } from '../core/types';\r\nimport { toBoolean } from 'ng-zorro-antd/core/util';\r\nimport { NzColDirective } from '../bps-grid/nz-col.directive';\r\nimport { NzRowDirective } from '../bps-grid/nz-row.directive';\r\n\r\nexport type NzFormControlStatusType = 'warning' | 'validating' | 'error' | 'success' | null;\r\n\r\n@Component({\r\n  selector: 'bps-form-control',\r\n  exportAs: 'bpsFormControl',\r\n  preserveWhitespaces: false,\r\n  animations: [helpMotion],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [NzUpdateHostClassService],\r\n  templateUrl: './bps-form-control.component.html',\r\n  styles: [\r\n    `\r\n      bps-form-control {\r\n        display: block;\r\n      }\r\n      form .has-feedback .ant-input-suffix i {\r\n        margin-right: 18px;\r\n      }\r\n    `\r\n  ]\r\n})\r\nexport class BpsFormControlComponent extends NzColDirective\r\n  implements OnDestroy, OnInit, AfterContentInit, AfterViewInit, OnDestroy {\r\n  private _hasFeedback = false;\r\n  private validateChanges: Subscription = Subscription.EMPTY;\r\n  private validateString: string | null;\r\n  validateControl: UntypedFormControl | NgModel | null;\r\n  status: NzFormControlStatusType = null;\r\n  controlClassMap: NgClassType = {};\r\n  iconType: string;\r\n  @ContentChild(NgControl, { static: false }) defaultValidateControl: FormControlName | FormControlDirective;\r\n  @Input() bpsSuccessTip: string | TemplateRef<{ $implicit: UntypedFormControl | NgModel }>;\r\n  @Input() bpsWarningTip: string | TemplateRef<{ $implicit: UntypedFormControl | NgModel }>;\r\n  @Input() bpsErrorTip: string | TemplateRef<{ $implicit: UntypedFormControl | NgModel }>;\r\n  @Input() bpsValidatingTip: string | TemplateRef<{ $implicit: UntypedFormControl | NgModel }>;\r\n  @Input() bpsExtra: string | TemplateRef<void>;\r\n\r\n  @Input()\r\n  set bpsHasFeedback(value: boolean) {\r\n    this._hasFeedback = toBoolean(value);\r\n    this.setControlClassMap();\r\n  }\r\n\r\n  get bpsHasFeedback(): boolean {\r\n    return this._hasFeedback;\r\n  }\r\n\r\n  @Input()\r\n  set bpsValidateStatus(value: string | UntypedFormControl | FormControlName | NgModel) {\r\n    if (value instanceof UntypedFormControl || value instanceof NgModel) {\r\n      this.validateControl = value;\r\n      this.validateString = null;\r\n      this.watchControl();\r\n    } else if (value instanceof FormControlName) {\r\n      this.validateControl = value.control;\r\n      this.validateString = null;\r\n      this.watchControl();\r\n    } else {\r\n      this.validateString = value;\r\n      this.validateControl = null;\r\n      this.setControlClassMap();\r\n    }\r\n  }\r\n\r\n  removeSubscribe(): void {\r\n    this.validateChanges.unsubscribe();\r\n  }\r\n\r\n  watchControl(): void {\r\n    this.removeSubscribe();\r\n    /** miss detect https://github.com/angular/angular/issues/10887 **/\r\n    if (this.validateControl && this.validateControl.statusChanges) {\r\n      this.validateChanges = this.validateControl.statusChanges.pipe().subscribe(() => {\r\n        this.setControlClassMap();\r\n        this.cdr.markForCheck();\r\n      });\r\n    }\r\n  }\r\n\r\n  validateControlStatus(status: string): boolean {\r\n    return (!!this.validateControl &&\r\n      (this.validateControl.dirty || this.validateControl.touched) &&\r\n      this.validateControl.status === status) as boolean;\r\n  }\r\n\r\n  setControlClassMap(): void {\r\n    if (this.validateString === 'warning') {\r\n      this.status = 'warning';\r\n      this.iconType = 'exclamation-circle-fill';\r\n    } else if (\r\n      this.validateString === 'validating' ||\r\n      this.validateString === 'pending' ||\r\n      this.validateControlStatus('PENDING')\r\n    ) {\r\n      this.status = 'validating';\r\n      this.iconType = 'loading';\r\n    } else if (this.validateString === 'error' || this.validateControlStatus('INVALID')) {\r\n      this.status = 'error';\r\n      this.iconType = 'close-circle-fill';\r\n    } else if (this.validateString === 'success' || this.validateControlStatus('VALID')) {\r\n      this.status = 'success';\r\n      this.iconType = 'check-circle-fill';\r\n    } else {\r\n      this.status = null;\r\n      this.iconType = '';\r\n    }\r\n    if (this.hasTips) {\r\n      this.nzFormItemComponent.setWithHelpViaTips(this.showErrorTip);\r\n    }\r\n    this.controlClassMap = {\r\n      [`has-warning`]: this.status === 'warning',\r\n      [`is-validating`]: this.status === 'validating',\r\n      [`has-error`]: this.status === 'error',\r\n      [`has-success`]: this.status === 'success',\r\n      [`has-feedback`]: this.bpsHasFeedback && this.status\r\n    };\r\n  }\r\n\r\n  get hasTips(): boolean {\r\n    return !!(this.bpsSuccessTip || this.bpsWarningTip || this.bpsErrorTip || this.bpsValidatingTip);\r\n  }\r\n\r\n  get showSuccessTip(): boolean {\r\n    return this.status === 'success' && !!this.bpsSuccessTip;\r\n  }\r\n\r\n  get showWarningTip(): boolean {\r\n    return this.status === 'warning' && !!this.bpsWarningTip;\r\n  }\r\n\r\n  get showErrorTip(): boolean {\r\n    return this.status === 'error' && !!this.bpsErrorTip;\r\n  }\r\n\r\n  get showValidatingTip(): boolean {\r\n    return this.status === 'validating' && !!this.bpsValidatingTip;\r\n  }\r\n\r\n  get showInnerTip(): boolean {\r\n    return this.showSuccessTip || this.showWarningTip || this.showErrorTip || this.showValidatingTip;\r\n  }\r\n\r\n  constructor(\r\n    nzUpdateHostClassService: NzUpdateHostClassService,\r\n    elementRef: ElementRef,\r\n    @Optional() @Host() private nzFormItemComponent: BpsFormItemComponent,\r\n    @Optional() @Host() nzRowDirective: NzRowDirective,\r\n    private cdr: ChangeDetectorRef,\r\n    renderer: Renderer2\r\n  ) {\r\n    super(nzUpdateHostClassService as any, elementRef, nzFormItemComponent || nzRowDirective, renderer);\r\n    renderer.addClass(elementRef.nativeElement, 'ant-form-item-control-wrapper');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.setControlClassMap();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.removeSubscribe();\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    if (!this.validateControl && !this.validateString) {\r\n      if (this.defaultValidateControl instanceof FormControlDirective) {\r\n        this.bpsValidateStatus = this.defaultValidateControl.control;\r\n      } else {\r\n        this.bpsValidateStatus = this.defaultValidateControl;\r\n      }\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    super.ngAfterViewInit();\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, ElementRef, Renderer2, ViewEncapsulation } from '@angular/core';\r\nimport { warnDeprecation } from 'ng-zorro-antd/core/logger';\r\n\r\n@Component({\r\n  selector: 'bps-form-extra',\r\n  exportAs: 'bpsFormExtra',\r\n  templateUrl: './bps-form-extra.component.html',\r\n  preserveWhitespaces: false,\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styles: [\r\n    `\r\n      bps-form-extra {\r\n        display: block;\r\n      }\r\n    `\r\n  ]\r\n})\r\n/**\r\n * @deprecated Use `[bpsExtra]` in `BpsFormControlComponent` instead, will remove in 9.0.0.\r\n */\r\nexport class BpsFormExtraComponent {\r\n  constructor(public elementRef: ElementRef, private renderer: Renderer2) {\r\n    this.renderer.addClass(this.elementRef.nativeElement, 'ant-form-extra');\r\n    warnDeprecation(\r\n      `'bps-form-extra' is going to be removed in 9.0.0. Use [bpsExtra] in bps-form-control instead. Read https://ng.ant.design/components/form/en`\r\n    );\r\n  }\r\n}\r\n","<ng-content></ng-content>","import { ChangeDetectionStrategy, Component, ElementRef, Renderer2, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'bps-form-split',\r\n  exportAs: 'bpsFormSplit',\r\n  preserveWhitespaces: false,\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  templateUrl: './bps-form-split.component.html'\r\n})\r\nexport class BpsFormSplitComponent {\r\n  constructor(public elementRef: ElementRef, private renderer: Renderer2) {\r\n    this.renderer.addClass(this.elementRef.nativeElement, 'ant-form-split');\r\n  }\r\n}\r\n","<ng-content></ng-content>","import { ChangeDetectionStrategy, Component, ElementRef, Renderer2, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'bps-form-text',\r\n  exportAs: 'bpsFormText',\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  templateUrl: './bps-form-text.component.html'\r\n})\r\nexport class BpsFormTextComponent {\r\n  constructor(public elementRef: ElementRef, private renderer: Renderer2) {\r\n    this.renderer.addClass(this.elementRef.nativeElement, 'ant-form-text');\r\n  }\r\n}\r\n","<ng-content></ng-content>","import { TemplateRef, Type } from '@angular/core';\n\nimport { IndexableObject } from '../types/indexable';\n\nexport function isNotNil<T>(value: T): value is NonNullable<T> {\n  return typeof value !== 'undefined' && value !== null;\n}\n\nexport function isNil(value: unknown): value is null | undefined {\n  return typeof value === 'undefined' || value === null;\n}\n\n/**\n * Examine if two objects are shallowly equaled.\n */\nexport function shallowEqual(objA?: IndexableObject, objB?: IndexableObject): boolean {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || !objA || typeof objB !== 'object' || !objB) {\n    return false;\n  }\n\n  const keysA = Object.keys(objA);\n  const keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  const bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\n  // tslint:disable-next-line:prefer-for-of\n  for (let idx = 0; idx < keysA.length; idx++) {\n    const key = keysA[idx];\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n    if (objA[key] !== objB[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function isInteger(value: string | number): boolean {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\n\nexport function isEmpty(element: HTMLElement): boolean {\n  const nodes = element.childNodes;\n  for (let i = 0; i < nodes.length; i++) {\n    if (filterNotEmptyNode(nodes.item(i))) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function filterNotEmptyNode(node: Node): Node | null {\n  if (node) {\n    if (node.nodeType === 1 && (node as HTMLElement).outerHTML.toString().trim().length !== 0) {\n      // ELEMENT_NODE\n      return node;\n    } else if (node.nodeType === 3 && node.textContent!.toString().trim().length !== 0) {\n      // TEXT_NODE\n      return node;\n    }\n    return null;\n  }\n  return null;\n}\n\n// tslint:disable-next-line:no-any\nexport function isNonEmptyString(value: any): boolean {\n  return typeof value === 'string' && value !== '';\n}\n\n// tslint:disable-next-line:no-any\nexport function isTemplateRef(value: any): boolean {\n  return value instanceof TemplateRef;\n}\n\n// tslint:disable-next-line:no-any\nexport function isComponent(value: any): boolean {\n  return value instanceof Type;\n}\n","import { Observable } from 'rxjs';\n\nimport { filterNotEmptyNode } from './check';\n\n/**\n * Silent an event by stopping and preventing it.\n */\nexport function silentEvent(e: Event): void {\n  e.stopPropagation();\n  e.preventDefault();\n}\n\nexport function getElementOffset(elem: HTMLElement): { top: number; left: number } {\n  if (!elem.getClientRects().length) {\n    return { top: 0, left: 0 };\n  }\n\n  const rect = elem.getBoundingClientRect();\n  const win = elem.ownerDocument!.defaultView;\n  return {\n    top: rect.top + win!.pageYOffset,\n    left: rect.left + win!.pageXOffset\n  };\n}\n\nexport function findFirstNotEmptyNode(element: HTMLElement): Node | null {\n  const children = element.childNodes;\n  for (let i = 0; i < children.length; i++) {\n    const node = children.item(i);\n    if (filterNotEmptyNode(node)) {\n      return node;\n    }\n  }\n  return null;\n}\n\nexport function findLastNotEmptyNode(element: HTMLElement): Node | null {\n  const children = element.childNodes;\n  for (let i = children.length - 1; i >= 0; i--) {\n    const node = children.item(i);\n    if (filterNotEmptyNode(node)) {\n      return node;\n    }\n  }\n  return null;\n}\n\nexport function reverseChildNodes(parent: HTMLElement): void {\n  const children = parent.childNodes;\n  let length = children.length;\n  if (length) {\n    const nodes: Node[] = [];\n    children.forEach((node, i) => (nodes[i] = node));\n    while (length--) {\n      parent.appendChild(nodes[length]);\n    }\n  }\n}\n\n/**\n * Investigate if an event is a `TouchEvent`.\n */\nexport function isTouchEvent(event: MouseEvent | TouchEvent): event is TouchEvent {\n  return event.type.startsWith('touch');\n}\n\nexport function getEventPosition(event: MouseEvent | TouchEvent): MouseEvent | Touch {\n  return isTouchEvent(event) ? event.touches[0] || event.changedTouches[0] : event;\n}\n\nexport interface MouseTouchObserverConfig {\n  end: string;\n  move: string;\n  pluckKey: string[];\n  start: string;\n\n  end$?: Observable<Event>;\n  moveResolved$?: Observable<number>;\n  startPlucked$?: Observable<number>;\n\n  filter?(e: Event): boolean;\n}\n","\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport { CdkConnectedOverlay, ConnectedOverlayPositionChange, ConnectionPositionPair } from '@angular/cdk/overlay';\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Renderer2,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport { asapScheduler, Subject } from 'rxjs';\nimport { delay, distinctUntilChanged, filter, takeUntil } from 'rxjs/operators';\n\nimport { NzConfigService, PopConfirmConfig, PopoverConfig } from 'ng-zorro-antd/core/config';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\nimport { DEFAULT_TOOLTIP_POSITIONS, getPlacementName, POSITION_MAP, POSITION_TYPE } from 'ng-zorro-antd/core/overlay';\nimport { BooleanInput, NgClassInterface, NgStyleInterface, NzSafeAny, NzTSType } from 'ng-zorro-antd/core/types';\nimport { isNotNil, toBoolean } from 'ng-zorro-antd/core/util';\n\nexport interface PropertyMapping {\n  [key: string]: [string, () => unknown];\n}\n\nexport type NzTooltipTrigger = 'click' | 'focus' | 'hover' | null;\n\n@Directive()\nexport abstract class NzTooltipBaseDirective implements OnChanges, OnDestroy, AfterViewInit {\n  arrowPointAtCenter?: boolean;\n  config?: Required<PopoverConfig | PopConfirmConfig>;\n  directiveTitle?: NzTSType | null;\n  directiveContent?: NzTSType | null;\n  title?: NzTSType | null;\n  content?: NzTSType | null;\n  trigger?: NzTooltipTrigger;\n  placement?: string | string[];\n  origin?: ElementRef<HTMLElement>;\n  visible?: boolean;\n  mouseEnterDelay?: number;\n  mouseLeaveDelay?: number;\n  overlayClassName?: string;\n  tooltipType?: string;\n  popoverType?: string;\n  overlayStyle?: NgStyleInterface;\n  tooltipDisabled?: boolean;\n  visibleChange = new EventEmitter<boolean>();\n\n  /**\n   * For create tooltip dynamically. This should be override for each different component.\n   */\n  protected componentRef!: ComponentRef<NzTooltipBaseComponent>;\n\n  /**\n   * This true title that would be used in other parts on this component.\n   */\n  protected get _title(): NzTSType | null {\n    return this.title || this.directiveTitle || null;\n  }\n\n  protected get _popoverType(): string | null {\n    return this.popoverType || null;\n  }\n\n  protected get _tooltipDisabled(): boolean {\n    return this.tooltipDisabled;\n  }\n\n  protected get _tooltipType(): string | null {\n    return this.tooltipType || null;\n  }\n\n  protected get _content(): NzTSType | null {\n    return this.content || this.directiveContent || null;\n  }\n\n  protected get _trigger(): NzTooltipTrigger {\n    return typeof this.trigger !== 'undefined' ? this.trigger : 'hover';\n  }\n\n  protected get _placement(): string[] {\n    const p = this.placement;\n    return Array.isArray(p) && p.length > 0 ? p : typeof p === 'string' && p ? [p] : ['top'];\n  }\n\n  protected get _visible(): boolean {\n    return (typeof this.visible !== 'undefined' ? this.visible : this.internalVisible) || false;\n  }\n\n  protected get _mouseEnterDelay(): number {\n    return this.mouseEnterDelay || 0.15;\n  }\n\n  protected get _mouseLeaveDelay(): number {\n    return this.mouseLeaveDelay || 0.1;\n  }\n\n  protected get _overlayClassName(): string | null {\n    return this.overlayClassName || null;\n  }\n\n  protected get _overlayStyle(): NgStyleInterface | null {\n    return this.overlayStyle || null;\n  }\n\n  private internalVisible = false;\n\n  protected getProxyPropertyMap(): PropertyMapping {\n    return {\n      noAnimation: ['noAnimation', () => !!this.noAnimation]\n    };\n  }\n\n  component?: NzTooltipBaseComponent;\n\n  protected readonly destroy$ = new Subject<void>();\n  protected readonly triggerDisposables: Array<() => void> = [];\n\n  private delayTimer?: number;\n\n  constructor(\n    public elementRef: ElementRef,\n    protected hostView: ViewContainerRef,\n    protected resolver: ComponentFactoryResolver,\n    protected renderer: Renderer2,\n    protected noAnimation?: NzNoAnimationDirective,\n    protected nzConfigService?: NzConfigService\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { trigger } = changes;\n\n    if (trigger && !trigger.isFirstChange()) {\n      this.registerTriggers();\n    }\n\n    if (this.component) {\n      this.updatePropertiesByChanges(changes);\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.createComponent();\n    this.registerTriggers();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n\n    // Clear toggling timer. Issue #3875 #4317 #4386\n    this.clearTogglingTimer();\n    this.removeTriggerListeners();\n  }\n\n  show(): void {\n    this.component?.show();\n  }\n\n  hide(): void {\n    this.component?.hide();\n  }\n\n  /**\n   * Force the component to update its position.\n   */\n  updatePosition(): void {\n    if (this.component) {\n      this.component.updatePosition();\n    }\n  }\n\n  /**\n   * Create a dynamic tooltip component. This method can be override.\n   */\n  protected createComponent(): void {\n    const componentRef = this.componentRef;\n    this.component = componentRef.instance as NzTooltipBaseComponent;\n\n    // Remove the component's DOM because it should be in the overlay container.\n    this.renderer.removeChild(\n      this.renderer.parentNode(this.elementRef.nativeElement),\n      componentRef.location.nativeElement\n    );\n    this.component.setOverlayOrigin(this.origin || this.elementRef);\n\n    this.initProperties();\n\n    const ngVisibleChange$ = this.component.bpsVisibleChange.pipe(distinctUntilChanged());\n\n    ngVisibleChange$.pipe(takeUntil(this.destroy$)).subscribe((visible: boolean) => {\n      this.internalVisible = visible;\n      this.visibleChange.emit(visible);\n    });\n\n    // In some cases, the rendering takes into account the height at which the `arrow` is in wrong place,\n    // so `cdk` sets the container position incorrectly.\n    // To avoid this, after placing the `arrow` in the correct position, we should `re-calculate` the position of the `overlay`.\n    ngVisibleChange$\n      .pipe(\n        filter((visible: boolean) => visible),\n        delay(0, asapScheduler),\n        filter(() => Boolean(this.component?.overlay?.overlayRef)),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(() => {\n        this.component?.updatePosition();\n      });\n  }\n\n  protected registerTriggers(): void {\n    // When the method gets invoked, all properties has been synced to the dynamic component.\n    // After removing the old API, we can just check the directive's own `nzTrigger`.\n    const el = this.elementRef.nativeElement;\n    const trigger = this.trigger;\n\n    this.removeTriggerListeners();\n\n    if (trigger === 'hover') {\n      let overlayElement: HTMLElement;\n      this.triggerDisposables.push(\n        this.renderer.listen(el, 'mouseenter', () => {\n          this.delayEnterLeave(true, true, this._mouseEnterDelay);\n        })\n      );\n      this.triggerDisposables.push(\n        this.renderer.listen(el, 'mouseleave', () => {\n          this.delayEnterLeave(true, false, this._mouseLeaveDelay);\n          if (this.component?.overlay.overlayRef && !overlayElement) {\n            overlayElement = this.component.overlay.overlayRef.overlayElement;\n            this.triggerDisposables.push(\n              this.renderer.listen(overlayElement, 'mouseenter', () => {\n                this.delayEnterLeave(false, true, this._mouseEnterDelay);\n              })\n            );\n            this.triggerDisposables.push(\n              this.renderer.listen(overlayElement, 'mouseleave', () => {\n                this.delayEnterLeave(false, false, this._mouseLeaveDelay);\n              })\n            );\n          }\n        })\n      );\n    } else if (trigger === 'focus') {\n      this.triggerDisposables.push(this.renderer.listen(el, 'focusin', () => this.show()));\n      this.triggerDisposables.push(this.renderer.listen(el, 'focusout', () => this.hide()));\n    } else if (trigger === 'click') {\n      this.triggerDisposables.push(\n        this.renderer.listen(el, 'click', (e: MouseEvent) => {\n          e.preventDefault();\n          this.show();\n        })\n      );\n    }\n    // Else do nothing because user wants to control the visibility programmatically.\n  }\n\n  private updatePropertiesByChanges(changes: SimpleChanges): void {\n    this.updatePropertiesByKeys(Object.keys(changes));\n  }\n\n  private updatePropertiesByKeys(keys?: string[]): void {\n    const mappingProperties: PropertyMapping = {\n      // common mappings\n      title: ['bpsTitle', () => this._title],\n      directiveTitle: ['bpsTitle', () => this._title],\n      tooltipType: ['bpsTooltipType', () => this._tooltipType],\n      popoverType: ['bpsPopoverType', () => this._popoverType],\n      tooltipDisabled: ['bpsTooltipDisabled', () => this._tooltipDisabled],\n      content: ['bpsContent', () => this._content],\n      directiveContent: ['bpsContent', () => this._content],\n      trigger: ['bpsTrigger', () => this._trigger],\n      placement: ['bpsPlacement', () => this._placement],\n      visible: ['bpsVisible', () => this._visible],\n      mouseEnterDelay: ['bpsMouseEnterDelay', () => this._mouseEnterDelay],\n      mouseLeaveDelay: ['bpsMouseLeaveDelay', () => this._mouseLeaveDelay],\n      overlayClassName: ['bpsOverlayClassName', () => this._overlayClassName],\n      overlayStyle: ['bpsOverlayStyle', () => this._overlayStyle],\n      arrowPointAtCenter: ['bpsArrowPointAtCenter', () => this.arrowPointAtCenter],\n      ...this.getProxyPropertyMap()\n    };\n\n    (keys || Object.keys(mappingProperties).filter(key => !key.startsWith('directive'))).forEach(\n      (property: NzSafeAny) => {\n        if (mappingProperties[property]) {\n          const [name, valueFn] = mappingProperties[property];\n          this.updateComponentValue(name, valueFn());\n        }\n      }\n    );\n\n    this.component?.updateByDirective();\n  }\n\n  private initProperties(): void {\n    this.updatePropertiesByKeys();\n  }\n\n  private updateComponentValue(key: string, value: NzSafeAny): void {\n    if (typeof value !== 'undefined') {\n      // @ts-ignore\n      this.component[key] = value;\n    }\n  }\n\n  private delayEnterLeave(isOrigin: boolean, isEnter: boolean, delay: number = -1): void {\n    if (this.delayTimer) {\n      this.clearTogglingTimer();\n    } else if (delay > 0) {\n      this.delayTimer = setTimeout(() => {\n        this.delayTimer = undefined;\n        isEnter ? this.show() : this.hide();\n      }, delay * 1000) as any;\n    } else {\n      // `isOrigin` is used due to the tooltip will not hide immediately\n      // (may caused by the fade-out animation).\n      isEnter && isOrigin ? this.show() : this.hide();\n    }\n  }\n\n  private removeTriggerListeners(): void {\n    this.triggerDisposables.forEach(dispose => dispose());\n    this.triggerDisposables.length = 0;\n  }\n\n  private clearTogglingTimer(): void {\n    if (this.delayTimer) {\n      clearTimeout(this.delayTimer);\n      this.delayTimer = undefined;\n    }\n  }\n}\n\n@Directive()\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nexport abstract class NzTooltipBaseComponent implements OnDestroy, OnInit {\n  static ngAcceptInputType_bpsVisible: BooleanInput;\n  static ngAcceptInputType_bpsArrowPointAtCenter: BooleanInput;\n\n  @ViewChild('overlay', { static: false }) overlay!: CdkConnectedOverlay;\n\n  bpsTitle: NzTSType | null = null;\n  bpsContent: NzTSType | null = null;\n  bpsArrowPointAtCenter: boolean = false;\n  bpsOverlayClassName!: string;\n  bpsOverlayStyle: NgStyleInterface = {};\n  bpsBackdrop = false;\n  bpsMouseEnterDelay?: number;\n  bpsMouseLeaveDelay?: number;\n  bpsTooltipType?: string;\n  bpsPopoverType?: string;\n  bpsTooltipDisabled?: boolean;\n\n  bpsVisibleChange = new Subject<boolean>();\n\n  set bpsVisible(value: boolean) {\n    const visible = toBoolean(value);\n    if (this._visible !== visible) {\n      this._visible = visible;\n      this.bpsVisibleChange.next(visible);\n    }\n  }\n\n  get bpsVisible(): boolean {\n    return this._visible;\n  }\n\n  _visible = false;\n\n  set bpsTrigger(value: NzTooltipTrigger) {\n    this._trigger = value;\n  }\n\n  get bpsTrigger(): NzTooltipTrigger {\n    return this._trigger;\n  }\n\n  protected _trigger: NzTooltipTrigger = 'hover';\n\n  set bpsPlacement(value: POSITION_TYPE[]) {\n    const preferredPosition = value.map(placement => POSITION_MAP[placement]);\n    this._positions = [...preferredPosition, ...DEFAULT_TOOLTIP_POSITIONS];\n  }\n\n  preferredPlacement: string = 'top';\n\n  origin!: ElementRef<NzSafeAny>;\n\n  public dir: Direction = 'ltr';\n\n  _classMap: NgClassInterface = {};\n\n  _prefix = 'ant-tooltip';\n\n  _positions: ConnectionPositionPair[] = [...DEFAULT_TOOLTIP_POSITIONS];\n\n  protected destroy$ = new Subject<void>();\n\n  constructor(\n    public cdr: ChangeDetectorRef,\n    @Optional() private directionality: Directionality,\n    public noAnimation?: NzNoAnimationDirective\n  ) {}\n\n  ngOnInit(): void {\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n\n    this.dir = this.directionality.value;\n  }\n\n  ngOnDestroy(): void {\n    this.bpsVisibleChange.complete();\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  show(): void {\n    if (this.bpsVisible) {\n      return;\n    }\n\n    if (!this.isEmpty()) {\n      this.bpsVisible = true;\n      this.bpsVisibleChange.next(true);\n      this.cdr.detectChanges();\n    }\n\n    // for ltr for overlay to display tooltip in correct placement in rtl direction.\n    if (this.origin && this.overlay && this.overlay.overlayRef && this.overlay.overlayRef.getDirection() === 'rtl') {\n      this.overlay.overlayRef.setDirection('ltr');\n    }\n  }\n\n  hide(): void {\n    if (!this.bpsVisible) {\n      return;\n    }\n\n    this.bpsVisible = false;\n    this.bpsVisibleChange.next(false);\n    this.cdr.detectChanges();\n  }\n\n  updateByDirective(): void {\n    this.updateStyles();\n    this.cdr.detectChanges();\n\n    Promise.resolve().then(() => {\n      this.updatePosition();\n      this.updateVisibilityByTitle();\n    });\n  }\n\n  /**\n   * Force the component to update its position.\n   */\n  updatePosition(): void {\n    if (this.origin && this.overlay && this.overlay.overlayRef) {\n      this.overlay.overlayRef.updatePosition();\n    }\n  }\n\n  onPositionChange(position: ConnectedOverlayPositionChange): void {\n    this.preferredPlacement = getPlacementName(position)!;\n    this.updateStyles();\n\n    // We have to trigger immediate change detection or the element would blink.\n    this.cdr.detectChanges();\n  }\n\n  setOverlayOrigin(origin: ElementRef<HTMLElement>): void {\n    this.origin = origin;\n    this.cdr.markForCheck();\n  }\n\n  onClickOutside(event: MouseEvent): void {\n    if (!this.origin.nativeElement.contains(event.target) && this.bpsTrigger !== null) {\n      this.hide();\n    }\n  }\n\n  /**\n   * Hide the component while the content is empty.\n   */\n  private updateVisibilityByTitle(): void {\n    if (this.isEmpty()) {\n      this.hide();\n    }\n  }\n\n  protected updateStyles(): void {\n    this._classMap = {\n      [this.bpsOverlayClassName]: true,\n      [`${this._prefix}-placement-${this.preferredPlacement}`]: true\n    };\n  }\n\n  /**\n   * Empty component cannot be opened.\n   */\n  protected abstract isEmpty(): boolean;\n}\n\nexport function isTooltipEmpty(value: string | TemplateRef<void> | null): boolean {\n  return value instanceof TemplateRef ? false : value === '' || !isNotNil(value);\n}\n","import { Directionality } from '@angular/cdk/bidi';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Host,\n  Input,\n  Optional,\n  Output,\n  Renderer2,\n  ViewContainerRef,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { zoomBigMotion } from 'ng-zorro-antd/core/animation';\nimport { isPresetColor, NzPresetColor } from 'ng-zorro-antd/core/color';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\nimport { BooleanInput, NgStyleInterface, NzTSType } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\r\nimport { BpsPopoverType } from '../bps-popover/bps-popover';\r\n\nimport {\n  isTooltipEmpty,\n  NzTooltipBaseComponent,\n  NzTooltipBaseDirective,\n  NzTooltipTrigger,\n  PropertyMapping\n} from './base';\n\n@Directive({\n  selector: '[bps-tooltip]',\n  exportAs: 'bpsTooltip',\n  host: {\n    '[class.ant-tooltip-open]': 'visible',\n    '[class.bps-tooltip-disabled]': 'tooltipDisabled'\n  }\n})\nexport class BpsTooltipDirective extends NzTooltipBaseDirective {\n  static ngAcceptInputType_bpsTooltipArrowPointAtCenter: BooleanInput;\n\n  @Input('bpsTooltipTitle') override title?: NzTSType | null;\n  @Input('bpsTooltipTitleContext') titleContext?: Object | null = null;\n  @Input('bps-tooltip') override directiveTitle?: NzTSType | null;\n  @Input('bpsTooltipTrigger') override trigger?: NzTooltipTrigger = 'hover';\n  @Input('bpsTooltipPlacement') override placement?: string | string[] = 'top';\n  @Input('bpsTooltipOrigin') override origin?: ElementRef<HTMLElement>;\n  @Input('bpsTooltipVisible') override visible?: boolean;\n  @Input('bpsTooltipMouseEnterDelay') override mouseEnterDelay?: number;\n  @Input('bpsTooltipMouseLeaveDelay') override mouseLeaveDelay?: number;\n  @Input('bpsTooltipOverlayClassName') override overlayClassName?: string;\n  @Input('bpsTooltipOverlayStyle') override overlayStyle?: NgStyleInterface;\n  @Input('bpsTooltipArrowPointAtCenter') @InputBoolean() override arrowPointAtCenter?: boolean;\n  @Input() bpsTooltipColor?: string;\n  @Input('bpsPopoverType') popoverType: BpsPopoverType = 'variation_8a';\n  @Input('bpsTooltipType') tooltipType: BpsPopoverType = 'variation_8a';\n  @Input('bpsTooltipDisabled') @InputBoolean() tooltipDisabled = false;\n\n  // eslint-disable-next-line @angular-eslint/no-output-rename\n  @Output('bpsTooltipVisibleChange') override readonly visibleChange = new EventEmitter<boolean>();\n\n  override componentRef: ComponentRef<BpsToolTipComponent> = this.hostView.createComponent(BpsToolTipComponent);\n\n  constructor(\n    elementRef: ElementRef,\n    hostView: ViewContainerRef,\n    resolver: ComponentFactoryResolver,\n    renderer: Renderer2,\n    @Host() @Optional() noAnimation?: NzNoAnimationDirective\n  ) {\n    super(elementRef, hostView, resolver, renderer, noAnimation);\n  }\n\n  protected override getProxyPropertyMap(): PropertyMapping {\n    return {\n      ...super.getProxyPropertyMap(),\n      bpsTooltipColor: ['bpsColor', () => this.bpsTooltipColor],\n      bpsTooltipTitleContext: ['bpsTitleContext', () => this.titleContext]\n    };\n  }\n}\n\n@Component({\n  selector: 'bps-tooltip',\n  exportAs: 'bpsTooltipComponent',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./bps-tooltip.component.css'],\n  animations: [zoomBigMotion],\n  template: `\n    <ng-template\n      #overlay=\"cdkConnectedOverlay\"\n      cdkConnectedOverlay\n      nzConnectedOverlay\n      [cdkConnectedOverlayOrigin]=\"origin\"\n      [cdkConnectedOverlayOpen]=\"_visible\"\n      [cdkConnectedOverlayPositions]=\"_positions\"\n      [cdkConnectedOverlayPush]=\"true\"\n      [nzArrowPointAtCenter]=\"bpsArrowPointAtCenter\"\n      (overlayOutsideClick)=\"onClickOutside($event)\"\n      (detach)=\"hide()\"\n      (positionChange)=\"onPositionChange($event)\"\n    >\n      <div\n        class=\"ant-tooltip\"\n        [class.ant-tooltip-rtl]=\"dir === 'rtl'\"\n        [class.bps-tooltip-disabled]=\"bpsTooltipDisabled\"\n        [ngClass]=\"_classMap\"\n        [ngStyle]=\"bpsOverlayStyle\"\n        [@.disabled]=\"!!noAnimation?.nzNoAnimation\"\n        [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n        [@zoomBigMotion]=\"'active'\"\n      >\n        <div class=\"ant-tooltip-content\">\n          <div class=\"ant-tooltip-arrow\">\n            <span class=\"ant-tooltip-arrow-content bps-tooltip-arrow-{{bpsTooltipType}}\" [ngStyle]=\"_contentStyleMap\"></span>\n          </div>\n          <div class=\"ant-tooltip-inner bps-tooltip-inner-{{bpsTooltipType}}\" [ngStyle]=\"_contentStyleMap\">\n            <ng-container *nzStringTemplateOutlet=\"bpsTitle; context: bpsTitleContext\">{{ bpsTitle }}</ng-container>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  `,\n  preserveWhitespaces: false\n})\nexport class BpsToolTipComponent extends NzTooltipBaseComponent {\n  override bpsTitle: NzTSType | null = null;\n  override bpsTooltipType: string = 'variation_8a';\n  override bpsPopoverType: string = 'variation_8a';\n  override bpsTooltipDisabled: boolean = false;\n  bpsTitleContext: Object | null = null;\n\n  bpsColor?: string | NzPresetColor;\n\n  _contentStyleMap: NgStyleInterface = {};\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    @Optional() directionality: Directionality,\n    @Host() @Optional() noAnimation?: NzNoAnimationDirective\n  ) {\n    super(cdr, directionality, noAnimation);\n  }\n\n  protected isEmpty(): boolean {\n    return isTooltipEmpty(this.bpsTitle);\n  }\n\n  protected override updateStyles(): void {\n    const isColorPreset = this.bpsColor && isPresetColor(this.bpsColor);\n\n    this._classMap = {\n      [this.bpsOverlayClassName]: true,\n      [`${this._prefix}-placement-${this.preferredPlacement}`]: true,\n      [`${this._prefix}-${this.bpsColor}`]: isColorPreset\n    };\n\n    this._contentStyleMap = {\n      backgroundColor: !!this.bpsColor && !isColorPreset ? this.bpsColor : null\n    };\n  }\n}\n","<i nz-icon nzType=\"loading\" *ngIf=\"bpsLoading\"></i>\n<span *ngIf=\"bpsType !== 'editable'\" class=\"bps-custom-content\" #contentElement><ng-content></ng-content></span>\n\n<span *ngIf=\"bpsType === 'editable' && !showEditionMode\" class=\"bps-custom-content\" #contentElement>{{bpsValue}}</span>\n<input #inputElement bps-input\n       autofocus\n       (focus)=\"$event.target.select()\"\n       [class.bps-invisible]=\"!showEditionMode\"\n       (click)=\"preventDefault($event)\"\n       (dblclick)=\"preventDefault($event)\"\n       (keyup)=\"endEditMode($event)\"\n       class=\"bps-button-editable-input\"\n       [(ngModel)]=\"bpsValue\"\n/>\n\n<div class=\"bps-editable-btn-edit-icon-wrapper\"\r\n      [class.bps-editable-btn-edit-icon-wrapper-disabled]=\"!bpsEditionEnabled\"\r\n      (click)=\"startEditionMode($event)\"\r\n      bps-tooltip\r\n      [bpsTooltipType]=\"bpsEditTooltipType\"\r\n      [bpsTooltipTitle]=\"bpsEditTooltipTitle ? bpsEditTooltipTitle : 'Edit'\"\r\n      [bpsTooltipPlacement]=\"bpsEditTooltipPlacement\"\r\n      *ngIf=\"bpsType === 'editable' && !showEditionMode\">\r\n  <div class=\"bps-editable-btn-edit-icon\"></div>\r\n</div>\n\n<div  class=\"bps-computed-icon\"\n      bps-tooltip\r\n      [bpsTooltipType]=\"bpsComputedTooltipType\"\r\n      [bpsTooltipTitle]=\"bpsComputedTooltipTitle ? bpsComputedTooltipTitle : bpsComputed ? 'Computed' : 'Not Computed'\"\r\n      [bpsTooltipPlacement]=\"bpsComputedTooltipPlacement\"\n      *ngIf=\"bpsType === 'editable'\">\n  <img *ngIf=\"bpsComputed\"     \n       src=\"/assets/bps-icons/sps_green_dot_icon_computed.svg\" />\n  <img *ngIf=\"!bpsComputed\"\n       src=\"/assets/bps-icons/sps_grey_dot_icon_notcomputed.svg\" />\n</div>\n","import { ContentObserver } from '@angular/cdk/observers';\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  ElementRef,\r\n  HostBinding,\r\n  Inject,\r\n  Input,\r\n  NgZone,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  QueryList,\r\n  Renderer2,\r\n  SimpleChanges,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n  ViewRef,\r\n  HostListener,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\r\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\r\nimport { NzWaveConfig, NZ_WAVE_GLOBAL_CONFIG } from 'ng-zorro-antd/core/wave';\r\n\r\nimport { NzIconDirective } from 'ng-zorro-antd/icon';\r\nimport { Subject } from 'rxjs';\r\nimport { startWith, takeUntil } from 'rxjs/operators';\r\nimport { BpsInputDirective } from '../bps-input/bps-input.directive';\r\nimport { NzConfigService, WithConfig } from '../bps-tree/tree/config.service';\r\nimport { NzUpdateHostClassService } from '../core/services/update-host-class.service';\r\nimport { NzSizeLDSType, NzSizeMap } from '../core/types';\r\nimport { isEmpty } from '../core/util/check';\r\nimport { findFirstNotEmptyNode, findLastNotEmptyNode } from '../core/util/dom';\r\n\r\nexport type NzButtonType = 'primary' | 'dashed' | 'danger' | 'default' | 'link' | 'variation-1' | 'variation-2' | 'variation-3'\r\n  | 'variation-4' | 'variation-5' | 'variation-6' | 'variation-7' | 'variation-8' | 'variation-9' | 'variation-10' | 'variation-11'\r\n  | 'variation-12'  | 'variation-13' | 'variation-14' | 'variation-15' | 'variation-16' | 'variation-17' | 'variation-18' | 'variation-19' | 'variation-20' | 'editable';\r\nexport type NzButtonShape = 'circle' | 'round' | null;\r\n\r\nconst NZ_CONFIG_COMPONENT_NAME = 'button';\r\n\r\n@Component({\r\n  selector: '[bps-button]',\r\n  exportAs: 'bpsButton',\r\n  providers: [NzUpdateHostClassService],\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  templateUrl: './bps-button.component.html',\r\n  styleUrls: ['./bps-button.component.css'],\r\n  host: {\r\n    '[class.bps-button-editable-selected]': 'isSelected',\r\n    '[class.bps-button-editable-onedition]': 'showEditionMode'\r\n  }\r\n})\r\nexport class BpsButtonComponent implements AfterContentInit, OnInit, OnDestroy, OnChanges {\r\n  @Input() @InputBoolean() isSelected = false;\r\n  @Output() isSelectedChange: EventEmitter<any> = new EventEmitter<any>();\r\n  showEditionMode = false;\r\n\r\n  @ViewChild('contentElement', { static: true }) contentElement: ElementRef;\r\n  @ContentChildren(NzIconDirective, { read: ElementRef }) listOfIconElement: QueryList<ElementRef>;\r\n  /*@HostBinding('attr.nz-wave') nzWave = new NzWaveDirective(\r\n    this.ngZone,\r\n    this.elementRef,\r\n    this.waveConfig,\r\n    this.animationType\r\n  );*/\r\n\r\n  @Input() @InputBoolean() bpsBlock: boolean = false;\r\n  @Input() @InputBoolean() bpsGhost: boolean = false;\r\n  @Input() @InputBoolean() bpsSearch: boolean = false;\r\n  @Input() @InputBoolean() bpsComputed: boolean = false;\r\n  @Input() @InputBoolean() bpsLoading: boolean = false;\r\n  @Input() @InputBoolean() bpsEditionEnabled: boolean = true;\r\n  @Input() bpsType: NzButtonType = 'default';\r\n  @Input() bpsValue: string = '';\r\n  @Input() bpsComputedTooltipType: string = 'variation_11';\r\n  @Input() bpsComputedTooltipPlacement: string = 'top';\r\n  @Input() bpsComputedTooltipTitle: string | null = null;\r\n  @Input() bpsEditTooltipType: string = 'variation_11';\r\n  @Input() bpsEditTooltipPlacement: string = 'top';\r\n  @Input() bpsEditTooltipTitle: string | null = null;\r\n  @Output() bpsValueChange: EventEmitter<any> = new EventEmitter<any>();\r\n  @Input() bpsShape: NzButtonShape = null;\r\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME, 'default') bpsSize: NzSizeLDSType;\r\n  @ViewChild(BpsInputDirective, { static: true, read: ElementRef }) inputElement: ElementRef;\r\n\r\n  readonly el: HTMLElement = this.elementRef.nativeElement;\r\n  isInDropdown = false;\r\n  private iconElement: HTMLElement;\r\n  private iconOnly = false;\r\n  private destroy$ = new Subject<void>();\r\n\r\n  /** temp solution since no method add classMap to host https://github.com/angular/angular/issues/7289 */\r\n  setClassMap(): void {\r\n    const prefixCls = 'ant-btn';\r\n    const sizeMap: NzSizeMap = { large: 'lg', small: 'sm' };\r\n    this.nzUpdateHostClassService.updateHostClass(this.el, {\r\n      [`${prefixCls}-${this.bpsType}`]: this.bpsType,\r\n      [`${prefixCls}-${this.bpsShape}`]: this.bpsShape,\r\n      [`${prefixCls}-${sizeMap[this.bpsSize]}`]: sizeMap[this.bpsSize],\r\n      [`${prefixCls}-loading`]: this.bpsLoading,\r\n      [`${prefixCls}-icon-only`]: this.iconOnly && !this.bpsSearch && !this.isInDropdown,\r\n      [`${prefixCls}-background-ghost`]: this.bpsGhost,\r\n      [`${prefixCls}-block`]: this.bpsBlock,\r\n      [`ant-input-search-button`]: this.bpsSearch\r\n    });\r\n  }\r\n\r\n  updateIconDisplay(value: boolean): void {\r\n    if (this.iconElement) {\r\n      this.renderer.setStyle(this.iconElement, 'display', value ? 'none' : 'inline-block');\r\n    }\r\n  }\r\n\r\n  checkContent(): void {\r\n    const hasIcon = this.listOfIconElement && this.listOfIconElement.length;\r\n    if (hasIcon) {\r\n      this.moveIcon();\r\n    }\r\n    this.renderer.removeStyle(this.contentElement.nativeElement, 'display');\r\n    /** https://github.com/angular/angular/issues/12530 **/\r\n    if (isEmpty(this.contentElement.nativeElement)) {\r\n      this.renderer.setStyle(this.contentElement.nativeElement, 'display', 'none');\r\n      this.iconOnly = !!hasIcon;\r\n    } else {\r\n      this.renderer.removeStyle(this.contentElement.nativeElement, 'display');\r\n      this.iconOnly = false;\r\n    }\r\n    this.setClassMap();\r\n    this.updateIconDisplay(this.bpsLoading);\r\n    if (!(this.cdr as ViewRef).destroyed) {\r\n      this.cdr.detectChanges();\r\n    }\r\n  }\r\n\r\n  moveIcon(): void {\r\n    if (this.listOfIconElement && this.listOfIconElement.length) {\r\n      const firstChildElement = findFirstNotEmptyNode(this.contentElement.nativeElement);\r\n      const lastChildElement = findLastNotEmptyNode(this.contentElement.nativeElement);\r\n      if (firstChildElement && firstChildElement === this.listOfIconElement.first.nativeElement) {\r\n        this.renderer.insertBefore(this.el, firstChildElement, this.contentElement.nativeElement);\r\n        this.iconElement = firstChildElement as HTMLElement;\r\n      } else if (lastChildElement && lastChildElement === this.listOfIconElement.last.nativeElement) {\r\n        this.renderer.appendChild(this.el, lastChildElement);\r\n      }\r\n    }\r\n  }\r\n\r\n  preventDefault($event) {\r\n    $event.preventDefault();\r\n    $event.stopImmediatePropagation();\r\n  }\r\n\r\n  @HostListener('window:mouseup', ['$event'])\r\n  handleClick(e: MouseEvent): void {\r\n    if (this.bpsType !== 'editable') {\r\n      return;\r\n    }\r\n\r\n    if (this.showEditionMode && this.inputElement && this.inputElement.nativeElement !== e.target) {\r\n      this.showEditionMode = false;\r\n      this.bpsValueChange.emit(this.bpsValue);\r\n    }\r\n  }\r\n\r\n  endEditMode($event: KeyboardEvent) {\r\n    this.preventDefault($event);\r\n    if ($event.key === ('Enter' || 'enter')) {\r\n      this.showEditionMode = false;\r\n      this.bpsValueChange.emit(this.bpsValue);\r\n    }\r\n  }\r\n\r\n  clicks = 0;\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent) {\r\n    if (this.bpsType !== 'editable') {\r\n      return;\r\n    }\r\n    this.clicks++;\r\n    setTimeout(() => {\r\n      if (this.clicks === 1) {\r\n        this.isSelected = !this.isSelected;\r\n        this.isSelectedChange.emit(this.isSelected);\r\n      } \r\n      this.clicks = 0;\r\n    }, 300);\r\n  }\r\n\r\n  startEditionMode($event: Event) {\r\n    $event.stopImmediatePropagation();\r\n    $event.stopPropagation();\r\n    if (!this.bpsEditionEnabled) return;\r\n    this.showEditionMode = true;\r\n    this.cdr.detectChanges();\r\n    this.inputElement.nativeElement.focus();\r\n    this.inputElement.nativeElement.select();\r\n  }\r\n\r\n  constructor(\r\n    private elementRef: ElementRef,\r\n    private cdr: ChangeDetectorRef,\r\n    private renderer: Renderer2,\r\n    private contentObserver: ContentObserver,\r\n    private nzUpdateHostClassService: NzUpdateHostClassService,\r\n    private ngZone: NgZone,\r\n    public nzConfigService: NzConfigService,\r\n    @Optional() @Inject(NZ_WAVE_GLOBAL_CONFIG) private waveConfig: NzWaveConfig,\r\n    @Optional() @Inject(ANIMATION_MODULE_TYPE) private animationType: string\r\n  ) {\r\n    this.renderer.addClass(elementRef.nativeElement, 'ant-btn');\r\n    this.nzConfigService\r\n      .getConfigChangeEventForComponent(NZ_CONFIG_COMPONENT_NAME)\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(() => {\r\n        this.setClassMap();\r\n        this.cdr.markForCheck();\r\n      });\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    if (!this.contentElement) {\r\n      return;\r\n    }\r\n    this.contentObserver\r\n      .observe(this.contentElement)\r\n      .pipe(\r\n        startWith(true),\r\n        takeUntil(this.destroy$)\r\n      )\r\n      .subscribe(() => {\r\n        // https://github.com/NG-ZORRO/ng-zorro-antd/issues/3079\r\n        Promise.resolve().then(() => this.checkContent());\r\n      });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setClassMap();\r\n    //this.nzWave.ngOnInit();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n    //this.nzWave.ngOnDestroy();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (\r\n      changes.bpsBlock ||\r\n      changes.bpsGhost ||\r\n      changes.bpsSearch ||\r\n      changes.bpsType ||\r\n      changes.bpsShape ||\r\n      changes.bpsSize ||\r\n      changes.bpsLoading\r\n    ) {\r\n      this.setClassMap();\r\n    }\r\n    if (changes.bpsLoading) {\r\n      this.updateIconDisplay(this.bpsLoading);\r\n    }\r\n    /*if (changes.bpsType && changes.bpsType.currentValue === 'link') {\r\n      this.nzWave.disable();\r\n    } else {\r\n      this.nzWave.enable();\r\n    }*/\r\n  }\r\n}\r\n","\nimport { ChangeDetectionStrategy, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzUpdateHostClassService } from '../core/services/update-host-class.service';\r\nimport { NzSizeLDSType } from '../core/types';\r\n\n@Component({\n  selector: 'bps-button-group',\n  exportAs: 'bpsButtonGroup',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  providers: [NzUpdateHostClassService],\n  templateUrl: './bps-button-group.component.html'\n})\nexport class BpsButtonGroupComponent implements OnInit {\n  private _size: NzSizeLDSType;\n  isInDropdown = false;\n\n  @Input()\n  get bpsSize(): NzSizeLDSType {\n    return this._size;\n  }\n\n  set bpsSize(value: NzSizeLDSType) {\n    this._size = value;\n    this.setClassMap();\n  }\n\n  constructor(private nzUpdateHostClassService: NzUpdateHostClassService, private elementRef: ElementRef) {}\n\n  setClassMap(): void {\n    const prefixCls = 'ant-btn-group';\n    const classMap = {\n      [prefixCls]: true,\n      [`ant-dropdown-button`]: this.isInDropdown,\n      [`${prefixCls}-lg`]: this.bpsSize === 'large',\n      [`${prefixCls}-sm`]: this.bpsSize === 'small'\n    };\n    this.nzUpdateHostClassService.updateHostClass(this.elementRef.nativeElement, classMap);\n  }\n\n  ngOnInit(): void {\n    this.setClassMap();\n  }\n}\n","<ng-content></ng-content>\n","import { FocusMonitor } from '@angular/cdk/a11y';\r\nimport { Direction, Directionality } from '@angular/cdk/bidi';\r\nimport { ENTER, LEFT_ARROW, RIGHT_ARROW, SPACE } from '@angular/cdk/keycodes';\r\nimport {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Output,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { fromEvent, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { NzConfigKey, NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\r\nimport { BooleanInput, NzSizeDSType, OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';\r\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\r\n\r\nconst NZ_CONFIG_MODULE_NAME: NzConfigKey = 'switch';\r\n\r\n@Component({\r\n  selector: 'bps-switch',\r\n  exportAs: 'bpsSwitch',\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => BpsSwitchComponent),\r\n      multi: true\r\n    }\r\n  ],\r\n  styleUrls: ['./bps-switch.component.css'],\r\n  styles: [\r\n    `\r\n      bps-switch {\r\n        display: inline-block;\r\n      }\r\n    `\r\n  ],\r\n  template: `\r\n<ng-container *ngIf=\"!bpsDual\">\r\n  <button\r\n      nz-wave\r\n      type=\"button\"\r\n      class=\"ant-switch\"\r\n      #switchElement\r\n      [attr.id]=\"bpsId\"\r\n      [disabled]=\"bpsDisabled\"\r\n      [class.ant-switch-checked]=\"isChecked\"\r\n      [class.ant-switch-loading]=\"bpsLoading\"\r\n      [class.ant-switch-disabled]=\"bpsDisabled\"\r\n      [class.ant-switch-small]=\"bpsSize === 'small'\"\r\n      [class.ant-switch-rtl]=\"dir === 'rtl'\"\r\n      [nzWaveExtraNode]=\"true\"\r\n    >\r\n      <span class=\"ant-switch-handle\">\r\n        <span *ngIf=\"bpsLoading\" nz-icon nzType=\"loading\" class=\"ant-switch-loading-icon\"></span>\r\n      </span>\r\n      <span class=\"ant-switch-inner\">\r\n        <ng-container *ngIf=\"isChecked; else uncheckTemplate\">\r\n          <ng-container *nzStringTemplateOutlet=\"bpsCheckedChildren\">{{ bpsCheckedChildren }}</ng-container>\r\n        </ng-container>\r\n        <ng-template #uncheckTemplate>\r\n          <ng-container *nzStringTemplateOutlet=\"bpsUnCheckedChildren\">{{ bpsUnCheckedChildren }}</ng-container>\r\n        </ng-template>\r\n      </span>\r\n      <div class=\"ant-click-animating-node\"></div>\r\n    </button>\r\n</ng-container>\r\n<ng-container *ngIf=\"bpsDual\">\r\n  <button type=\"button\" #switchElement\r\n          class=\"ant-switch bps-switch\"\r\n          [disabled]=\"bpsDisabled\"\r\n          [class.bps-switch-disabled]=\"bpsDisabled\"\r\n          (keydown)=\"onKeyDown($event)\">\r\n    <ng-container *ngIf=\"bpsDualValues.length > 1\">\r\n      <div class=\"bps-switch-inner\">\r\n        <div class=\"bps-switch-node bps-switch-node-left\"\r\n             (click)=\"checkNode(bpsDualValues[0], bpsDualValues[1])\"\r\n             [class.bps-switch-checked]=\"bpsDualValues[0].checked\">\r\n          {{ bpsDualValues[0].title }}\r\n        </div>\r\n        <div class=\"bps-switch-node bps-switch-node-right\"\r\n             (click)=\"checkNode(bpsDualValues[1], bpsDualValues[0])\"\r\n             [class.bps-switch-checked]=\"bpsDualValues[1].checked\">\r\n          {{ bpsDualValues[1].title }}\r\n        </div>\r\n      </div>  \r\n    </ng-container>\r\n  </button>\r\n</ng-container>\r\n  `\r\n})\r\nexport class BpsSwitchComponent implements ControlValueAccessor, AfterViewInit, OnDestroy, OnInit {\r\n  readonly _nzModuleName: NzConfigKey = NZ_CONFIG_MODULE_NAME;\r\n\r\n  static ngAcceptInputType_bpsLoading: BooleanInput;\r\n  static ngAcceptInputType_bpsDisabled: BooleanInput;\r\n  static ngAcceptInputType_bpsControl: BooleanInput;\r\n\r\n  isChecked = false;\r\n  onChange: OnChangeType = () => { };\r\n  onTouched: OnTouchedType = () => { };\r\n  @ViewChild('switchElement', { static: true }) switchElement!: ElementRef<HTMLElement>;\r\n  @Input() @InputBoolean() bpsLoading = false;\r\n  @Input() @InputBoolean() bpsDisabled = false;\r\n  @Input() @InputBoolean() bpsControl = false;\r\n  @Input() bpsCheckedChildren: string | TemplateRef<void> | null = null;\r\n  @Input() bpsUnCheckedChildren: string | TemplateRef<void> | null = null;\r\n  @Input() @WithConfig() bpsSize: NzSizeDSType = 'default';\r\n  @Input() bpsId: string | null = null;\r\n\r\n  @Input() @InputBoolean() bpsDual = false;\r\n  @Input() bpsDualValues: { title: string; checked: boolean }[] = [];\r\n  @Output() bpsDualValuesChange: EventEmitter<{ title: string; checked: boolean }[]> = new EventEmitter();\r\n\r\n  dir: Direction = 'ltr';\r\n\r\n  private destroy$ = new Subject<void>();\r\n  private isNzDisableFirstChange = true;\r\n\r\n  updateValue(value: boolean): void {\r\n    if (this.isChecked !== value) {\r\n      this.isChecked = value;\r\n      this.onChange(this.isChecked);\r\n    }\r\n  }\r\n\r\n  focus(): void {\r\n    this.focusMonitor.focusVia(this.switchElement?.nativeElement, 'keyboard');\r\n  }\r\n\r\n  blur(): void {\r\n    this.switchElement?.nativeElement.blur();\r\n  }\r\n\r\n  constructor(\r\n    public nzConfigService: NzConfigService,\r\n    private host: ElementRef<HTMLElement>,\r\n    private ngZone: NgZone,\r\n    private cdr: ChangeDetectorRef,\r\n    private focusMonitor: FocusMonitor,\r\n    @Optional() private directionality: Directionality\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.directionality.change.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\r\n      this.dir = direction;\r\n      this.cdr.detectChanges();\r\n    });\r\n\r\n    this.dir = this.directionality.value;\r\n\r\n    this.ngZone.runOutsideAngular(() => {\r\n      fromEvent(this.host.nativeElement, 'click')\r\n        .pipe(takeUntil(this.destroy$))\r\n        .subscribe(event => {\r\n          event.preventDefault();\r\n\r\n          if (this.bpsControl || this.bpsDisabled || this.bpsLoading) {\r\n            return;\r\n          }\r\n\r\n          this.ngZone.run(() => {\r\n            this.updateValue(!this.isChecked);\r\n            this.cdr.markForCheck();\r\n          });\r\n        });\r\n\r\n      if (this.switchElement === null || this.switchElement === undefined) return;\r\n      fromEvent<KeyboardEvent>(this.switchElement?.nativeElement, 'keydown')\r\n        .pipe(takeUntil(this.destroy$))\r\n        .subscribe(event => {\r\n          if (this.bpsControl || this.bpsDisabled || this.bpsLoading) {\r\n            return;\r\n          }\r\n\r\n          const { keyCode } = event;\r\n          if (keyCode !== LEFT_ARROW && keyCode !== RIGHT_ARROW && keyCode !== SPACE && keyCode !== ENTER) {\r\n            return;\r\n          }\r\n\r\n          event.preventDefault();\r\n\r\n          this.ngZone.run(() => {\r\n            if (keyCode === LEFT_ARROW) {\r\n              this.updateValue(false);\r\n            } else if (keyCode === RIGHT_ARROW) {\r\n              this.updateValue(true);\r\n            } else if (keyCode === SPACE || keyCode === ENTER) {\r\n              this.updateValue(!this.isChecked);\r\n            }\r\n\r\n            this.cdr.markForCheck();\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.switchElement === null || this.switchElement === undefined) return;\r\n    this.focusMonitor\r\n      .monitor(this.switchElement?.nativeElement, true)\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(focusOrigin => {\r\n        if (!focusOrigin) {\r\n          /** https://github.com/angular/angular/issues/17793 **/\r\n          Promise.resolve().then(() => this.onTouched());\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.focusMonitor.stopMonitoring(this.switchElement?.nativeElement);\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  checkNode(nodeA: { title: string; checked: boolean }, nodeB: { title: string; checked: boolean }) {\r\n    if (!this.bpsDisabled) {\r\n      nodeA.checked = true;\r\n      nodeB.checked = false;\r\n      this.bpsDualValuesChange.emit(this.bpsDualValues);\r\n    }\r\n  }\r\n\r\n  onKeyDown(e: KeyboardEvent): void {\r\n    if (!this.bpsControl && !this.bpsDisabled && !this.bpsLoading) {\r\n      if (e.keyCode === LEFT_ARROW) {\r\n        this.updateValue(false);\r\n        e.preventDefault();\r\n      } else if (e.keyCode === RIGHT_ARROW) {\r\n        this.updateValue(true);\r\n        e.preventDefault();\r\n      } else if (e.keyCode === SPACE || e.keyCode === ENTER) {\r\n        this.updateValue(!this.isChecked);\r\n        e.preventDefault();\r\n      }\r\n    }\r\n  }\r\n\r\n  writeValue(value: boolean): void {\r\n    this.isChecked = value;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  registerOnChange(fn: OnChangeType): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: OnTouchedType): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(disabled: boolean): void {\r\n    this.bpsDisabled = (this.isNzDisableFirstChange && this.bpsDisabled) || disabled;\r\n    this.isNzDisableFirstChange = false;\r\n    this.cdr.markForCheck();\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Output, ViewEncapsulation } from '@angular/core';\n\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { BpsCheckboxComponent } from './bps-checkbox.component';\n\n@Component({\n  selector: 'nz-checkbox-wrapper',\n  exportAs: 'nzCheckboxWrapper',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: ` <ng-content></ng-content> `,\n  host: {\n    class: 'ant-checkbox-group'\n  }\n})\nexport class NzCheckboxWrapperComponent {\n  @Output() readonly nzOnChange = new EventEmitter<NzSafeAny[]>();\n  private checkboxList: BpsCheckboxComponent[] = [];\n\n  addCheckbox(value: BpsCheckboxComponent): void {\n    this.checkboxList.push(value);\n  }\n\n  removeCheckbox(value: BpsCheckboxComponent): void {\n    this.checkboxList.splice(this.checkboxList.indexOf(value), 1);\n  }\n\n  onChange(): void {\n    const listOfCheckedValue = this.checkboxList.filter(item => item.bpsChecked).map(item => item.bpsValue);\n    this.nzOnChange.emit(listOfCheckedValue);\n  }\n}\n","import { FocusMonitor } from '@angular/cdk/a11y';\r\nimport { Direction, Directionality } from '@angular/cdk/bidi';\r\nimport {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Output,\r\n  ViewChild,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { fromEvent, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { NzFormStatusService } from 'ng-zorro-antd/core/form';\r\nimport { BooleanInput, NzSafeAny, OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';\r\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\r\n\r\nexport type BpsCheckboxType = 'variation1' | 'variation2' | 'variation3';\r\n\r\nimport { NzCheckboxWrapperComponent } from './bps-checkbox-wrapper.component';\r\n\r\n@Component({\r\n  selector: '[bps-checkbox]',\r\n  exportAs: 'bpsCheckbox',\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: `\r\n    <span\r\n      class=\"ant-checkbox\"\r\n      [class.ant-checkbox-checked]=\"bpsChecked && !bpsIndeterminate\"\r\n      [class.ant-checkbox-disabled]=\"bpsDisabled\"\r\n      [class.bps-checkbox-variation1]=\"bpsType === 'variation1'\"\r\n      [class.bps-checkbox-variation3]=\"bpsType === 'variation3'\"\r\n      [class.ant-checkbox-indeterminate]=\"bpsIndeterminate\"\r\n    >\r\n      <input\r\n        #inputElement\r\n        type=\"checkbox\"\r\n        class=\"ant-checkbox-input\"\r\n        [attr.autofocus]=\"bpsAutoFocus ? 'autofocus' : null\"\r\n        [attr.id]=\"bpsId\"\r\n        [checked]=\"bpsChecked\"\r\n        [ngModel]=\"bpsChecked\"\r\n        [disabled]=\"bpsDisabled\"\r\n        (ngModelChange)=\"innerCheckedChange($event)\"\r\n      />\r\n      <span class=\"ant-checkbox-inner\">\r\n        <ng-container *ngIf=\"bpsType === 'variation1' || bpsType === 'variation3'\">\r\n          <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n        </ng-container>\r\n      </span>\r\n    </span>\r\n    <ng-container *ngIf=\"bpsType === 'variation2'\">\r\n      <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n    </ng-container>\r\n    <ng-template #content><span><ng-content></ng-content></span></ng-template>\r\n  `,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => BpsCheckboxComponent),\r\n      multi: true\r\n    }\r\n  ],\r\n  styleUrls: ['./bps-checkbox.component.css'],\r\n  host: {\r\n    class: 'ant-checkbox-wrapper',\r\n    '[class.ant-checkbox-wrapper-in-form-item]': '!!bpsFormStatusService',\r\n    '[class.ant-checkbox-wrapper-checked]': 'bpsChecked',\r\n    '[class.bps-checkbox-variation3]': `bpsType === 'variation3'`,\r\n    '[class.ant-checkbox-rtl]': `dir === 'rtl'`\r\n  }\r\n})\r\nexport class BpsCheckboxComponent implements OnInit, ControlValueAccessor, OnDestroy, AfterViewInit {\r\n  static ngAcceptInputType_bpsAutoFocus: BooleanInput;\r\n  static ngAcceptInputType_bpsDisabled: BooleanInput;\r\n  static ngAcceptInputType_bpsIndeterminate: BooleanInput;\r\n  static ngAcceptInputType_bpsChecked: BooleanInput;\r\n\r\n  dir: Direction = 'ltr';\r\n  private destroy$ = new Subject<void>();\r\n  private isbpsDisableFirstChange: boolean = true;\r\n\r\n  onChange: OnChangeType = () => { };\r\n  onTouched: OnTouchedType = () => { };\r\n  @ViewChild('inputElement', { static: true }) inputElement!: ElementRef<HTMLInputElement>;\r\n  @Output() readonly bpsCheckedChange = new EventEmitter<boolean>();\r\n  @Input() bpsValue: NzSafeAny | null = null;\r\n  @Input() @InputBoolean() bpsAutoFocus = false;\r\n  @Input() @InputBoolean() bpsDisabled = false;\r\n  @Input() @InputBoolean() bpsIndeterminate = false;\r\n  @Input() @InputBoolean() bpsChecked = false;\r\n  @Input() bpsId: string | null = null;\r\n  @Input() bpsType: BpsCheckboxType = 'variation2';\r\n\r\n  innerCheckedChange(checked: boolean): void {\r\n    if (!this.bpsDisabled) {\r\n      this.bpsChecked = checked;\r\n      this.onChange(this.bpsChecked);\r\n      this.bpsCheckedChange.emit(this.bpsChecked);\r\n      if (this.bpsCheckboxWrapperComponent) {\r\n        this.bpsCheckboxWrapperComponent.onChange();\r\n      }\r\n    }\r\n  }\r\n\r\n  writeValue(value: boolean): void {\r\n    this.bpsChecked = value;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  registerOnChange(fn: OnChangeType): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: OnTouchedType): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(disabled: boolean): void {\r\n    this.bpsDisabled = (this.isbpsDisableFirstChange && this.bpsDisabled) || disabled;\r\n    this.isbpsDisableFirstChange = false;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  focus(): void {\r\n    this.focusMonitor.focusVia(this.inputElement, 'keyboard');\r\n  }\r\n\r\n  blur(): void {\r\n    this.inputElement.nativeElement.blur();\r\n  }\r\n\r\n  constructor(\r\n    private ngZone: NgZone,\r\n    private elementRef: ElementRef<HTMLElement>,\r\n    @Optional() private bpsCheckboxWrapperComponent: NzCheckboxWrapperComponent,\r\n    private cdr: ChangeDetectorRef,\r\n    private focusMonitor: FocusMonitor,\r\n    @Optional() private directionality: Directionality,\r\n    @Optional() public bpsFormStatusService?: NzFormStatusService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.focusMonitor\r\n      .monitor(this.elementRef, true)\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(focusOrigin => {\r\n        if (!focusOrigin) {\r\n          Promise.resolve().then(() => this.onTouched());\r\n        }\r\n      });\r\n    if (this.bpsCheckboxWrapperComponent) {\r\n      this.bpsCheckboxWrapperComponent.addCheckbox(this);\r\n    }\r\n\r\n    this.directionality.change.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\r\n      this.dir = direction;\r\n      this.cdr.detectChanges();\r\n    });\r\n\r\n    this.dir = this.directionality.value;\r\n\r\n    this.ngZone.runOutsideAngular(() => {\r\n      fromEvent(this.elementRef.nativeElement, 'click')\r\n        .pipe(takeUntil(this.destroy$))\r\n        .subscribe(event => {\r\n          event.preventDefault();\r\n          this.focus();\r\n          if (this.bpsDisabled) {\r\n            return;\r\n          }\r\n          this.ngZone.run(() => {\r\n            this.innerCheckedChange(!this.bpsChecked);\r\n            this.cdr.markForCheck();\r\n          });\r\n        });\r\n\r\n      fromEvent(this.inputElement.nativeElement, 'click')\r\n        .pipe(takeUntil(this.destroy$))\r\n        .subscribe(event => event.stopPropagation());\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.bpsAutoFocus) {\r\n      this.focus();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.focusMonitor.stopMonitoring(this.elementRef);\r\n    if (this.bpsCheckboxWrapperComponent) {\r\n      this.bpsCheckboxWrapperComponent.removeCheckbox(this);\r\n    }\r\n\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n}\r\n","import { FocusMonitor } from '@angular/cdk/a11y';\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  forwardRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { BooleanInput, OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\nexport interface NzCheckBoxOptionInterface {\n  label: string;\n  value: string;\n  checked?: boolean;\n  disabled?: boolean;\n}\n\n@Component({\n  selector: 'bps-checkbox-group',\n  exportAs: 'bpsCheckboxGroup',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <label\n      bps-checkbox\n      class=\"ant-checkbox-group-item\"\n      *ngFor=\"let o of options; trackBy: trackByOption\"\n      [bpsDisabled]=\"o.disabled || bpsDisabled\"\n      [bpsChecked]=\"o.checked!\"\n      (bpsCheckedChange)=\"onCheckedChange(o, $event)\"\n    >\n      <span>{{ o.label }}</span>\n    </label>\n  `,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => BpsCheckboxGroupComponent),\n      multi: true\n    }\n  ],\n  host: {\n    class: 'ant-checkbox-group',\n    '[class.ant-checkbox-group-rtl]': `dir === 'rtl'`\n  }\n})\nexport class BpsCheckboxGroupComponent implements ControlValueAccessor, OnInit, OnDestroy {\n  static ngAcceptInputType_nzDisabled: BooleanInput;\n\n  onChange: OnChangeType = () => { };\n  onTouched: OnTouchedType = () => { };\n  options: NzCheckBoxOptionInterface[] = [];\n  @Input() @InputBoolean() bpsDisabled = false;\n\n  dir: Direction = 'ltr';\n\n  private destroy$ = new Subject<void>();\n  private isNzDisableFirstChange: boolean = true;\n\n  trackByOption(_: number, option: NzCheckBoxOptionInterface): string {\n    return option.value;\n  }\n\n  onCheckedChange(option: NzCheckBoxOptionInterface, checked: boolean): void {\n    option.checked = checked;\n    this.onChange(this.options);\n  }\n\n  constructor(\n    private elementRef: ElementRef,\n    private focusMonitor: FocusMonitor,\n    private cdr: ChangeDetectorRef,\n    @Optional() private directionality: Directionality\n  ) { }\n\n  ngOnInit(): void {\n    this.focusMonitor\n      .monitor(this.elementRef, true)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(focusOrigin => {\n        if (!focusOrigin) {\n          Promise.resolve().then(() => this.onTouched());\n        }\n      });\n\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n\n    this.dir = this.directionality.value;\n  }\n\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this.elementRef);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  writeValue(value: NzCheckBoxOptionInterface[]): void {\n    this.options = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: OnChangeType): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: OnTouchedType): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this.bpsDisabled = (this.isNzDisableFirstChange && this.bpsDisabled) || disabled;\n    this.isNzDisableFirstChange = false;\n    this.cdr.markForCheck();\n  }\n}\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[bps-radio-button]'\n})\nexport class BpsRadioButtonDirective {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Renderer2,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { fromEvent, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { NzFormStatusService } from 'ng-zorro-antd/core/form';\nimport { BooleanInput, NzSafeAny, OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\nimport { BpsRadioButtonDirective } from './radio-button.directive';\nimport { NzRadioService } from 'ng-zorro-antd/radio';\r\n\nexport type BpsRadioButtonType = 'variation1' | 'variation2' | 'variation3' | 'variation5' | 'variation6' | 'variation7' | 'variation8a'\n  | 'variation8b' | 'variation8c' | 'variation8d' | 'variation8e' | 'variation9' | 'variation10' | 'variation11' | 'variation12';\n\n@Component({\n  selector: '[bps-radio],[bps-radio-button]',\n  exportAs: 'bpsRadio',\n  preserveWhitespaces: false,\n  template: `\n    <span\n      [class.ant-radio]=\"!isRadioButton\"\n      [class.ant-radio-checked]=\"isChecked && !isRadioButton\"\n      [class.ant-radio-disabled]=\"bpsDisabled && !isRadioButton\"\n      [class.ant-radio-button]=\"isRadioButton\"\n      [class.ant-radio-button-checked]=\"isChecked && isRadioButton\"\n      [class.ant-radio-button-disabled]=\"bpsDisabled && isRadioButton\"\n    >\n      <input\n        #inputElement\n        type=\"radio\"\n        [attr.autofocus]=\"bpsAutoFocus ? 'autofocus' : null\"\n        [class.ant-radio-input]=\"!isRadioButton\"\n        [class.ant-radio-button-input]=\"isRadioButton\"\n        [disabled]=\"bpsDisabled\"\n        [checked]=\"isChecked\"\n        [attr.name]=\"name\"\n      />\n      <span [class.ant-radio-inner]=\"!isRadioButton\" [class.ant-radio-button-inner]=\"isRadioButton\"></span>\n    </span>\n    <span class=\"bps-custom-content-radio\"><ng-content></ng-content></span>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => BpsRadioComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.ant-radio-wrapper-in-form-item]': '!!nzFormStatusService',\n    '[class.ant-radio-wrapper]': '!isRadioButton',\n    '[class.ant-radio-button-wrapper]': 'isRadioButton',\n    '[class.ant-radio-wrapper-checked]': 'isChecked && !isRadioButton',\n    '[class.ant-radio-button-wrapper-checked]': 'isChecked && isRadioButton',\n    '[class.ant-radio-wrapper-disabled]': 'bpsDisabled && !isRadioButton',\n    '[class.ant-radio-button-wrapper-disabled]': 'bpsDisabled && isRadioButton',\n    '[class.ant-radio-wrapper-rtl]': `!isRadioButton && dir === 'rtl'`,\n    '[class.ant-radio-button-wrapper-rtl]': `isRadioButton && dir === 'rtl'`\n  }\n})\nexport class BpsRadioComponent implements ControlValueAccessor, AfterViewInit, OnDestroy, OnInit {\n  static ngAcceptInputType_bpsDisabled: BooleanInput;\n  static ngAcceptInputType_bpsAutoFocus: BooleanInput;\n\n  private isNgModel = false;\n  private destroy$ = new Subject<void>();\n  private isNzDisableFirstChange: boolean = true;\n  isChecked = false;\n  name: string | null = null;\n  isRadioButton = !!this.nzRadioButtonDirective;\n  onChange: OnChangeType = () => { };\n  onTouched: OnTouchedType = () => { };\n  @ViewChild('inputElement', { static: true }) inputElement!: ElementRef<HTMLInputElement>;\n  @Input() bpsValue: NzSafeAny | null = null;\n  @Input() @InputBoolean() bpsDisabled = false;\n  @Input() @InputBoolean() bpsAutoFocus = false;\n\n  @Input() bpsRadioButtonType: BpsRadioButtonType = 'variation1';\n\n  dir: Direction = 'ltr';\n\n  focus(): void {\n    this.focusMonitor.focusVia(this.inputElement!, 'keyboard');\n  }\n\n  blur(): void {\n    this.inputElement!.nativeElement.blur();\n  }\n\n  constructor(\n    private ngZone: NgZone,\n    private elementRef: ElementRef,\n    private cdr: ChangeDetectorRef,\n    private renderer: Renderer2,\n    private focusMonitor: FocusMonitor,\n    @Optional() private directionality: Directionality,\n    @Optional() @Inject(NzRadioService) private nzRadioService: NzRadioService | null,\n    @Optional() @Inject(BpsRadioButtonDirective) private nzRadioButtonDirective: BpsRadioButtonDirective | null,\n    @Optional() public nzFormStatusService?: NzFormStatusService\n  ) { }\n\n  setDisabledState(disabled: boolean): void {\n    this.bpsDisabled = (this.isNzDisableFirstChange && this.bpsDisabled) || disabled;\n    this.isNzDisableFirstChange = false;\n    this.cdr.markForCheck();\n  }\n\n  writeValue(value: boolean): void {\n    this.isChecked = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: OnChangeType): void {\n    this.isNgModel = true;\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: OnTouchedType): void {\n    this.onTouched = fn;\n  }\n\n  ngOnInit(): void {\n    if (this.nzRadioService) {\n      this.nzRadioService.name$.pipe(takeUntil(this.destroy$)).subscribe(name => {\n        this.name = name;\n        this.cdr.markForCheck();\n      });\n      this.nzRadioService.disabled$.pipe(takeUntil(this.destroy$)).subscribe(disabled => {\n        this.bpsDisabled = (this.isNzDisableFirstChange && this.bpsDisabled) || disabled;\n        this.isNzDisableFirstChange = false;\n        this.cdr.markForCheck();\n      });\n      this.nzRadioService.selected$.pipe(takeUntil(this.destroy$)).subscribe(value => {\n        const isChecked = this.isChecked;\n        this.isChecked = this.bpsValue === value;\n        // We don't have to run `onChange()` on each `nz-radio` button whenever the `selected$` emits.\n        // If we have 8 `nz-radio` buttons within the `nz-radio-group` and they're all connected with\n        // `ngModel` or `formControl` then `onChange()` will be called 8 times for each `nz-radio` button.\n        // We prevent this by checking if `isChecked` has been changed or not.\n        if (\n          this.isNgModel &&\n          isChecked !== this.isChecked &&\n          // We're only intereted if `isChecked` has been changed to `false` value to emit `false` to the ascendant form,\n          // since we already emit `true` within the `setupClickListener`.\n          this.isChecked === false\n        ) {\n          this.onChange(false);\n        }\n        this.cdr.markForCheck();\n      });\n    }\n    this.focusMonitor\n      .monitor(this.elementRef, true)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(focusOrigin => {\n        if (!focusOrigin) {\n          Promise.resolve().then(() => this.onTouched());\n          if (this.nzRadioService) {\n            this.nzRadioService.touch();\n          }\n        }\n      });\n\n    this.directionality.change.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n\n    this.dir = this.directionality.value;\n\n    this.setupClickListener();\n  }\n\n  ngAfterViewInit(): void {\n    if (this.bpsAutoFocus) {\n      this.focus();\n    }\n    this.renderer.addClass(this.elementRef.nativeElement, `bps-radio-button-${this.bpsRadioButtonType}`);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.focusMonitor.stopMonitoring(this.elementRef);\n  }\n\n  private setupClickListener(): void {\n    this.ngZone.runOutsideAngular(() => {\n      fromEvent<MouseEvent>(this.elementRef.nativeElement, 'click')\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(event => {\n          /** prevent label click triggered twice. **/\n          event.stopPropagation();\n          event.preventDefault();\n          if (this.bpsDisabled || this.isChecked) {\n            return;\n          }\n          this.ngZone.run(() => {\n            this.focus();\n            this.nzRadioService?.select(this.bpsValue);\n            if (this.isNgModel) {\n              this.isChecked = true;\n              this.onChange(true);\n            }\n            this.cdr.markForCheck();\n          });\n        });\n    });\n  }\n}\n","import { Direction, Directionality } from '@angular/cdk/bidi';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  SimpleChanges,\n  ViewEncapsulation,\n  forwardRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { BooleanInput, NzSafeAny, NzSizeLDSType, OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { NzRadioService } from 'ng-zorro-antd/radio';\r\n\nexport type NzRadioButtonStyle = 'outline' | 'solid';\n\n@Component({\n  selector: 'bps-radio-group',\n  exportAs: 'bpsRadioGroup',\n  preserveWhitespaces: false,\n  template: ` <ng-content></ng-content> `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    NzRadioService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => BpsRadioGroupComponent),\n      multi: true\n    }\n  ],\n  styleUrls: ['./bps-radio-button.component.css'],\n  host: {\n    class: 'ant-radio-group',\n    '[class.ant-radio-group-large]': `bpsSize === 'large'`,\n    '[class.ant-radio-group-small]': `bpsSize === 'small'`,\n    '[class.ant-radio-group-solid]': `bpsButtonStyle === 'solid'`,\n    '[class.ant-radio-group-rtl]': `dir === 'rtl'`,\n  }\n})\nexport class BpsRadioGroupComponent implements OnInit, ControlValueAccessor, OnDestroy, OnChanges {\n  static ngAcceptInputType_bpsDisabled: BooleanInput;\n\n  private value: NzSafeAny | null = null;\n  private destroy$ = new Subject<boolean>();\n  private isNzDisableFirstChange: boolean = true;\n  onChange: OnChangeType = () => {};\n  onTouched: OnTouchedType = () => {};\n  @Input() @InputBoolean() bpsDisabled = false;\n  @Input() bpsButtonStyle: NzRadioButtonStyle = 'outline';\n  @Input() bpsSize: NzSizeLDSType = 'default';\n  @Input() bpsName: string | null = null;\n\n  dir: Direction = 'ltr';\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private nzRadioService: NzRadioService,\n    @Optional() private directionality: Directionality\n  ) {}\n\n  ngOnInit(): void {\n    this.nzRadioService.selected$.pipe(takeUntil(this.destroy$)).subscribe(value => {\n      if (this.value !== value) {\n        this.value = value;\n        this.onChange(this.value);\n      }\n    });\n    this.nzRadioService.touched$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      Promise.resolve().then(() => this.onTouched());\n    });\n\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n\n    this.dir = this.directionality.value;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { bpsDisabled, bpsName } = changes;\n    if (bpsDisabled) {\n      this.nzRadioService.setDisabled(this.bpsDisabled);\n    }\n    if (bpsName) {\n      this.nzRadioService.setName(this.bpsName!);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  writeValue(value: NzSafeAny): void {\n    this.value = value;\n    this.nzRadioService.select(value);\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: OnChangeType): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: OnTouchedType): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.bpsDisabled = (this.isNzDisableFirstChange && this.bpsDisabled) || isDisabled;\n    this.isNzDisableFirstChange = false;\n    this.nzRadioService.setDisabled(this.bpsDisabled);\n    this.cdr.markForCheck();\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\r\nimport { NzConfigService, WithConfig } from '../bps-tree/tree/config.service';\r\n\nimport { BpsCollapsePanelComponent } from './bps-collapse-panel.component';\n\nconst NZ_CONFIG_COMPONENT_NAME = 'collapse';\n\n@Component({\n  selector: 'bps-collapse',\n  exportAs: 'bpsCollapse',\n  templateUrl: './bps-collapse.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styles: [\n    `\n      bps-collapse {\n        display: block;\n      }\n    `\n  ],\n  styleUrls: ['./bps-collapse.component.css']\n})\nexport class BpsCollapseComponent {\n  private listOfNzCollapsePanelComponent: BpsCollapsePanelComponent[] = [];\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME, false) @InputBoolean() bpsAccordion: boolean;\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME, true) @InputBoolean() bpsBordered: boolean;\n\n  constructor(public nzConfigService: NzConfigService) { }\n\n  addPanel(value: BpsCollapsePanelComponent): void {\n    this.listOfNzCollapsePanelComponent.push(value);\n  }\n\n  removePanel(value: BpsCollapsePanelComponent): void {\n    this.listOfNzCollapsePanelComponent.splice(this.listOfNzCollapsePanelComponent.indexOf(value), 1);\n  }\n\n  click(collapse: BpsCollapsePanelComponent): void {\n    if (this.bpsAccordion && !collapse.bpsActive) {\n      this.listOfNzCollapsePanelComponent\n        .filter(item => item !== collapse)\n        .forEach(item => {\n          if (item.bpsActive) {\n            item.bpsActive = false;\n            item.bpsActiveChange.emit(item.bpsActive);\n            item.markForCheck();\n          }\n        });\n    }\n    collapse.bpsActive = !collapse.bpsActive;\n    collapse.bpsActiveChange.emit(collapse.bpsActive);\n  }\n}\n","<div class=\"ant-collapse\" [class.ant-collapse-borderless]=\"!bpsBordered\">\n  <ng-content></ng-content>\n</div>\n","<div role=\"tab\" [attr.aria-expanded]=\"bpsActive\" class=\"ant-collapse-header\" (click)=\"clickHeader()\">\r\n  <ng-container *ngIf=\"bpsShowArrow\">\r\n    <ng-container *nzStringTemplateOutlet=\"bpsExpandedIcon\">\r\n      <div class=\"ant-collapse-arrow bps-status-indicator\"\r\n           [class.bps-collapse-panel-invalid]=\"bpsValid !== null && !bpsValid\"\r\n           [class.bps-collapse-panel-valid]=\"bpsValid\"></div>\r\n      <svg class=\"ant-collapse-arrow\" *ngIf=\"!bpsActive && !bpsDisabled\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 12 12\">\r\n        <defs>\r\n          <style>\r\n\r\n            .prefix__cls-1 {\r\n              fill: #fff\r\n            }\r\n          </style>\r\n        </defs>\r\n        <g id=\"prefix__sps_plus_icon_enabled\" transform=\"translate(-955 -253)\">\r\n          <rect id=\"prefix__Rectangle_411\" width=\"2.25\" height=\"12\" class=\"prefix__cls-1\" data-name=\"Rectangle 411\" rx=\"1.125\" transform=\"translate(959.875 253)\" />\r\n          <rect id=\"prefix__Rectangle_412\" width=\"2.25\" height=\"12\" class=\"prefix__cls-1\" data-name=\"Rectangle 412\" rx=\"1.125\" transform=\"rotate(90 354.563 612.438)\" />\r\n        </g>\r\n      </svg>\r\n      <svg class=\"ant-collapse-arrow\" *ngIf=\"!bpsActive && bpsDisabled\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 12 12\">\r\n        <defs>\r\n          <style>\r\n\r\n            .prefix__cls-d1 {\r\n              fill: #666\r\n            }\r\n          </style>\r\n        </defs>\r\n        <g id=\"prefix__sps_plus_icon_disabled\" transform=\"translate(-955 -253)\">\r\n          <rect id=\"prefix__Rectangle_411\" width=\"2.25\" height=\"12\" class=\"prefix__cls-d1\" data-name=\"Rectangle 411\" rx=\"1.125\" transform=\"translate(959.875 253)\" />\r\n          <rect id=\"prefix__Rectangle_412\" width=\"2.25\" height=\"12\" class=\"prefix__cls-d1\" data-name=\"Rectangle 412\" rx=\"1.125\" transform=\"rotate(90 354.563 612.438)\" />\r\n        </g>\r\n      </svg>\r\n      <svg class=\"ant-collapse-arrow\" *ngIf=\"bpsActive && !bpsDisabled\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"2.25\" viewBox=\"0 0 12 2.25\">\r\n        <rect id=\"prefix__sps_minus_icon_enabled\" width=\"2.25\" height=\"12\" rx=\"1.125\" transform=\"rotate(90 6 6)\" style=\"fill:#fff\" />\r\n      </svg>\r\n      <svg class=\"ant-collapse-arrow\" *ngIf=\"bpsActive && bpsDisabled\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"2.25\" viewBox=\"0 0 12 2.25\">\r\n        <rect id=\"prefix__sps_minus_icon_disabled\" width=\"2.25\" height=\"12\" rx=\"1.125\" transform=\"rotate(90 6 6)\" style=\"fill:#666\" />\r\n      </svg>\r\n    </ng-container>\r\n  </ng-container>\r\n  <ng-container *nzStringTemplateOutlet=\"bpsHeader\">{{ bpsHeader }}</ng-container>\r\n  <div class=\"ant-collapse-extra\" *ngIf=\"bpsExtra\">\r\n    <ng-container *nzStringTemplateOutlet=\"bpsExtra\">{{ bpsExtra }}</ng-container>\r\n  </div>\r\n</div>\r\n<div class=\"ant-collapse-content\"\r\n  [class.ant-collapse-content-active]=\"bpsActive\"\r\n  [@collapseMotion]=\"bpsActive ? 'expanded' : 'hidden' \">\r\n  <div class=\"ant-collapse-content-box\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n</div>\r\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Host,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { collapseMotion } from 'ng-zorro-antd/core/animation';\r\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\r\nimport { NzConfigService, WithConfig } from '../bps-tree/tree/config.service';\r\n\nimport { BpsCollapseComponent } from './bps-collapse.component';\n\nconst NZ_CONFIG_COMPONENT_NAME = 'collapsePanel';\n\n@Component({\n  selector: 'bps-collapse-panel',\n  exportAs: 'bpsCollapsePanel',\n  templateUrl: './bps-collapse-panel.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  animations: [collapseMotion],\n  styles: [\n    `\n      bps-collapse-panel {\n        display: block;\n      }\n    `\n  ],\n  styleUrls: ['./bps-collapse-panel.component.css'],\n  host: {\n    '[class.ant-collapse-no-arrow]': '!bpsShowArrow',\n    '[class.ant-collapse-item-active]': 'bpsActive',\n    '[class.ant-collapse-item-disabled]': 'bpsDisabled'\n  }\n})\nexport class BpsCollapsePanelComponent implements OnInit, OnDestroy {\n  @Input() @InputBoolean() bpsActive = false;\n  @Input() @InputBoolean() bpsDisabled = false;\n  @Input() bpsValid = null;\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME, true) @InputBoolean() bpsShowArrow: boolean;\n  @Input() bpsExtra: string | TemplateRef<void>;\n  @Input() bpsHeader: string | TemplateRef<void>;\n  @Input() bpsExpandedIcon: string | TemplateRef<void>;\n  @Output() readonly bpsActiveChange = new EventEmitter<boolean>();\n\n  clickHeader(): void {\n    if (!this.bpsDisabled) {\n      this.bpsCollapseComponent.click(this);\n    }\n  }\n\n  markForCheck(): void {\n    this.cdr.markForCheck();\n  }\n\n  constructor(\n    public nzConfigService: NzConfigService,\n    private cdr: ChangeDetectorRef,\n    @Host() private bpsCollapseComponent: BpsCollapseComponent,\n    elementRef: ElementRef,\n    renderer: Renderer2\n  ) {\n    renderer.addClass(elementRef.nativeElement, 'ant-collapse-item');\n  }\n\n  ngOnInit(): void {\n    this.bpsCollapseComponent.addPanel(this);\n  }\n\n  ngOnDestroy(): void {\n    this.bpsCollapseComponent.removePanel(this);\n  }\n}\n","import { Directionality } from '@angular/cdk/bidi';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Host,\n  Input,\n  Optional,\n  Output,\n  Renderer2,\n  ViewContainerRef,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { zoomBigMotion } from 'ng-zorro-antd/core/animation';\nimport { NzConfigKey, NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\nimport { BooleanInput, NgStyleInterface, NzTSType } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { BpsToolTipComponent } from '../bps-tooltip/tooltip';\r\nimport {\n  isTooltipEmpty,\n  NzTooltipBaseDirective,\n  NzTooltipTrigger,\n  PropertyMapping\n} from './../bps-tooltip/base';\n\nconst NZ_CONFIG_MODULE_NAME: NzConfigKey = 'popover';\n\nexport type BpsPopoverType = 'variation_1' | 'variation_2' | 'variation_3' | 'variation_4' | 'variation_5' | 'variation_6' | 'variation_7a' |\n  'variation_7b' | 'variation_8a' | 'variation_8b' | 'variation_9a' | 'variation_9b' | 'variation_10' | 'variation_11';\n\n@Directive({\n  selector: '[bps-popover]',\n  exportAs: 'bpsPopover',\n  host: {\n    '[class.ant-popover-open]': 'visible'\n  }\n})\nexport class BpsPopoverDirective extends NzTooltipBaseDirective {\n  static ngAcceptInputType_bpsPopoverArrowPointAtCenter: BooleanInput;\n\n  readonly _nzModuleName: NzConfigKey = NZ_CONFIG_MODULE_NAME;\n\n  @Input('bpsPopoverArrowPointAtCenter') @InputBoolean() override arrowPointAtCenter?: boolean;\n  @Input('bpsPopoverTitle') override title?: NzTSType;\n  @Input('bpsPopoverContent') override content?: NzTSType;\n  @Input('bps-popover') override directiveTitle?: NzTSType | null;\n  @Input('bpsPopoverTrigger') override trigger?: NzTooltipTrigger = 'hover';\n  @Input('bpsPopoverPlacement') override placement?: string | string[] = 'top';\n  @Input('bpsPopoverOrigin') override origin?: ElementRef<HTMLElement>;\n  @Input('bpsPopoverVisible') override visible?: boolean;\n  @Input('bpsPopoverMouseEnterDelay') override mouseEnterDelay?: number;\n  @Input('bpsPopoverMouseLeaveDelay') override mouseLeaveDelay?: number;\n  @Input('bpsPopoverOverlayClassName') override overlayClassName?: string;\n  @Input('bpsPopoverOverlayStyle') override overlayStyle?: NgStyleInterface;\n  @Input('bpsPopoverType') popoverType: BpsPopoverType = 'variation_1';\n\n  @Input() @WithConfig() bpsPopoverBackdrop?: boolean = false;\n\n  // eslint-disable-next-line @angular-eslint/no-output-rename\n  @Output('bpsPopoverVisibleChange') override readonly visibleChange = new EventEmitter<boolean>();\n\n  override componentRef: ComponentRef<BpsPopoverComponent> = this.hostView.createComponent(BpsPopoverComponent);\n\n  protected override getProxyPropertyMap(): PropertyMapping {\n    return {\n      bpsPopoverBackdrop: ['bpsBackdrop', () => this.bpsPopoverBackdrop],\n      ...super.getProxyPropertyMap()\n    };\n  }\n\n  constructor(\n    elementRef: ElementRef,\n    hostView: ViewContainerRef,\n    resolver: ComponentFactoryResolver,\n    renderer: Renderer2,\n    @Host() @Optional() noAnimation?: NzNoAnimationDirective,\n    nzConfigService?: NzConfigService\n  ) {\n    super(elementRef, hostView, resolver, renderer, noAnimation, nzConfigService);\n  }\n}\n\n@Component({\n  selector: 'bps-popover',\n  exportAs: 'nzPopoverComponent',\n  animations: [zoomBigMotion],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  styleUrls: ['bps-popover.component.css'],\n  template: `\n    <ng-template\n      #overlay=\"cdkConnectedOverlay\"\n      cdkConnectedOverlay\n      nzConnectedOverlay\n      [cdkConnectedOverlayHasBackdrop]=\"hasBackdrop\"\n      [cdkConnectedOverlayOrigin]=\"origin\"\n      [cdkConnectedOverlayPositions]=\"_positions\"\n      [cdkConnectedOverlayOpen]=\"_visible\"\n      [cdkConnectedOverlayPush]=\"true\"\n      [nzArrowPointAtCenter]=\"bpsArrowPointAtCenter\"\n      (overlayOutsideClick)=\"onClickOutside($event)\"\n      (detach)=\"hide()\"\n      (positionChange)=\"onPositionChange($event)\"\n    >\n      <div\n        class=\"ant-popover\"\n        [class.ant-popover-rtl]=\"dir === 'rtl'\"\n        [ngClass]=\"_classMap\"\n        [ngStyle]=\"bpsOverlayStyle\"\n        [@.disabled]=\"!!noAnimation?.nzNoAnimation\"\n        [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n        [@zoomBigMotion]=\"'active'\"\n      >\n        <div class=\"ant-popover-content\">\n          <div class=\"ant-popover-arrow bps-popover-arrow-{{bpsPopoverType}}\">\n            <span class=\"ant-popover-arrow-content bps-popover-inner-{{bpsPopoverType}}\"></span>\n          </div>\n          <div class=\"ant-popover-inner\" role=\"tooltip\">\n            <div>\n              <div class=\"ant-popover-title\" *ngIf=\"bpsTitle\">\n                <ng-container *nzStringTemplateOutlet=\"bpsTitle\">{{ bpsTitle }}</ng-container>\n              </div> \n              <div class=\"ant-popover-inner-content bps-popover-inner-content-{{bpsPopoverType}}\">\n                <ng-container *nzStringTemplateOutlet=\"bpsContent\">{{ bpsContent }}</ng-container>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  `\n})\nexport class BpsPopoverComponent extends BpsToolTipComponent {\n  override _prefix = 'ant-popover';\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    @Optional() directionality: Directionality,\n    @Host() @Optional() noAnimation?: NzNoAnimationDirective\n  ) {\n    super(cdr, directionality, noAnimation);\n  }\n\n  get hasBackdrop(): boolean {\n    return this.bpsTrigger === 'click' ? this.bpsBackdrop : false;\n  }\n\n  protected override isEmpty(): boolean {\n    return isTooltipEmpty(this.bpsTitle) && isTooltipEmpty(this.bpsContent);\n  }\n}\n","<ng-container *ngIf=\"!bpsDisabled\">\r\n  <ng-template #itemsTpl>\r\n    <div class=\"ant-list-items\" *ngIf=\"bpsDataSource.length > 0\">\r\n      <ng-container *ngFor=\"let item of bpsDataSource; let index = index\">\r\n        <ng-template [ngTemplateOutlet]=\"bpsRenderItem\" [ngTemplateOutletContext]=\"{ $implicit: item, index: index }\"></ng-template>\r\n      </ng-container>\r\n    </div>\r\n  </ng-template>\r\n  <div *ngIf=\"bpsHeader\" class=\"ant-list-header\">\r\n    <ng-container *nzStringTemplateOutlet=\"bpsHeader\">{{ bpsHeader }}</ng-container>\r\n  </div>\r\n  <nz-spin [nzSpinning]=\"bpsLoading\">\r\n    <ng-container *ngIf=\"bpsDataSource\">\r\n      <div *ngIf=\"bpsLoading && bpsDataSource.length === 0\" [style.min-height.px]=\"53\"></div>\r\n      <div *ngIf=\"bpsGrid; else itemsTpl\" nz-row [nzGutter]=\"bpsGrid.gutter\">\r\n        <div nz-col [nzSpan]=\"bpsGrid.span\" [nzXs]=\"bpsGrid.xs\" [nzSm]=\"bpsGrid.sm\" [nzMd]=\"bpsGrid.md\" [nzLg]=\"bpsGrid.lg\" [nzXl]=\"bpsGrid.xl\"\r\n             [nzXXl]=\"bpsGrid.xxl\" *ngFor=\"let item of bpsDataSource; let index = index\">\r\n          <ng-template [ngTemplateOutlet]=\"bpsRenderItem\" [ngTemplateOutletContext]=\"{ $implicit: item, index: index }\"></ng-template>\r\n        </div>\r\n      </div>\r\n      <div *ngIf=\"!bpsLoading && bpsDataSource.length === 0\" class=\"ant-list-empty-text\">\r\n        <nz-embed-empty [nzComponentName]=\"'list'\" [specificContent]=\"bpsNoResult\"></nz-embed-empty>\r\n      </div>\r\n    </ng-container>\r\n    <ng-content></ng-content>\r\n  </nz-spin>\r\n  <div *ngIf=\"bpsFooter\" class=\"ant-list-footer\">\r\n    <ng-container *nzStringTemplateOutlet=\"bpsFooter\">{{ bpsFooter }}</ng-container>\r\n  </div>\r\n  <ng-template [ngTemplateOutlet]=\"bpsLoadMore\"></ng-template>\r\n  <div *ngIf=\"bpsPagination\" class=\"ant-list-pagination\">\r\n    <ng-template [ngTemplateOutlet]=\"bpsPagination\"></ng-template>\r\n  </div>\r\n</ng-container>\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\r\n\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { NzListGrid } from 'ng-zorro-antd/list';\r\nimport { NzUpdateHostClassService } from '../core/services/update-host-class.service';\r\nimport { NzDirectionVHType, NzSizeLDSType } from '../core/types';\r\n\r\nexport type BpsListType = 'variation1' | 'variation2' | 'variation3' | 'variation4' | 'variation5' | 'variation6';\r\n\r\n@Component({\r\n  selector: 'bps-list, [bps-list]',\r\n  exportAs: 'bpsList',\r\n  templateUrl: './bps-list.component.html',\r\n  providers: [NzUpdateHostClassService],\r\n  preserveWhitespaces: false,\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styles: [\r\n    `\r\n      bps-list,\r\n      bps-list nz-spin {\r\n        display: block;\r\n      }\r\n    `\r\n  ],\r\n  styleUrls: ['./bps-list.component.css']\r\n})\r\nexport class BpsListComponent implements OnInit, OnChanges, OnDestroy {\r\n  // #region fields\r\n  // tslint:disable-next-line:no-any\r\n  @Input() bpsDataSource: any[];\r\n\r\n  @Input() @InputBoolean() bpsBordered = false;\r\n\r\n  @Input() @InputBoolean() bpsDisabled = false;\r\n\r\n  @Input() bpsGrid: NzListGrid;\r\n\r\n  @Input() bpsListType: BpsListType = 'variation1';\r\n\r\n  @Input() bpsHeader: string | TemplateRef<void>;\r\n\r\n  @Input() bpsFooter: string | TemplateRef<void>;\r\n\r\n  @Input() bpsItemLayout: NzDirectionVHType = 'horizontal';\r\n\r\n  @Input() bpsRenderItem: TemplateRef<void>;\r\n\r\n  @Input() @InputBoolean() bpsLoading = false;\r\n\r\n  @Input() bpsLoadMore: TemplateRef<void>;\r\n\r\n  @Input() bpsPagination: TemplateRef<void>;\r\n\r\n  @Input() bpsSize: NzSizeLDSType = 'default';\r\n\r\n  @Input() @InputBoolean() bpsSplit = true;\r\n\r\n  @Input() bpsNoResult: string | TemplateRef<void>;\r\n\r\n  // #endregion\r\n\r\n  // #region styles\r\n\r\n  private prefixCls = 'ant-list';\r\n\r\n  private _setClassMap(): void {\r\n    const classMap = {\r\n      ['bps-cmacs-custom-scrollbar']: true,\r\n      [this.prefixCls]: true,\r\n      [`bps-list-type-${this.bpsListType}`]: true,\r\n      [`${this.prefixCls}-vertical`]: this.bpsItemLayout === 'vertical',\r\n      [`${this.prefixCls}-lg`]: this.bpsSize === 'large',\r\n      [`${this.prefixCls}-sm`]: this.bpsSize === 'small',\r\n      [`${this.prefixCls}-split`]: this.bpsSplit,\r\n      [`${this.prefixCls}-bordered`]: this.bpsBordered,\r\n      [`${this.prefixCls}-loading`]: this.bpsLoading,\r\n      [`${this.prefixCls}-grid`]: this.bpsGrid,\r\n      [`${this.prefixCls}-something-after-last-item`]: !!(this.bpsLoadMore || this.bpsPagination || this.bpsFooter)\r\n    };\r\n    this.updateHostClassService.updateHostClass(this.el.nativeElement, classMap);\r\n  }\r\n\r\n  // #endregion\r\n\r\n  private itemLayoutNotifySource = new BehaviorSubject<NzDirectionVHType>(this.bpsItemLayout);\r\n\r\n  get itemLayoutNotify$(): Observable<NzDirectionVHType> {\r\n    return this.itemLayoutNotifySource.asObservable();\r\n  }\r\n\r\n  constructor(private el: ElementRef, private updateHostClassService: NzUpdateHostClassService) {}\r\n\r\n  ngOnInit(): void {\r\n    this._setClassMap();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this._setClassMap();\r\n    if (changes.bpsItemLayout) {\r\n      this.itemLayoutNotifySource.next(this.bpsItemLayout);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.itemLayoutNotifySource.unsubscribe();\r\n  }\r\n}\r\n","<div *ngIf=\"avatarStr || avatarTpl\" class=\"ant-list-item-meta-avatar\">\n  <ng-container *ngIf=\"avatarStr; else avatarTpl\">\n    <nz-avatar [nzSrc]=\"avatarStr\"></nz-avatar>\n  </ng-container>\n</div>\n<div *ngIf=\"bpsTitle || bpsDescription\" class=\"ant-list-item-meta-content\">\n  <h4 *ngIf=\"bpsTitle\" class=\"ant-list-item-meta-title\">\n    <ng-container *nzStringTemplateOutlet=\"bpsTitle\">{{ bpsTitle }}</ng-container>\n  </h4>\n  <div *ngIf=\"bpsDescription\" class=\"ant-list-item-meta-description\">\n    <ng-container *nzStringTemplateOutlet=\"bpsDescription\">{{ bpsDescription }}</ng-container>\n  </div>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  Renderer2,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\n\n@Component({\n  selector: 'bps-list-item-meta, [bps-list-item-meta]',\n  exportAs: 'bpsListItemMeta',\n  templateUrl: './bps-list-item-meta.component.html',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class BpsListItemMetaComponent {\n  avatarStr = '';\n  avatarTpl: TemplateRef<void>;\n\n  @Input()\n  set bpsAvatar(value: string | TemplateRef<void>) {\n    if (value instanceof TemplateRef) {\n      this.avatarStr = '';\n      this.avatarTpl = value;\n    } else {\n      this.avatarStr = value;\n    }\n  }\n\n  @Input() bpsTitle: string | TemplateRef<void>;\n\n  @Input() bpsDescription: string | TemplateRef<void>;\n\n  constructor(public elementRef: ElementRef, private renderer: Renderer2) {\n    this.renderer.addClass(elementRef.nativeElement, 'ant-list-item-meta');\n  }\n}\n","<ng-template #actionsTpl>\n  <ul *ngIf=\"bpsActions?.length > 0\" class=\"ant-list-item-action\">\n    <li *ngFor=\"let i of bpsActions; let last=last;\">\n      <ng-template [ngTemplateOutlet]=\"i\"></ng-template>\n      <em *ngIf=\"!last\" class=\"ant-list-item-action-split\"></em>\n    </li>\n  </ul>\n</ng-template>\n<ng-template #contentTpl>\n  <div class=\"bps-list-item-content\"\r\n       (mouseenter)=\"onHover(true)\"\r\n       (mouseleave)=\"onHover(false)\">\r\n    <ng-content></ng-content>\r\n  </div>\n  <ng-container *ngIf=\"bpsDelete\">\r\n    <div class=\"bps-delete-list-icon\"\r\n         (click)=\"onDelete()\"\r\n         (mouseenter)=\"onDeleteHover(true)\"\r\n         (mouseleave)=\"onDeleteHover(false)\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10.609\" height=\"10.609\" viewBox=\"0 0 10.609 10.609\">\r\n        <defs>\r\n          <style>\r\n\r\n            .prefix__cls-1 {\r\n              fill: #fff\r\n            }\r\n          </style>\r\n        </defs>\r\n        <g id=\"prefix__sps_x_icon_deleteglass_white\" transform=\"rotate(45 799.93 -996.928)\">\r\n          <rect id=\"prefix__Rectangle_1881\" width=\"2\" height=\"13\" class=\"prefix__cls-1\" data-name=\"Rectangle 1881\" rx=\"1\" transform=\"translate(945.732 267.142)\" />\r\n          <rect id=\"prefix__Rectangle_1882\" width=\"2\" height=\"13\" class=\"prefix__cls-1\" data-name=\"Rectangle 1882\" rx=\"1\" transform=\"rotate(-90 607.436 -332.794)\" />\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  </ng-container>\n  <ng-container *ngIf=\"bpsContent\">\n    <ng-container *nzStringTemplateOutlet=\"bpsContent\">{{ bpsContent }}</ng-container>\n  </ng-container>\n</ng-template>\n<ng-template #simpleTpl>\n  <ng-template [ngTemplateOutlet]=\"contentTpl\"></ng-template>\n  <ng-template [ngTemplateOutlet]=\"bpsExtra\"></ng-template>\n  <ng-template [ngTemplateOutlet]=\"actionsTpl\"></ng-template>\n</ng-template>\n<ng-container *ngIf=\"isVerticalAndExtra; else simpleTpl\">\n  <div class=\"ant-list-item-main\">\n    <ng-template [ngTemplateOutlet]=\"contentTpl\"></ng-template>\n    <ng-template [ngTemplateOutlet]=\"actionsTpl\"></ng-template>\n  </div>\n  <div class=\"ant-list-item-extra\">\n    <ng-template [ngTemplateOutlet]=\"bpsExtra\"></ng-template>\n  </div>\n</ng-container>\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  QueryList,\n  Renderer2,\n  TemplateRef,\n  ViewEncapsulation,\r\n  EventEmitter,\r\n  Output\n} from '@angular/core';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\r\n\nimport { Subscription } from 'rxjs';\nimport { NzDirectionVHType } from '../core/types';\r\nimport { BpsListItemMetaComponent } from './bps-list-item-meta.component';\nimport { BpsListComponent } from './bps-list.component';\n\n@Component({\n  selector: 'bps-list-item, [bps-list-item]',\n  exportAs: 'bpsListItem',\n  templateUrl: './bps-list-item.component.html',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.bps-delete-icon-hovered]': '_onDeleteHover'\r\n  }\n})\nexport class BpsListItemComponent implements OnDestroy, AfterViewInit {\n\n  _onDeleteHover = false;\n\n  @ContentChildren(BpsListItemMetaComponent) metas!: QueryList<BpsListItemMetaComponent>;\n  @Input() bpsActions: Array<TemplateRef<void>> = [];\n  @Input() bpsContent: string | TemplateRef<void>;\n  @Input() bpsExtra: TemplateRef<void>;\n  @Input() @InputBoolean() @HostBinding('class.ant-list-item-no-flex') bpsNoFlex: boolean = false;\n  @Input() @InputBoolean() bpsDelete = false;\n\n  @Output() ondelete: EventEmitter<any> = new EventEmitter<any>();\n  @Output() ondeletehover: EventEmitter<any> = new EventEmitter<any>();\n  @Output() hover: EventEmitter<any> = new EventEmitter<any>();\n\n  private itemLayout: NzDirectionVHType;\n  private itemLayout$: Subscription;\n\n  get isVerticalAndExtra(): boolean {\n    return this.itemLayout === 'vertical' && !!this.bpsExtra;\n  }\n\n  onDeleteHover(event) {\n    this._onDeleteHover = event;\r\n    this.ondeletehover.emit(event);\r\n  }\n\n  onHover(event) {\r\n    this.hover.emit(event);\r\n  }\n\n  onDelete() {\n    this.ondelete.emit();\r\n  }\n\n  constructor(\n    elementRef: ElementRef,\n    renderer: Renderer2,\n    private parentComp: BpsListComponent,\n    private cdr: ChangeDetectorRef\n  ) {\n    renderer.addClass(elementRef.nativeElement, 'ant-list-item');\n  }\n\n  ngAfterViewInit(): void {\n    this.itemLayout$ = this.parentComp.itemLayoutNotify$.subscribe(val => {\n      this.itemLayout = val;\n      this.cdr.detectChanges();\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.itemLayout$) {\n      this.itemLayout$.unsubscribe();\n    }\n  }\n}\n","import { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { Platform } from '@angular/cdk/platform';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  ViewContainerRef\n} from '@angular/core';\nimport { BehaviorSubject, EMPTY, Subject, combineLatest, fromEvent, merge } from 'rxjs';\nimport { auditTime, distinctUntilChanged, filter, map, mapTo, switchMap, takeUntil } from 'rxjs/operators';\n\nimport { NzConfigKey, NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { POSITION_MAP } from 'ng-zorro-antd/core/overlay';\nimport { BooleanInput, IndexableObject } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\nimport { BpsDropdownMenuComponent, NzPlacementType } from './dropdown-menu.component';\n\nconst NZ_CONFIG_MODULE_NAME: NzConfigKey = 'dropDown';\n\nconst listOfPositions = [\n  POSITION_MAP.bottomLeft,\n  POSITION_MAP.bottomRight,\n  POSITION_MAP.topRight,\n  POSITION_MAP.topLeft\n];\n\n@Directive({\n  selector: '[bps-dropdown]',\n  exportAs: 'bpsDropdown',\n  host: {\n    class: 'ant-dropdown-trigger'\n  }\n})\nexport class BpsDropDownDirective implements AfterViewInit, OnDestroy, OnChanges {\n  readonly _nzModuleName: NzConfigKey = NZ_CONFIG_MODULE_NAME;\n\n  static ngAcceptInputType_bpsBackdrop: BooleanInput;\n  static ngAcceptInputType_bpsClickHide: BooleanInput;\n  static ngAcceptInputType_bpsDisabled: BooleanInput;\n  static ngAcceptInputType_bpsVisible: BooleanInput;\n\n  private portal?: TemplatePortal;\n  private overlayRef: OverlayRef | null = null;\n  private destroy$ = new Subject<boolean>();\n  private positionStrategy = this.overlay\n    .position()\n    .flexibleConnectedTo(this.elementRef.nativeElement)\n    .withLockedPosition()\n    .withTransformOriginOn('.ant-dropdown');\n  private inputVisible$ = new BehaviorSubject<boolean>(false);\n  private bpsTrigger$ = new BehaviorSubject<'click' | 'hover'>('hover');\n  private overlayClose$ = new Subject<boolean>();\n  @Input() bpsDropdownMenu: BpsDropdownMenuComponent | null = null;\n  @Input() bpsTrigger: 'click' | 'hover' = 'hover';\n  @Input() bpsMatchWidthElement: ElementRef | null = null;\n  @Input() @WithConfig<boolean>() @InputBoolean() bpsBackdrop = false;\n  @Input() @InputBoolean() bpsClickHide = true;\n  @Input() @InputBoolean() bpsDisabled = false;\n  @Input() @InputBoolean() bpsVisible = false;\n  @Input() bpsOverlayClassName: string = '';\n  @Input() bpsOverlayStyle: IndexableObject = {};\n  @Input() bpsPlacement: NzPlacementType = 'bottomLeft';\n  @Output() readonly bpsVisibleChange: EventEmitter<boolean> = new EventEmitter();\n\n  setDropdownMenuValue<T extends keyof BpsDropdownMenuComponent>(key: T, value: BpsDropdownMenuComponent[T]): void {\n    if (this.bpsDropdownMenu) {\n      this.bpsDropdownMenu.setValue(key, value);\n    }\n  }\n\n  constructor(\n    public readonly nzConfigService: NzConfigService,\n    public elementRef: ElementRef,\n    private overlay: Overlay,\n    private renderer: Renderer2,\n    private viewContainerRef: ViewContainerRef,\n    private platform: Platform\n  ) { }\n\n  ngAfterViewInit(): void {\n    if (this.bpsDropdownMenu) {\n      const nativeElement: HTMLElement = this.elementRef.nativeElement;\n\n      this.bpsDropdownMenu.bpsPlacement = this.bpsPlacement;\n\n      /** host mouse state **/\n      const hostMouseState$ = merge(\n        fromEvent(nativeElement, 'mouseenter').pipe(mapTo(true)),\n        fromEvent(nativeElement, 'mouseleave').pipe(mapTo(false))\n      );\n      /** menu mouse state **/\n      const menuMouseState$ = this.bpsDropdownMenu.mouseState$;\n      /** merged mouse state **/\n      const mergedMouseState$ = merge(menuMouseState$, hostMouseState$);\n      /** host click state **/\n      const hostClickState$ = fromEvent(nativeElement, 'click').pipe(map(() => !this.bpsVisible));\n      /** visible state switch by bpsTrigger **/\n      const visibleStateByTrigger$ = this.bpsTrigger$.pipe(\n        switchMap(trigger => {\n          if (trigger === 'hover') {\n            return mergedMouseState$;\n          } else if (trigger === 'click') {\n            return hostClickState$;\n          } else {\n            return EMPTY;\n          }\n        })\n      );\n      const descendantMenuItemClick$ = this.bpsDropdownMenu.descendantMenuItemClick$.pipe(\n        filter(() => this.bpsClickHide),\n        mapTo(false)\n      );\n      const domTriggerVisible$ = merge(visibleStateByTrigger$, descendantMenuItemClick$, this.overlayClose$).pipe(\n        filter(() => !this.bpsDisabled)\n      );\n      const visible$ = merge(this.inputVisible$, domTriggerVisible$);\n      combineLatest([visible$, this.bpsDropdownMenu.isChildSubMenuOpen$])\n        .pipe(\n          map(([visible, sub]) => visible || sub),\n          auditTime(150),\n          distinctUntilChanged(),\n          filter(() => this.platform.isBrowser),\n          takeUntil(this.destroy$)\n        )\n        .subscribe((visible: boolean) => {\n          const element = this.bpsMatchWidthElement ? this.bpsMatchWidthElement.nativeElement : nativeElement;\n          const triggerWidth = element.getBoundingClientRect().width;\n          if (this.bpsVisible !== visible) {\n            this.bpsVisibleChange.emit(visible);\n          }\n          this.bpsVisible = visible;\n          if (visible) {\n            /** set up overlayRef **/\n            if (!this.overlayRef) {\n              /** new overlay **/\n              this.overlayRef = this.overlay.create({\n                positionStrategy: this.positionStrategy,\n                minWidth: triggerWidth,\n                disposeOnNavigation: true,\n                hasBackdrop: this.bpsBackdrop && this.bpsTrigger === 'click',\n                scrollStrategy: this.overlay.scrollStrategies.reposition()\n              });\n              merge(\n                this.overlayRef.backdropClick(),\n                this.overlayRef.detachments(),\n                this.overlayRef\n                  .outsidePointerEvents()\n                  .pipe(filter((e: MouseEvent) => !this.elementRef.nativeElement.contains(e.target))),\n                this.overlayRef.keydownEvents().pipe(filter(e => e.keyCode === ESCAPE && !hasModifierKey(e)))\n              )\n                .pipe(takeUntil(this.destroy$))\n                .subscribe(() => {\n                  this.overlayClose$.next(false);\n                });\n            } else {\n              /** update overlay config **/\n              const overlayConfig = this.overlayRef.getConfig();\n              overlayConfig.minWidth = triggerWidth;\n            }\n            /** open dropdown with animation **/\n            this.positionStrategy.withPositions([POSITION_MAP[this.bpsPlacement], ...listOfPositions]);\n            /** reset portal if needed **/\n            if (!this.portal || this.portal.templateRef !== this.bpsDropdownMenu!.templateRef) {\n              this.portal = new TemplatePortal(this.bpsDropdownMenu!.templateRef, this.viewContainerRef);\n            }\n            this.overlayRef.attach(this.portal);\n          } else {\n            /** detach overlayRef if needed **/\n            if (this.overlayRef) {\n              this.overlayRef.detach();\n            }\n          }\n        });\n\n      this.bpsDropdownMenu!.animationStateChange$.pipe(takeUntil(this.destroy$)).subscribe(event => {\n        if (event.toState === 'void') {\n          if (this.overlayRef) {\n            this.overlayRef.dispose();\n          }\n          this.overlayRef = null;\n        }\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n    if (this.overlayRef) {\n      this.overlayRef.dispose();\n      this.overlayRef = null;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { bpsVisible, bpsDisabled, bpsOverlayClassName, bpsOverlayStyle, bpsTrigger } = changes;\n    if (bpsTrigger) {\n      this.bpsTrigger$.next(this.bpsTrigger);\n    }\n    if (bpsVisible) {\n      this.inputVisible$.next(this.bpsVisible);\n    }\n    if (bpsDisabled) {\n      const nativeElement = this.elementRef.nativeElement;\n      if (this.bpsDisabled) {\n        this.renderer.setAttribute(nativeElement, 'disabled', '');\n        this.inputVisible$.next(false);\n      } else {\n        this.renderer.removeAttribute(nativeElement, 'disabled');\n      }\n    }\n    if (bpsOverlayClassName) {\n      this.setDropdownMenuValue('bpsOverlayClassName', this.bpsOverlayClassName);\n    }\n    if (bpsOverlayStyle) {\n      this.setDropdownMenuValue('bpsOverlayStyle', this.bpsOverlayStyle);\n    }\n  }\n}\n","<div id=\"{{gridID}}\"\r\n     class=\"bps-table-{{tableType}}\">\r\n  <input bps-input\r\n         *ngIf=\"tableType === 'glass_profile'\"\r\n         class=\"bps-table-glass-filter\"\r\n         [placeholder]=\"filterPlaceholder\"\r\n         (click)=\"preventDefault($event)\"\r\n         (keyup)=\"updateSearch($event.target.value)\">\r\n  <nz-table #gridComponent\r\n            class=\"bps-table\"\r\n            [nzData]=\"_data\"\r\n            [nzFrontPagination]=\"frontPagination\"\r\n            [nzTotal]=\"total\"\r\n            [nzPageIndex]=\"pageIndex\"\r\n            [nzPageSize]=\"pageSize\"\r\n            [nzShowPagination]=\"showPagination\"\r\n            [nzPaginationPosition]=\"paginationPosition\"\r\n            [nzBordered]=\"bordered\"\r\n            [nzWidthConfig]=\"widthConfig\"\r\n            [nzLoading]=\"loading\"\r\n            [nzLoadingIndicator]=\"loadingIndicator\"\r\n            [nzLoadingDelay]=\"loadingDelay\"\r\n            [nzScroll]=\"scroll\"\r\n            [nzTitle]=\"title\"\r\n            [nzFooter]=\"footer\"\r\n            [nzNoResult]=\"noResult\"\r\n            [nzPageSizeOptions]=\"pageSizeOptions\"\r\n            [nzShowQuickJumper]=\"showQuickJumper\"\r\n            [nzShowSizeChanger]=\"showSizeChanger\"\r\n            [nzShowTotal]=\"showTotal\"\r\n            [nzHideOnSinglePage]=\"hideOnSinglePage\"\r\n            [nzSimple]=\"simple\"\r\n            [nzVirtualItemSize]=\"virtualItemSize\"\r\n            [nzVirtualMaxBufferPx]=\"virtualMaxBufferPx\"\r\n            [nzVirtualMinBufferPx]=\"virtualMinBufferPx\"\r\n            [nzVirtualForTrackBy]=\"virtualForTrackBy\"\r\n            (nzPageIndexChange)=\"emitBpsEvent($event, 'pageIndex')\"\r\n            (nzCurrentPageDataChange)=\"emitBpsEvent($event, 'currentPageData')\"\r\n            (nzQueryParams)=\"emitBpsEvent($event, 'queryParams')\"\r\n            (nzPageSizeChange)=\"emitBpsEvent($event, 'pageSize')\">\r\n    <thead>\r\n      <tr>\r\n\r\n        <th *ngIf=\"expandable\"\r\n            [nzWidth]=\"'40px'\"\r\n            nzShowExpand>\r\n        </th>\r\n\r\n        <ng-container *ngFor=\"let field of getFields(); index as th\">\r\n          <ng-container *ngIf=\"field.showSort\">\r\n            <th [ngClass]=\"field.ngClass\"\r\n                [class.bps-column-disabled]=\"field.disabled\"\r\n                [(nzSortOrder)]=\"field.sortOrder\"\r\n\r\n                [nzShowSort]=\"field.showSort\"\r\n                (nzSortOrderChange)=\"sort({key: field.property, value: $event})\"\r\n                nzCustomFilter\r\n                [nzWidth]=\"field.width\">\r\n              <ng-container *ngIf=\"field.template; else cellValue\">\r\n                <ng-container *ngTemplateOutlet=\"field.template.ref; context: field.template.context\"></ng-container>\r\n              </ng-container>\r\n              <ng-template #cellValue>{{field.display}}</ng-template>\r\n\r\n              <ng-container *ngIf=\"field.showCustomFilter\">\r\n                <ng-container [ngTemplateOutlet]=\"customFilter\"></ng-container>\r\n              </ng-container>\r\n            </th>\r\n          </ng-container>\r\n\r\n          <ng-container *ngIf=\"!field.showSort\">\r\n            <th [ngClass]=\"field.ngClass\"\r\n                [class.bps-column-disabled]=\"field.disabled\"\r\n                nzCustomFilter\r\n                [nzWidth]=\"field.width\">\r\n              <ng-container *ngIf=\"field.template; else cellValue\">\r\n                <ng-container *ngTemplateOutlet=\"field.template.ref; context: field.template.context\"></ng-container>\r\n              </ng-container>\r\n              <ng-template #cellValue>{{field.display}}</ng-template>\r\n\r\n              <ng-container *ngIf=\"field.showCustomFilter\">\r\n                <ng-container [ngTemplateOutlet]=\"customFilter\"></ng-container>\r\n              </ng-container>\r\n            </th>\r\n          </ng-container>\r\n        </ng-container>     \r\n\r\n        <th *ngIf=\"tableType === 'home'\"\r\n            [nzWidth]=\"'70px'\">\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n      <ng-template ngFor let-data [ngForOf]=\"gridComponent.data\" let-i=\"index\">\r\n        <tr [class.ant-table-selected-row]=\"isRowSelected(data)\"\r\n            [class.bps-table4-custom-row]=\"data.bpsTable4CustomRow\"\r\n            [class.bps-table-home-expanded-row]=\"mapOfExpandData[data[config.fieldId]]\"\r\n            (click)=\"clickRow($event, data)\"\r\n            [class.bps-table-pair-row]=\"tableType === 'report' && !(i % 2)\">\r\n\r\n          <ng-container *ngIf=\"expandable\">\r\n            <td nzShowExpand\r\n                style=\"border-bottom: none !important\"\r\n                (nzExpandChange)=\"expandRow(data, $event)\"\r\n                [nzExpand]=\"mapOfExpandData[data[config.fieldId]]\"></td>\r\n          </ng-container>\r\n\r\n          <td *ngFor=\"let field of getFields(); index as fi\"\r\n              [ngClass]=\"getTDClassMap(field, data, fi)\">\r\n\r\n            <ng-container *ngIf=\"isCeldTypeTemplateRef(field)\">\r\n              <ng-container *ngIf=\"data[field.property]\">\r\n                <ng-container *ngTemplateOutlet=\"data[field.property].ref; context: data[field.property].context\"></ng-container>\r\n              </ng-container>\r\n            </ng-container>\r\n\r\n            <ng-container *ngIf=\"isCeldTypeDefault(field) && tableType !== 'home'\">\r\n              <ng-container *ngIf=\"editId !== data[config.fieldId]; else editTpl\">\r\n                <div class=\"bps-table-td-content\">\r\n                  {{ data[field.property] }}\r\n                </div>\r\n                <ng-container *ngIf=\"!fi\">\r\n                  <span class=\"bps-report-table-menu-pencil\" (click)=\"startEdit(data, $event)\"></span>\r\n                </ng-container>\r\n              </ng-container>\r\n              <ng-template #editTpl>\r\n                <input bps-input [(ngModel)]=\"data[field.property]\"\r\n                       class=\"bps-editable-cell-input\"\r\n                       (click)=\"preventDefault($event)\"\r\n                       (keyup)=\"endEditMode($event, i, data)\" />\r\n              </ng-template>\r\n            </ng-container>\r\n\r\n            <ng-container *ngIf=\"isCeldTypeDefault(field) && tableType === 'home'\">\r\n              <ng-container *ngIf=\"editId !== data[config.fieldId] || editProperty !== field.property\">\r\n                <div>\r\n                  {{ data[field.property] }}\r\n                </div>\r\n              </ng-container>\r\n              <ng-container *ngIf=\"editId === data[config.fieldId] && editProperty === field.property\">\r\n                <input bps-input [(ngModel)]=\"data[field.property]\"\r\n                       class=\"bps-editable-cell-input\"\r\n                       [class.bps-editable-cell-input-home-table]=\"tableType === 'home'\"\r\n                       (click)=\"preventDefault($event)\"\r\n                       (keyup)=\"endEditMode($event, i, data)\" />\r\n              </ng-container>\r\n\r\n            </ng-container>\r\n          </td>\r\n\r\n          <td *ngIf=\"tableType === 'home'\">\r\n            <i class=\"bps-table-home-more-icon\"\r\n               bps-dropdown\r\n               (click)=\"emitBpsEvent(data, 'moreBtnClicked')\"\r\n               [bpsDropdownMenu]=\"moreMenu\"\r\n               bpsTrigger=\"click\"\r\n               bpsPlacement=\"rightTop\"></i>\r\n            <i class=\"bps-table-home-delete-icon\"\r\n               [class.bps-table-home-delete-icon-position-updated]=\"forceUpdate\"\r\n               bps-dropdown\r\n               (bpsForcedUpdatedPosition)=\"changeIcon($event)\"\r\n               (click)=\"emitBpsEvent(data, 'deleteBtnClicked')\"\r\n               [bpsDropdownMenu]=\"deleteMenu\"\r\n               bpsTrigger=\"click\"\r\n               bpsPlacement=\"rightTop\"></i>\r\n          </td>\r\n\r\n        </tr>\r\n\r\n        <ng-container *ngIf=\"expandable\">\r\n          <tr [nzExpand]=\"mapOfExpandData[data[config.fieldId]]\">\r\n            <td [attr.colspan]=\"getFields().length + 2\">\r\n              <ng-container [ngTemplateOutlet]=\"rowExpandTemplate\" [ngTemplateOutletContext]=\"{data: data, index: i}\"></ng-container>\r\n            </td>\r\n          </tr>\r\n        </ng-container>\r\n      </ng-template>\r\n\r\n    </tbody>\r\n  </nz-table>\r\n</div>\r\n\r\n<ng-template #customFilter>\r\n  <div class=\"bps-table-filter-icon\">\r\n    <bps-input-group [bpsPrefix]=\"searchPrefixIcon\"\r\n                     (click)=\"focusInput($event, searchInput)\"\r\n                     (mouseenter)=\"searchBoxHovered = true;\"\r\n                     (mouseleave)=\"searchBoxHovered = false;\"\r\n                     class=\"bps-table-custom-filter\">\r\n      <input bps-input\r\n             #searchInput\r\n             nz-th-extra\r\n             class=\"bps-table-filter-custom-input\"\r\n             (click)=\"preventDefault($event)\"\r\n             (keyup)=\"updateSearch($event.target.value)\"\r\n             nzTableFilter>\r\n    </bps-input-group>\r\n  </div>\r\n  \r\n  <ng-template #searchPrefixIcon let-disabled=\"false\">\r\n    <ng-container *ngIf=\"!searchBoxHovered  && !disabled\">\r\n      <img class=\"bps-custom-filter-img\" src=\"/assets/bps-icons/sps_search_icon_home_enabled.svg\" />\r\n    </ng-container>\r\n    <ng-container *ngIf=\"searchBoxHovered && !disabled\">\r\n      <img class=\"bps-custom-filter-img\" src=\"/assets/bps-icons/sps_search_icon_home_hover_activated.svg\" />\r\n    </ng-container>\r\n    <ng-container *ngIf=\"disabled\">\r\n      <img class=\"bps-custom-filter-img\" src=\"/assets/bps-icons/sps_search_icon_home_disabled.svg\" />\r\n    </ng-container>\r\n  </ng-template>\r\n</ng-template>\r\n","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  AfterViewInit,\r\n  TemplateRef,\r\n  ViewChild,\r\n  TrackByFunction,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  ElementRef,\r\n  HostListener,\r\n  ChangeDetectionStrategy,\r\n} from '@angular/core';\r\nimport { Subject, config } from 'rxjs';\r\nimport { takeUntil, debounceTime } from 'rxjs/operators';\r\n\r\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\r\nimport { TableConfig, Field } from '../core/interfaces/grid-config';\r\nimport { BpsInputDirective } from '../bps-input/bps-input.directive';\r\nimport { InputBoolean, InputNumber } from 'ng-zorro-antd/core/util';\r\n\r\nexport type BpsTableType = 'report' | 'home' | 'glass_profile';\r\n\r\nexport var TemplateType = {\r\n  Date: 'Date',\r\n  Select: 'Select',\r\n  Number: 'Number',\r\n  String: 'String',\r\n  Boolean: 'Boolean',\r\n  Time: 'Time',\r\n}\r\n\r\nexport var CeldType = {\r\n  Default: 'Default',\r\n  TemplateRef: 'TemplateRef'\r\n}\r\n\r\n@Component({\r\n  // tslint:disable-next-line: component-selector\r\n  selector: 'bps-table',\r\n  exportAs: 'bpsTable',\r\n  templateUrl: './bps-table.component.html',\r\n  styleUrls: ['./bps-table.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n// tslint:disable-next-line no-any\r\nexport class BpsTableComponent<T = any> implements OnInit, OnDestroy, AfterViewInit, OnChanges {\r\n  locale: any = {}; // tslint:disable-line:no-any\r\n  private destroy$ = new Subject<void>();\r\n  checkboxCache: CheckboxSelect[] = [];\r\n  mapOfExpandData: { [key: string]: boolean } = {};\r\n  _data = [];\r\n  editId = null;\r\n  editProperty = null;\r\n  isExpanded = false;\r\n  searchBoxHovered = false;\r\n  private _searchSubject: Subject<string> = new Subject();\r\n\r\n  /* Table API */ \r\n  // tslint:disable-next-line: no-input-rename\r\n  @Input()\r\n  set data(data) {\r\n    this._data = data;\r\n    this.updateCheckboxCache();\r\n  }\r\n  @Input() @InputBoolean() frontPagination = true;\r\n  @Input() total = 0;\r\n  @Input() pageIndex = 1;\r\n  @Input() pageSize = 10;\r\n  @Input() @InputBoolean() showPagination = true;\r\n  @Input() paginationPosition: 'top' | 'bottom' | 'both' = 'bottom';\r\n  @Input() @InputBoolean() bordered = false;\r\n  @Input() widthConfig: string[] = [];\r\n  @Input() @InputBoolean() loading = false;\r\n  @Input() loadingDelay = 0;\r\n  @Input() loadingIndicator: TemplateRef<void>;\r\n  @Input() scroll: { x?: string | null; y?: string | null } = { x: null, y: null };\r\n  @Input() title: string | TemplateRef<void>;\r\n  @Input() footer: string | TemplateRef<void>;\r\n  @Input() noResult: string | TemplateRef<void>;\r\n  @Input() pageSizeOptions = [10, 20, 30, 40, 50];\r\n  @Input() @InputBoolean() showQuickJumper = false;\r\n  @Input() @InputBoolean() showSizeChanger = false;\r\n  @Input() showTotal: TemplateRef<{ $implicit: number; range: [number, number] }>;\r\n  @Input() @InputBoolean() hideOnSinglePage = false;\r\n  @Input() @InputBoolean() simple = false;\r\n  @Input() @InputNumber() virtualItemSize = 0;\r\n  @Input() @InputNumber() virtualMaxBufferPx = 200;\r\n  @Input() @InputNumber() virtualMinBufferPx = 100;\r\n  @Input() virtualForTrackBy: TrackByFunction<T>;\r\n  @Input() @InputBoolean() inlineEdit = false;\r\n  @Output() pageIndexChange = new EventEmitter<any>();\r\n  @Output() currentPageDataChange = new EventEmitter<any>();\r\n  @Output() queryParamsChange = new EventEmitter<any>();\r\n  @Output() pageSizeChange = new EventEmitter<any>();\r\n  @Output() onclickRow = new EventEmitter<any>();\r\n  @Output() ondblclickRow = new EventEmitter<any>();\r\n  @Output() selectionChange = new EventEmitter<any>();\r\n\r\n/* Thead API */\r\n  @Input() singleSort = true;\r\n  @Output() sortChange = new EventEmitter<any>();\r\n  \r\n  /* BPS API */ \r\n  @Input() config: TableConfig;\r\n  @Output() configChange: EventEmitter<TableConfig> = new EventEmitter<TableConfig>();\r\n  @Input() gridID: string;\r\n  @Input() filterPlaceholder: string;\r\n  @Output() onedit = new EventEmitter<any>();\r\n  @Input() tableType: BpsTableType = 'report';\r\n  @Input() @InputBoolean() expandable = false;\r\n  @Output() searchValueChange: EventEmitter<string> = new EventEmitter<string>();\r\n  @Output() moreBtnClicked: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() deleteBtnClicked: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() expandChange: EventEmitter<any> = new EventEmitter<any>();\r\n  @Input() moreMenu: TemplateRef<any>;\r\n  @Input() deleteMenu: TemplateRef<any>;\r\n  @Input() rowExpandTemplate: TemplateRef<any>;\r\n\r\n  @ViewChild(BpsInputDirective, { static: false, read: ElementRef }) inputElement: ElementRef;\r\n  forceUpdate = false;\r\n\r\n  @HostListener('window:mouseup', ['$event'])\r\n  handleClick(e: MouseEvent): void {\r\n    if (this.editId !== null && this.inputElement && this.inputElement.nativeElement !== e.target) {\r\n      this.emitOnEditEvent();\r\n      this.editId = null;\r\n    }\r\n  }\r\n\r\n  sort(sort: { key: string; value: string }): void {\r\n    const field: any = this.getFields().filter(item => item.property === sort.key)[0];\r\n    if (field.disabled) {\r\n      return;\r\n    }\r\n    this.sortChange.emit({ sortName: sort.key, sortValue: sort.value });\r\n  }\r\n\r\n  emitOnEditEvent() {\r\n    let editedEl = this._data.filter(el => el[this.config.fieldId] === this.editId);\r\n    if (editedEl.length) {\r\n      this.onedit.emit(editedEl);\r\n    }\r\n  }\r\n\r\n  focusInput($event: Event, input: any) {\r\n\r\n    $event.preventDefault();\r\n    $event.stopImmediatePropagation();\r\n    input.focus();\r\n  }\r\n\r\n  endEditMode($event: KeyboardEvent, index: number, data: any = null) {\r\n    if ($event.key === ('Enter' || 'enter')) {\r\n      this.emitOnEditEvent();\r\n      this.editId = null;\r\n      this.editProperty = null;\r\n    }\r\n  }\r\n\r\n  preventDefault($event: MouseEvent) {\r\n    $event.preventDefault();\r\n    $event.stopImmediatePropagation();\r\n  }\r\n\r\n  emitBpsEvent($event, type: string) {\r\n    switch (type) {\r\n      case 'pageIndex':\r\n        this.pageIndexChange.emit($event);\r\n        break;\r\n      case 'currentPageData':\r\n        this.currentPageDataChange.emit($event);\r\n        break;\r\n      case 'queryParams':\r\n        this.queryParamsChange.emit($event);\r\n        break;\r\n      case 'pageSize':\r\n        this.pageSizeChange.emit($event);\r\n        break;\r\n      case 'moreBtnClicked':\r\n        this.moreBtnClicked.emit($event);\r\n        break;\r\n      case 'deleteBtnClicked':\r\n        this.deleteBtnClicked.emit($event);\r\n        break;\r\n    }\r\n  }\r\n\r\n  getFields(): Field[] {\r\n    return this.config ? this.config.fields.filter(item => item.hidden === undefined || !item.hidden) : [];\r\n  }\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private i18n: NzI18nService\r\n  ) {\r\n    this._setSearchSubscription();\r\n  }\r\n\r\n  private _setSearchSubscription() {\r\n    this._searchSubject.pipe(\r\n      debounceTime(500)\r\n    ).subscribe((searchValue: string) => {\r\n      this.searchValueChange.emit(searchValue);\r\n    });\r\n  }\r\n\r\n  public updateSearch(searchTextValue: string) {\r\n    this._searchSubject.next(searchTextValue);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.data && this.config) {\r\n      this.updateCheckboxCache();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\r\n      this.locale = this.i18n.getLocaleData('Table');\r\n      this.cdr.markForCheck();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n    this._searchSubject.unsubscribe();\r\n  }\r\n\r\n  isCeldTypeTemplateRef(field: Field) {\r\n    return field.celdType === CeldType.TemplateRef;\r\n  }\r\n\r\n  isCeldTypeDefault(field: Field) {\r\n    return field.celdType === CeldType.Default;\r\n  }\r\n\r\n  getTDClassMap(field: Field, data, fi = 9999) {\r\n    return {\r\n      ...field.ngClass,\r\n      ['bps-td-disabled']: data.disabled,\r\n      ['bps-td-no-padding']: data[this.config.fieldId] === this.editId,\r\n      ['bps-fst-column']: !fi,\r\n    }\r\n  }\r\n\r\n  isRowSelected(data: any): boolean {\r\n    if (this.config) {\r\n      const dataSelected = this.checkboxCache.filter(item => item.selected).map(item => item.data[this.config.fieldId]);\r\n      return dataSelected.indexOf(data[this.config.fieldId]) !== -1;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  updateCheckboxCache(): void {\r\n    const temp = [...this.checkboxCache];\r\n    this.checkboxCache.length = 0;\r\n    this._data.forEach(item => {\r\n      const checkItem = temp.filter(e => e.data[this.config.fieldId] === item[this.config.fieldId]);\r\n      this.checkboxCache.push({\r\n        selected: checkItem.length ? checkItem[0].selected : false,\r\n        data: item\r\n      });\r\n    });\r\n  }\r\n\r\n  clicks = 0;\r\n  clickRow(event: MouseEvent, data: any) {\r\n    this.clicks++;\r\n    setTimeout(() => {\r\n      if (this.clicks === 1) {\r\n        this.selectRow(data);\r\n        if (this.expandable) {\r\n          const key = this.config.fieldId;\r\n          this.expandRow(data, !this.mapOfExpandData[data[key]]);\r\n          this.cdr.detectChanges();\r\n        }\r\n        event.preventDefault();\r\n        event.stopImmediatePropagation();\r\n      } else if (this.clicks === 2){\r\n        this.ondblclickRow.emit(data);\r\n      }\r\n      this.clicks = 0;\r\n    }, 300);\r\n  }\r\n\r\n  startEdit(data: any, event: MouseEvent): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    if (this.inlineEdit && !data.disabled) {\r\n      this.editId = data[this.config.fieldId];\r\n      this.cdr.detectChanges();\r\n      this.inputElement.nativeElement.focus();\r\n      setTimeout(() => {\r\n        this.inputElement.nativeElement.select();\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  editRow(data, property) {\r\n    if (!data.disabled) {\r\n      this.editId = data[this.config.fieldId];\r\n      this.editProperty = property;\r\n      this.cdr.detectChanges();\r\n      this.inputElement.nativeElement.focus();\r\n      setTimeout(() => {\r\n        this.inputElement.nativeElement.select();\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  selectRow(data: any, selectionOnly = false) {\r\n    if (!data.disabled) {\r\n      if (!selectionOnly) {\r\n        this.onclickRow.emit(data);\r\n      }\r\n      this.checkboxCache.forEach(item => {\r\n        if (item.data[this.config.fieldId] === data[this.config.fieldId]) {\r\n          item.selected = true;\r\n          this.selectionChange.emit(item);\r\n        } else {\r\n          item.selected = false;\r\n        }\r\n      });\r\n      this.cdr.detectChanges();\r\n    }  \r\n  }\r\n\r\n  expandRow(data, $event) {\r\n    this.mapOfExpandData = {};\r\n    this.mapOfExpandData[data[this.config.fieldId]] = $event;\r\n    this.expandChange.emit(this.mapOfExpandData);\r\n  }\r\n\r\n  changeIcon($event) {\r\n    this.forceUpdate = $event;\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n}\r\n\r\nexport interface CheckboxSelect {\r\n  data: any;\r\n  selected: boolean;\r\n}\r\n","<div class=\"bps-table-expandable-panel-wrapper\">\r\n  <div class=\"bps-table-expandable-panel-menu\">\r\n    <div class=\"bps-table-expandable-panel-menu-inner\">\r\n      <ng-container [ngTemplateOutlet]=\"menuTemplate\"></ng-container>\r\n    </div>\r\n  </div>\r\n\r\n  <div #bpsExpandablePanel class=\"bps-table-report bps-table-expandable-panel bps-table-expandable-panel-table-wrapper\">\r\n    <nz-table #gridComponent\r\n              class=\"bps-table-expandable-panel\"\r\n              [nzData]=\"_data\"\r\n              [nzFrontPagination]=\"frontPagination\"\r\n              [nzTotal]=\"total\"\r\n              [nzPageIndex]=\"pageIndex\"\r\n              [nzPageSize]=\"pageSize\"\r\n              [nzShowPagination]=\"showPagination\"\r\n              [nzPaginationPosition]=\"paginationPosition\"\r\n              [nzBordered]=\"bordered\"\r\n              [nzWidthConfig]=\"widthConfig\"\r\n              [nzLoading]=\"loading\"\r\n              [nzLoadingIndicator]=\"loadingIndicator\"\r\n              [nzLoadingDelay]=\"loadingDelay\"\r\n              [nzScroll]=\"scroll\"\r\n              [nzTitle]=\"title\"\r\n              [nzFooter]=\"footer\"\r\n              [nzNoResult]=\"noResult\"\r\n              [nzPageSizeOptions]=\"pageSizeOptions\"\r\n              [nzShowQuickJumper]=\"showQuickJumper\"\r\n              [nzShowSizeChanger]=\"showSizeChanger\"\r\n              [nzShowTotal]=\"showTotal\"\r\n              [nzHideOnSinglePage]=\"hideOnSinglePage\"\r\n              [nzSimple]=\"simple\"\r\n              [nzVirtualItemSize]=\"virtualItemSize\"\r\n              [nzVirtualMaxBufferPx]=\"virtualMaxBufferPx\"\r\n              [nzVirtualMinBufferPx]=\"virtualMinBufferPx\"\r\n              [nzVirtualForTrackBy]=\"virtualForTrackBy\"\r\n              (nzPageIndexChange)=\"emitBpsEvent($event, 'pageIndex')\"\r\n              (nzCurrentPageDataChange)=\"emitBpsEvent($event, 'currentPageData')\"\r\n              (nzQueryParams)=\"emitBpsEvent($event, 'queryParams')\"\r\n              (nzPageSizeChange)=\"emitBpsEvent($event, 'pageSize')\">\r\n      <thead>\r\n        <tr>\r\n          <th *ngFor=\"let field of getFields(); index as hi\"\r\n              style=\"display: none;\"\r\n              [nzWidth]=\"field.width\">\r\n          </th>\r\n        </tr>  \r\n      </thead>\r\n      <tbody>\r\n        <ng-template ngFor let-data [ngForOf]=\"gridComponent.data\" let-i=\"index\">\r\n          <tr [class.ant-table-selected-row]=\"isRowSelected(data)\"\r\n              (click)=\"clickRow($event, data)\">\r\n\r\n            <td *ngFor=\"let field of getFields(); index as fi\"\r\n                style=\"position: relative\"\r\n                [ngClass]=\"getTDClassMap(field, data, fi)\">\r\n\r\n              <ng-container *ngIf=\"isCeldTypeTemplateRef(field)\">\r\n                <ng-container *ngIf=\"data[field.property]\">\r\n                  <ng-container *ngTemplateOutlet=\"data[field.property].ref; context: data[field.property].context\"></ng-container>\r\n                </ng-container>\r\n              </ng-container>\r\n\r\n              <ng-container *ngIf=\"isCeldTypeDefault(field)\">\r\n                <ng-container *ngIf=\"editId !== data[config.fieldId]; else editTpl\">\r\n                  <div class=\"expandable-table-td-content\">\r\n                    {{ data[field.property] }}\r\n                  </div>\r\n                </ng-container>\r\n                <ng-template #editTpl>\r\n                  <input bps-input\r\n                         #inputElement\r\n                         [(ngModel)]=\"data[field.property]\"\r\n                         class=\"bps-editable-cell-input\"\r\n                         (click)=\"preventDefault($event)\"\r\n                         (keyup)=\"endEditMode($event, i, data)\" />\r\n                </ng-template>\r\n              </ng-container>\r\n\r\n              <ng-container *ngIf=\"!fi\">\r\n                <span class=\"bps-table-expandable-panel-menu-pencil\"\r\n                      [class.bps-table-expandable-panel-menu-pencil-disabled]=\"!isNull(data.editable) && !data.editable\"\r\n                      (click)=\"startEdit(data, $event)\"></span>\r\n              </ng-container>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n\r\n      </tbody>\r\n    </nz-table>\r\n  </div>\r\n\r\n  <div class=\"bps-table-expandable-panel-preview-wrapper\">\r\n    <div class=\"bps-table-expandable-panel-preview\">\r\n      <ng-container [ngTemplateOutlet]=\"currentPreviewTemplate\"></ng-container>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  AfterViewInit,\r\n  TemplateRef,\r\n  ViewChild,\r\n  TrackByFunction,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  ElementRef,\r\n  HostListener,\r\n  ChangeDetectionStrategy,\r\n} from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil, window } from 'rxjs/operators';\r\n\r\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\r\nimport { TableConfig, Field } from '../core/interfaces/grid-config';\r\nimport { BpsInputDirective } from '../bps-input/bps-input.directive';\r\nimport { CeldType, CheckboxSelect } from '../bps-table/bps-table.component';\r\nimport { InputBoolean, InputNumber } from 'ng-zorro-antd/core/util';\r\nimport { NzTableComponent } from 'ng-zorro-antd/table';\r\n\r\n@Component({\r\n  // tslint:disable-next-line: component-selector\r\n  selector: 'bps-table-expandable-panel',\r\n  exportAs: 'bpsTableExpandablePanel',\r\n  templateUrl: './bps-table-expandable-panel.component.html',\r\n  styleUrls: ['./bps-table-expandable-panel.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n// tslint:disable-next-line no-any\r\nexport class BpsTableExpandablePanelComponent<T = any> implements OnInit, OnDestroy, AfterViewInit, OnChanges {\r\n  locale: any = {}; // tslint:disable-line:no-any\r\n  private destroy$ = new Subject<void>();\r\n  checkboxCache: CheckboxSelect[] = [];\r\n  mapOfExpandData: { [key: string]: boolean } = {};\r\n  _data = [];\r\n  editId = null;\r\n  isExpanded = false;\r\n  searchBoxHovered = false;\r\n  private _searchSubject: Subject<string> = new Subject();\r\n\r\n  /* Table API */ \r\n  // tslint:disable-next-line: no-input-rename\r\n  @Input()\r\n  set data(data) {\r\n    this._data = data;\r\n    this.updateCheckboxCache();\r\n  }\r\n  @Input() @InputBoolean() frontPagination = false;\r\n  @Input() total = 0;\r\n  @Input() pageIndex = 1;\r\n  @Input() pageSize = 10;\r\n  @Input() @InputBoolean() showPagination = false;\r\n  @Input() paginationPosition: 'top' | 'bottom' | 'both' = 'bottom';\r\n  @Input() @InputBoolean() bordered = false;\r\n  @Input() widthConfig: string[] = [];\r\n  @Input() @InputBoolean() loading = false;\r\n  @Input() loadingDelay = 0;\r\n  @Input() loadingIndicator: TemplateRef<void>;\r\n  @Input() scroll: { x?: string | null; y?: string | null } = { x: null, y: null };\r\n  @Input() title: string | TemplateRef<void>;\r\n  @Input() footer: string | TemplateRef<void>;\r\n  @Input() noResult: string | TemplateRef<void>;\r\n  @Input() pageSizeOptions = [10, 20, 30, 40, 50];\r\n  @Input() @InputBoolean() showQuickJumper = false;\r\n  @Input() @InputBoolean() showSizeChanger = false;\r\n  @Input() showTotal: TemplateRef<{ $implicit: number; range: [number, number] }>;\r\n  @Input() @InputBoolean() hideOnSinglePage = false;\r\n  @Input() @InputBoolean() simple = false;\r\n  @Input() @InputBoolean() virtualScroll = false;\r\n  @Input() @InputNumber() virtualItemSize = 0;\r\n  @Input() @InputNumber() virtualMaxBufferPx = 200;\r\n  @Input() @InputNumber() virtualMinBufferPx = 100;\r\n  @Input() virtualForTrackBy: TrackByFunction<T>;\r\n  @Input() @InputBoolean() inlineEdit = false;\r\n  @Output() pageIndexChange = new EventEmitter<any>();\r\n  @Output() currentPageDataChange = new EventEmitter<any>();\r\n  @Output() queryParamsChange = new EventEmitter<any>();\r\n  @Output() pageSizeChange = new EventEmitter<any>();\r\n  @Output() onclickRow = new EventEmitter<any>();\r\n  @Output() ondblclickRow = new EventEmitter<any>();\r\n  @Output() selectionChange = new EventEmitter<any>();\r\n\r\n/* Thead API */\r\n  @Input() singleSort = true;\r\n  @Output() sortChange = new EventEmitter<any>();\r\n  \r\n  /* BPS API */ \r\n  @Input() config: TableConfig;\r\n  @Output() configChange: EventEmitter<TableConfig> = new EventEmitter<TableConfig>();\r\n  @Input() gridID: string;\r\n  @Output() onedit = new EventEmitter<any>();\r\n  @Input() menuTemplate: TemplateRef<void>;\r\n  @Input() currentPreviewTemplate: TemplateRef<void>;\r\n\r\n  @ViewChild(BpsInputDirective, { static: false, read: ElementRef }) inputElement: ElementRef;\r\n  @ViewChild('gridComponent', { read: NzTableComponent, static: false }) gridComponent: NzTableComponent<any>;\r\n  @ViewChild('bpsExpandablePanel', { read: ElementRef, static: false }) panel: ElementRef;\r\n\r\n  @HostListener('window:mouseup', ['$event'])\r\n  handleClick(e: MouseEvent): void {\r\n    if (this.editId !== null && this.inputElement && !this.inputElement.nativeElement.isEqualNode(e.target)) {\r\n      this.emitOnEditEvent();\r\n      this.editId = null;\r\n      this.cdr.detectChanges();\r\n    }\r\n  }\r\n\r\n  emitOnEditEvent() {\r\n    let editedEl = this._data.filter(el => el[this.config.fieldId] === this.editId);\r\n    if (editedEl.length) {\r\n      this.onedit.emit(editedEl);\r\n    }\r\n  }\r\n\r\n  endEditMode($event: KeyboardEvent, index: number, data: any = null) {\r\n    if ($event.key === ('Enter' || 'enter')) {\r\n      this.emitOnEditEvent();\r\n      this.editId = null;\r\n      this.cdr.detectChanges();\r\n    }\r\n  }\r\n\r\n  preventDefault($event: MouseEvent) {\r\n    $event.preventDefault();\r\n    $event.stopImmediatePropagation();\r\n  }\r\n\r\n  emitBpsEvent($event, type: string) {\r\n    switch (type) {\r\n      case 'pageIndex':\r\n        this.pageIndexChange.emit($event);\r\n        break;\r\n      case 'currentPageData':\r\n        this.currentPageDataChange.emit($event);\r\n        break;\r\n      case 'queryParams':\r\n        this.queryParamsChange.emit($event);\r\n        break;\r\n      case 'pageSize':\r\n        this.pageSizeChange.emit($event);\r\n        break;\r\n    }\r\n  }\r\n\r\n  getFields(): Field[] {\r\n    return this.config ? this.config.fields.filter(item => item.hidden === undefined || !item.hidden) : [];\r\n  }\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private i18n: NzI18nService\r\n  ) {  }\r\n\r\n  ngAfterViewInit() {\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.data && this.config) {\r\n      this.updateCheckboxCache();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\r\n      this.locale = this.i18n.getLocaleData('Table');\r\n      this.cdr.markForCheck();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n    this._searchSubject.unsubscribe();\r\n  }\r\n\r\n  isCeldTypeTemplateRef(field: Field) {\r\n    return field.celdType === CeldType.TemplateRef;\r\n  }\r\n\r\n  isCeldTypeDefault(field: Field) {\r\n    return field.celdType === CeldType.Default;\r\n  }\r\n\r\n  getTDClassMap(field: Field, data, fi = 9999) {\r\n    return {\r\n      ...field.ngClass,\r\n      ['bps-td-expandable-panel']: true,\r\n      ['bps-td-disabled']: data.disabled,\r\n      ['bps-td-no-padding']: data[this.config.fieldId] === this.editId,\r\n      ['bps-fst-column']: !fi,\r\n    }\r\n  }\r\n\r\n  isRowSelected(data: any): boolean {\r\n    if (this.config) {\r\n      const dataSelected = this.checkboxCache.filter(item => item.selected).map(item => item.data[this.config.fieldId]);\r\n      return dataSelected.indexOf(data[this.config.fieldId]) !== -1;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  updateCheckboxCache(): void {\r\n    this.checkboxCache.length = 0;\r\n    this._data.forEach(item => {\r\n      this.checkboxCache.push({\r\n        selected: item.selected ? item.selected : false,\r\n        data: item\r\n      });\r\n    });\r\n  }\r\n\r\n  clicks = 0;\r\n  clickRow(event: MouseEvent, data: any) {\r\n    event.preventDefault();\r\n    event.stopImmediatePropagation();\r\n    this.clicks++;\r\n    setTimeout(() => {\r\n      if (this.clicks === 1) {\r\n        this.selectRow(data);\r\n      } else if (this.clicks === 2) {\r\n        this.ondblclickRow.emit(data);\r\n      }\r\n      this.clicks = 0;\r\n    }, 300);\r\n  }\r\n\r\n  startEdit(data: any, event: MouseEvent): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    if (this.inlineEdit && !data.disabled && (this.isNull(data.editable) || data.editable)) {\r\n      this.editId = data[this.config.fieldId];\r\n      this.cdr.detectChanges();\r\n      this.inputElement.nativeElement.focus();\r\n      setTimeout(() => {\r\n        this.inputElement.nativeElement.select();\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  isNull(value: any) {\r\n    return value === null || value === undefined;\r\n  }\r\n\r\n  selectText($event) {\r\n    $event.target.select();\r\n  }\r\n\r\n  selectRow(data: any) {\r\n    if (!data.disabled) {\r\n      this.onclickRow.emit(data);\r\n      this.checkboxCache.forEach(item => {\r\n        if (item.data[this.config.fieldId] === data[this.config.fieldId]) {\r\n          item.selected = true;\r\n          this.selectionChange.emit(item);\r\n        } else {\r\n          item.selected = false;\r\n        }\r\n      });\r\n    }  \r\n  }\r\n\r\n}\r\n","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n  ChangeDetectionStrategy,\r\n  Input,\r\n  EventEmitter,\r\n  Output,\r\n  AfterViewInit,\r\n} from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\r\n\r\n@Component({\r\n  // tslint:disable-next-line: component-selector\r\n  selector: 'bps-configuration-selector',\r\n  exportAs: 'bpsConfigurationSelector',\r\n  templateUrl: './bps-configuration-selector.component.html',\r\n  styleUrls: ['./bps-configuration-selector.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n// tslint:disable-next-line no-any\r\nexport class BpsConfigurationSelectorComponent<T = any> implements OnInit, OnDestroy, AfterViewInit {\r\n  \r\n  private destroy$ = new Subject<void>();\r\n  currentDisplayedDataIndex = null;\r\n  _data = [];\r\n  _currentDisplayedData = null;\r\n\r\n  @Input()\r\n  set currentDisplayedData(value) {\r\n    this._currentDisplayedData = value;\r\n    this.currentDisplayedDataIndex = this.getCurrentElementIndex();\r\n  };\r\n\r\n  @Input() propertyName = '';\r\n  @Input() @InputBoolean() disabled = false;\r\n  @Output() currentDisplayedDataChange: EventEmitter<any> = new EventEmitter<any>();\r\n  @Input()\r\n  set data(data) {\r\n    this._data = data;\r\n    if (this._data.length) {\r\n      if (!this.currentDisplayedData) {\r\n        this._currentDisplayedData = this._data[0];\r\n        this.currentDisplayedDataIndex = 0;\r\n      } else {\r\n        this.currentDisplayedDataIndex = this.getCurrentElementIndex();\r\n      }\r\n    }\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef\r\n  ) {  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  getCurrentElementIndex() {\r\n    for (let i = 0; i < this._data.length; i++) {\r\n      if (this._data[i] === this._currentDisplayedData) {\r\n        return i;\r\n      }\r\n    }\r\n  }\r\n\r\n  getPrevElement() {\r\n    if (this.currentDisplayedDataIndex && !this.disabled) {\r\n      this.currentDisplayedDataIndex--;\r\n      this._currentDisplayedData = this._data[this.currentDisplayedDataIndex];\r\n      this.currentDisplayedDataChange.emit(this._currentDisplayedData);\r\n    }\r\n  }\r\n\r\n  getNextElement() {\r\n    if (this.currentDisplayedDataIndex + 1 < this._data.length && !this.disabled) {\r\n      this.currentDisplayedDataIndex++;\r\n      this._currentDisplayedData = this._data[this.currentDisplayedDataIndex];\r\n      this.currentDisplayedDataChange.emit(this._currentDisplayedData);\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"bps-configuration-selector-left-arrow\"\r\n     [class.bps-configuration-selector-left-arrow-disabled]=\"!currentDisplayedDataIndex || disabled\"\r\n     (click)=\"getPrevElement()\"></div>\r\n\r\n<div class=\"bps-configuration-selector-wrapper\"\r\n     [class.bps-configuration-selector-wrapper-disabled]=\"disabled\">\r\n  <div class=\"bps-configuration-selector-inner\"\r\n       [class.bps-configuration-selector-inner-disabled]=\"_currentDisplayedData && _currentDisplayedData.disabled\">\r\n    {{_currentDisplayedData && propertyName ? _currentDisplayedData[propertyName] : ' '}}\r\n  </div>\r\n</div>\r\n\r\n<div class=\"bps-configuration-selector-right-arrow\"\r\n     (click)=\"getNextElement()\"\r\n     [class.bps-configuration-selector-right-arrow-disabled]=\"currentDisplayedDataIndex + 1 === _data.length || disabled\"></div>\r\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector: 'a[bps-dropdown]',\n  host: {\n    class: 'ant-dropdown-link'\n  }\n})\nexport class BpsDropDownADirective {\n  constructor() { }\n}\n","import { AnimationEvent } from '@angular/animations';\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Host,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Renderer2,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { slideMotion } from 'ng-zorro-antd/core/animation';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\nimport { IndexableObject, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { MenuService, NzIsMenuInsideDropDownToken } from 'ng-zorro-antd/menu';\nimport { getPlacementName } from '../core/overlay/overlay-position';\r\n\nexport type NzPlacementType = 'bottomLeft' | 'bottomCenter' | 'bottomRight' | 'topLeft' | 'topCenter' | 'topRight';\n\n@Component({\n  selector: `bps-dropdown-menu`,\n  exportAs: `bpsDropdownMenu`,\n  animations: [slideMotion],\n  providers: [\n    MenuService,\n    /** menu is inside dropdown-menu component **/\n    {\n      provide: NzIsMenuInsideDropDownToken,\n      useValue: true\n    }\n  ],\n  template: `\n    <ng-template>\n      <div\n        class=\"ant-dropdown bps-dropdown\"\n        [class.ant-dropdown-placement-bottomLeft]=\"bpsPlacement === 'bottomLeft'\"\n        [class.ant-dropdown-placement-bottomCenter]=\"bpsPlacement === 'bottomCenter'\"\n        [class.ant-dropdown-placement-bottomRight]=\"bpsPlacement === 'bottomRight'\"\n        [class.ant-dropdown-placement-topLeft]=\"bpsPlacement === 'topLeft'\"\n        [class.ant-dropdown-placement-topCenter]=\"bpsPlacement === 'topCenter'\"\n        [class.ant-dropdown-placement-topRight]=\"bpsPlacement === 'topRight'\"\n        [class.ant-dropdown-placement-rightTop]=\"bpsPlacement === 'rightTop'\"\n        [class.ant-dropdown-rtl]=\"dir === 'rtl'\"\n        [ngClass]=\"bpsOverlayClassName\"\n        [ngStyle]=\"bpsOverlayStyle\"\n        @slideMotion\n        (@slideMotion.done)=\"onAnimationEvent($event)\"\n        [@.disabled]=\"!!noAnimation?.nzNoAnimation\"\n        [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n        (mouseenter)=\"setMouseState(true)\"\n        (mouseleave)=\"setMouseState(false)\"\n      >\n        <ng-content></ng-content>\n      </div>\n    </ng-template>\n  `,\n  styleUrls: ['./bps-dropdown-menu.component.css'],\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BpsDropdownMenuComponent implements AfterContentInit, OnDestroy, OnInit {\n  mouseState$ = new BehaviorSubject<boolean>(false);\n  isChildSubMenuOpen$ = this.nzMenuService.isChildSubMenuOpen$;\n  descendantMenuItemClick$ = this.nzMenuService.descendantMenuItemClick$;\n  animationStateChange$ = new EventEmitter<AnimationEvent>();\n  bpsOverlayClassName: string = '';\n  bpsOverlayStyle: IndexableObject = {};\n  @ViewChild(TemplateRef, { static: true }) templateRef!: TemplateRef<NzSafeAny>;\n\n  bpsPlacement = '';\n\n  dir: Direction = 'ltr';\n  private destroy$ = new Subject<void>();\n\n  onAnimationEvent(event: AnimationEvent): void {\n    this.animationStateChange$.emit(event);\n  }\n\n  setMouseState(visible: boolean): void {\n    this.mouseState$.next(visible);\n  }\n\n  setValue<T extends keyof BpsDropdownMenuComponent>(key: T, value: this[T]): void {\n    this[key] = value;\n    this.cdr.markForCheck();\n  }\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    public viewContainerRef: ViewContainerRef,\n    public nzMenuService: MenuService,\n    @Optional() private directionality: Directionality,\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective\n  ) {}\n  ngOnInit(): void {\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n\n    this.dir = this.directionality.value;\n  }\n\n  ngAfterContentInit(): void {\n    this.renderer.removeChild(this.renderer.parentNode(this.elementRef.nativeElement), this.elementRef.nativeElement);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import { warnDeprecation } from 'ng-zorro-antd/core/logger';\nimport { NzTreeNodeBaseComponent } from './nz-tree-base.definitions';\nimport { NzTreeBaseService } from './nz-tree-base.service';\n\nexport interface NzTreeNodeOptions {\n  title: string;\n  key: string;\n  icon?: string;\n  isLeaf?: boolean;\n  checked?: boolean;\n  selected?: boolean;\n  selectable?: boolean;\n  disabled?: boolean;\n  disableCheckbox?: boolean;\n  expanded?: boolean;\n  children?: NzTreeNodeOptions[];\n\n  // tslint:disable-next-line:no-any\n  [key: string]: any;\n}\n\nexport class NzTreeNode {\n  private _title: string;\n  key: string;\n  level: number = 0;\n  origin: NzTreeNodeOptions;\n  // Parent Node\n  parentNode: NzTreeNode | null;\n  private _icon: string;\n  private _children: NzTreeNode[];\n  private _isLeaf: boolean;\n  private _isChecked: boolean;\n  /**\n   * @deprecated Maybe removed in next major version, use isChecked instead\n   */\n  private _isAllChecked: boolean;\n  private _isSelectable: boolean;\n  private _isDisabled: boolean;\n  private _isDisableCheckbox: boolean;\n  private _isExpanded: boolean;\n  private _isHalfChecked: boolean;\n  private _isSelected: boolean;\n  private _isLoading: boolean;\n  canHide: boolean;\n  isMatched: boolean;\n\n  service: NzTreeBaseService | null;\n  component: NzTreeNodeBaseComponent;\n\n  get treeService(): NzTreeBaseService | null {\n    return this.service || (this.parentNode && this.parentNode.treeService);\n  }\n\n  constructor(\n    option: NzTreeNodeOptions | NzTreeNode,\n    parent: NzTreeNode | null = null,\n    service: NzTreeBaseService | null = null\n  ) {\n    if (option instanceof NzTreeNode) {\n      return option;\n    }\n    this.service = service || null;\n    this.origin = option;\n    this.key = option.key;\n    this.parentNode = parent;\n    this._title = option.title || '---';\n    this._icon = option.icon || '';\n    this._isLeaf = option.isLeaf || false;\n    this._children = [];\n    // option params\n    this._isChecked = option.checked || false;\n    this._isSelectable = option.disabled || option.selectable !== false;\n    this._isDisabled = option.disabled || false;\n    this._isDisableCheckbox = option.disableCheckbox || false;\n    this._isExpanded = option.isLeaf ? false : option.expanded || false;\n    this._isHalfChecked = false;\n    this._isSelected = (!option.disabled && option.selected) || false;\n    this._isLoading = false;\n    this.isMatched = false;\n\n    /**\n     * parent's checked status will affect children while initializing\n     */\n    if (parent) {\n      this.level = parent.level + 1;\n    } else {\n      this.level = 0;\n    }\n    if (typeof option.children !== 'undefined' && option.children !== null) {\n      option.children.forEach(nodeOptions => {\n        const s = this.treeService;\n        if (\n          s &&\n          !s.isCheckStrictly &&\n          option.checked &&\n          !option.disabled &&\n          !nodeOptions.disabled &&\n          !nodeOptions.disableCheckbox\n        ) {\n          nodeOptions.checked = option.checked;\n        }\n        this._children.push(new NzTreeNode(nodeOptions, this));\n      });\n    }\n  }\n\n  /**\n   * auto generate\n   * get\n   * set\n   */\n  get title(): string {\n    return this._title;\n  }\n\n  set title(value: string) {\n    this._title = value;\n    this.update();\n  }\n\n  get icon(): string {\n    return this._icon;\n  }\n\n  set icon(value: string) {\n    this._icon = value;\n    this.update();\n  }\n\n  get children(): NzTreeNode[] {\n    return this._children;\n  }\n\n  set children(value: NzTreeNode[]) {\n    this._children = value;\n    this.update();\n  }\n\n  get isLeaf(): boolean {\n    return this._isLeaf;\n  }\n\n  set isLeaf(value: boolean) {\n    this._isLeaf = value;\n    this.update();\n  }\n\n  get isChecked(): boolean {\n    return this._isChecked;\n  }\n\n  set isChecked(value: boolean) {\n    this._isChecked = value;\n    this._isAllChecked = value;\n    this.origin.checked = value;\n    this.afterValueChange('isChecked');\n  }\n\n  get isAllChecked(): boolean {\n    return this._isAllChecked;\n  }\n\n  /**\n   * @deprecated Maybe removed in next major version, use `isChecked` instead.\n   */\n  set isAllChecked(value: boolean) {\n    warnDeprecation(`'isAllChecked' is going to be removed in 9.0.0. Please use 'isChecked' instead.`);\n    this._isAllChecked = value;\n  }\n\n  get isHalfChecked(): boolean {\n    return this._isHalfChecked;\n  }\n\n  set isHalfChecked(value: boolean) {\n    this._isHalfChecked = value;\n    this.afterValueChange('isHalfChecked');\n  }\n\n  get isSelectable(): boolean {\n    return this._isSelectable;\n  }\n\n  set isSelectable(value: boolean) {\n    this._isSelectable = value;\n    this.update();\n  }\n\n  get isDisabled(): boolean {\n    return this._isDisabled;\n  }\n\n  set isDisabled(value: boolean) {\n    this._isDisabled = value;\n    this.update();\n  }\n\n  get isDisableCheckbox(): boolean {\n    return this._isDisableCheckbox;\n  }\n\n  set isDisableCheckbox(value: boolean) {\n    this._isDisableCheckbox = value;\n    this.update();\n  }\n\n  get isExpanded(): boolean {\n    return this._isExpanded;\n  }\n\n  set isExpanded(value: boolean) {\n    this._isExpanded = value;\n    this.origin.expanded = value;\n    this.afterValueChange('isExpanded');\n  }\n\n  get isSelected(): boolean {\n    return this._isSelected;\n  }\n\n  set isSelected(value: boolean) {\n    this._isSelected = value;\n    this.origin.selected = value;\n    this.afterValueChange('isSelected');\n  }\n\n  get isLoading(): boolean {\n    return this._isLoading;\n  }\n\n  set isLoading(value: boolean) {\n    this._isLoading = value;\n    this.update();\n  }\n\n  public setSyncChecked(checked: boolean = false, halfChecked: boolean = false): void {\n    this.setChecked(checked, halfChecked);\n    if (this.treeService && !this.treeService.isCheckStrictly) {\n      this.treeService.conduct(this);\n    }\n  }\n\n  /**\n   * @deprecated Maybe removed in next major version, use `isChecked` instead.\n   */\n  public setChecked(checked: boolean = false, halfChecked: boolean = false): void {\n    warnDeprecation(`'setChecked' is going to be removed in 9.0.0. Please use 'isChecked' instead.`);\n    this.origin.checked = checked;\n    this.isChecked = checked;\n    this.isAllChecked = checked;\n    this.isHalfChecked = halfChecked;\n  }\n\n  /**\n   * @deprecated Maybe removed in next major version, use `isExpanded` instead.\n   */\n  public setExpanded(value: boolean): void {\n    warnDeprecation(`'setExpanded' is going to be removed in 9.0.0. Please use 'isExpanded' instead.`);\n    this.isExpanded = value;\n  }\n\n  /**\n   * @deprecated Maybe removed in next major version, use `isSelected` instead.\n   */\n  public setSelected(value: boolean): void {\n    warnDeprecation(`'setSelected' is going to be removed in 9.0.0. Please use 'isExpanded' isSelected.`);\n    if (this.isDisabled) {\n      return;\n    }\n    this.isSelected = value;\n  }\n\n  public getParentNode(): NzTreeNode | null {\n    return this.parentNode;\n  }\n\n  public getChildren(): NzTreeNode[] {\n    return this.children;\n  }\n\n  /**\n   * Support appending child nodes by position. Leaf node cannot be appended.\n   */\n  // tslint:disable-next-line:no-any\n  public addChildren(children: any[], childPos: number = -1): void {\n    if (!this.isLeaf) {\n      children.forEach(node => {\n        const refreshLevel = (n: NzTreeNode) => {\n          n.getChildren().forEach(c => {\n            c.level = c.getParentNode()!.level + 1;\n            // flush origin\n            c.origin.level = c.level;\n            refreshLevel(c);\n          });\n        };\n        let child = node;\n        if (child instanceof NzTreeNode) {\n          child.parentNode = this;\n        } else {\n          child = new NzTreeNode(node, this);\n        }\n        child.level = this.level + 1;\n        child.origin.level = child.level;\n        refreshLevel(child);\n        try {\n          childPos === -1 ? this.children.push(child) : this.children.splice(childPos, 0, child);\n          // flush origin\n        } catch (e) {}\n      });\n      this.origin.children = this.getChildren().map(v => v.origin);\n      // remove loading state\n      this.isLoading = false;\n    }\n  }\n\n  public clearChildren(): void {\n    // refresh checked state\n    this.afterValueChange('clearChildren');\n    this.children = [];\n    this.origin.children = [];\n  }\n\n  public remove(): void {\n    const parentNode = this.getParentNode();\n    if (parentNode) {\n      parentNode.children = parentNode.getChildren().filter(v => v.key !== this.key);\n      parentNode.origin.children = parentNode.origin.children!.filter(v => v.key !== this.key);\n      this.afterValueChange('remove');\n    }\n  }\n\n  public afterValueChange(key: string): void {\n    if (this.treeService) {\n      switch (key) {\n        case 'isChecked':\n          this.treeService.setCheckedNodeList(this);\n          break;\n        case 'isHalfChecked':\n          this.treeService.setHalfCheckedNodeList(this);\n          break;\n        case 'isExpanded':\n          this.treeService.setExpandedNodeList(this);\n          break;\n        case 'isSelected':\n          this.treeService.setNodeActive(this);\n          break;\n        case 'clearChildren':\n          this.treeService.afterRemove(this.getChildren());\n          break;\n        case 'remove':\n          this.treeService.afterRemove([this]);\n          break;\n      }\n    }\n    this.update();\n  }\n\n  public update(): void {\n    if (this.component) {\n      this.component.setClassMap();\n      this.component.markForCheck();\n    }\n  }\n}\n","import { NzTreeNode } from './nz-tree-base-node';\nimport { NzTreeBaseService } from './nz-tree-base.service';\n\nexport class NzTreeBase {\n  constructor(public nzTreeService: NzTreeBaseService) {}\n\n  /**\n   * Coerces a value({@link any[]}) to a TreeNodes({@link NzTreeNode[]})\n   */\n  coerceTreeNodes(\n    // tslint:disable-next-line:no-any\n    value: any[]\n  ): NzTreeNode[] {\n    let nodes: NzTreeNode[] = [];\n    if (!this.nzTreeService.isArrayOfNzTreeNode(value)) {\n      // has not been new NzTreeNode\n      nodes = value.map(item => new NzTreeNode(item, null, this.nzTreeService));\n    } else {\n      nodes = value.map((item: NzTreeNode) => {\n        item.service = this.nzTreeService;\n        return item;\n      });\n    }\n    return nodes;\n  }\n\n  /**\n   * Get all nodes({@link NzTreeNode})\n   */\n  getTreeNodes(): NzTreeNode[] {\n    return this.nzTreeService.rootNodes;\n  }\n\n  /**\n   * Get {@link NzTreeNode} with key\n   */\n  getTreeNodeByKey(key: string): NzTreeNode | null {\n    // flat tree nodes\n    const nodes: NzTreeNode[] = [];\n    const getNode = (node: NzTreeNode): void => {\n      nodes.push(node);\n      node.getChildren().forEach(n => {\n        getNode(n);\n      });\n    };\n    this.getTreeNodes().forEach(n => {\n      getNode(n);\n    });\n    return nodes.find(n => n.key === key) || null;\n  }\n\n  /**\n   * Get checked nodes(merged)\n   */\n  getCheckedNodeList(): NzTreeNode[] {\n    return this.nzTreeService.getCheckedNodeList();\n  }\n\n  /**\n   * Get selected nodes\n   */\n  getSelectedNodeList(): NzTreeNode[] {\n    return this.nzTreeService.getSelectedNodeList();\n  }\n\n  /**\n   * Get half checked nodes\n   */\n  getHalfCheckedNodeList(): NzTreeNode[] {\n    return this.nzTreeService.getHalfCheckedNodeList();\n  }\n\n  /**\n   * Get expanded nodes\n   */\n  getExpandedNodeList(): NzTreeNode[] {\n    return this.nzTreeService.getExpandedNodeList();\n  }\n\n  /**\n   * Get matched nodes(if nzSearchValue is not null)\n   */\n  getMatchedNodeList(): NzTreeNode[] {\n    return this.nzTreeService.getMatchedNodeList();\n  }\n}\n","import { NzTreeNode } from './nz-tree-base-node';\n\nexport function isCheckDisabled(node: NzTreeNode): boolean {\n  const { isDisabled, isDisableCheckbox } = node;\n  return !!(isDisabled || isDisableCheckbox);\n}\n\n// tslint:disable-next-line:no-any\nexport function isInArray(needle: any, haystack: any[]): boolean {\n  return haystack.length > 0 && haystack.indexOf(needle) > -1;\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport { isNotNil } from 'ng-zorro-antd/core/util';\n\nimport { NzTreeNode } from './nz-tree-base-node';\nimport { isCheckDisabled, isInArray } from './nz-tree-base-util';\nimport { NzFormatEmitEvent } from './nz-tree-base.definitions';\n\n@Injectable()\nexport class NzTreeBaseService implements OnDestroy {\n  DRAG_SIDE_RANGE = 0.25;\n  DRAG_MIN_GAP = 2;\n\n  isCheckStrictly: boolean = false;\n  isMultiple: boolean = false;\n  selectedNode: NzTreeNode;\n  rootNodes: NzTreeNode[] = [];\n  selectedNodeList: NzTreeNode[] = [];\n  expandedNodeList: NzTreeNode[] = [];\n  checkedNodeList: NzTreeNode[] = [];\n  halfCheckedNodeList: NzTreeNode[] = [];\n  matchedNodeList: NzTreeNode[] = [];\n  triggerEventChange$ = new Subject<NzFormatEmitEvent>();\n\n  /**\n   * trigger event\n   */\n  eventTriggerChanged(): Observable<NzFormatEmitEvent> {\n    return this.triggerEventChange$.asObservable();\n  }\n\n  /**\n   * reset tree nodes will clear default node list\n   */\n  initTree(nzNodes: NzTreeNode[]): void {\n    this.rootNodes = nzNodes;\n    this.expandedNodeList = [];\n    this.selectedNodeList = [];\n    this.halfCheckedNodeList = [];\n    this.checkedNodeList = [];\n    this.matchedNodeList = [];\n    // refresh node checked state\n    setTimeout(() => {\n      this.refreshCheckState(this.isCheckStrictly);\n    });\n  }\n\n  getSelectedNode(): NzTreeNode | null {\n    return this.selectedNode;\n  }\n\n  /**\n   * get some list\n   */\n  getSelectedNodeList(): NzTreeNode[] {\n    return this.conductNodeState('select');\n  }\n\n  /**\n   * return checked nodes\n   */\n  getCheckedNodeList(): NzTreeNode[] {\n    return this.conductNodeState('check');\n  }\n\n  getHalfCheckedNodeList(): NzTreeNode[] {\n    return this.conductNodeState('halfCheck');\n  }\n\n  /**\n   * return expanded nodes\n   */\n  getExpandedNodeList(): NzTreeNode[] {\n    return this.conductNodeState('expand');\n  }\n\n  /**\n   * return search matched nodes\n   */\n  getMatchedNodeList(): NzTreeNode[] {\n    return this.conductNodeState('match');\n  }\n\n  // tslint:disable-next-line:no-any\n  isArrayOfNzTreeNode(value: any[]): boolean {\n    return value.every(item => item instanceof NzTreeNode);\n  }\n\n  /**\n   * reset selectedNodeList\n   */\n  calcSelectedKeys(selectedKeys: string[], nzNodes: NzTreeNode[], isMulti: boolean = false): void {\n    const calc = (nodes: NzTreeNode[]): boolean => {\n      return nodes.every(node => {\n        if (isInArray(node.key, selectedKeys)) {\n          node.isSelected = true;\n          if (!isMulti) {\n            // if not support multi select\n            return false;\n          }\n        } else {\n          node.isSelected = false;\n        }\n        if (node.children.length > 0) {\n          // Recursion\n          return calc(node.children);\n        }\n        return true;\n      });\n    };\n    calc(nzNodes);\n  }\n\n  /**\n   * reset expandedNodeList\n   */\n  calcExpandedKeys(expandedKeys: string[], nzNodes: NzTreeNode[]): void {\n    this.expandedNodeList = [];\n    const calc = (nodes: NzTreeNode[]) => {\n      nodes.forEach(node => {\n        node.isExpanded = isInArray(node.key, expandedKeys);\n        if (node.children.length > 0) {\n          calc(node.children);\n        }\n      });\n    };\n    calc(nzNodes);\n  }\n\n  /**\n   * reset checkedNodeList\n   */\n  calcCheckedKeys(checkedKeys: string[], nzNodes: NzTreeNode[], isCheckStrictly: boolean = false): void {\n    this.checkedNodeList = [];\n    this.halfCheckedNodeList = [];\n    const calc = (nodes: NzTreeNode[]) => {\n      nodes.forEach(node => {\n        if (isInArray(node.key, checkedKeys)) {\n          node.isChecked = true;\n          node.isHalfChecked = false;\n        } else {\n          node.isChecked = false;\n          node.isHalfChecked = false;\n        }\n        if (node.children.length > 0) {\n          calc(node.children);\n        }\n      });\n    };\n    calc(nzNodes);\n    // controlled state\n    this.refreshCheckState(isCheckStrictly);\n  }\n\n  /**\n   * set drag node\n   */\n  setSelectedNode(node: NzTreeNode): void {\n    this.selectedNode = node;\n  }\n\n  /**\n   * set node selected status\n   */\n  setNodeActive(node: NzTreeNode): void {\n    if (!this.isMultiple && node.isSelected) {\n      this.selectedNodeList.forEach(n => {\n        if (node.key !== n.key) {\n          // reset other nodes\n          n.isSelected = false;\n        }\n      });\n      // single mode: remove pre node\n      this.selectedNodeList = [];\n    }\n    this.setSelectedNodeList(node, this.isMultiple);\n  }\n\n  /**\n   * add or remove node to selectedNodeList\n   */\n  setSelectedNodeList(node: NzTreeNode, isMultiple: boolean = false): void {\n    const index = this.selectedNodeList.findIndex(n => node.key === n.key);\n    if (isMultiple) {\n      if (node.isSelected && index === -1) {\n        this.selectedNodeList.push(node);\n      }\n    } else {\n      if (node.isSelected && index === -1) {\n        this.selectedNodeList = [node];\n      }\n    }\n    if (!node.isSelected) {\n      this.selectedNodeList = this.selectedNodeList.filter(n => n.key !== node.key);\n    }\n  }\n\n  /**\n   * merge checked nodes\n   */\n  setHalfCheckedNodeList(node: NzTreeNode): void {\n    const index = this.halfCheckedNodeList.findIndex(n => node.key === n.key);\n    if (node.isHalfChecked && index === -1) {\n      this.halfCheckedNodeList.push(node);\n    } else if (!node.isHalfChecked && index > -1) {\n      this.halfCheckedNodeList = this.halfCheckedNodeList.filter(n => node.key !== n.key);\n    }\n  }\n\n  setCheckedNodeList(node: NzTreeNode): void {\n    const index = this.checkedNodeList.findIndex(n => node.key === n.key);\n    if (node.isChecked && index === -1) {\n      this.checkedNodeList.push(node);\n    } else if (!node.isChecked && index > -1) {\n      this.checkedNodeList = this.checkedNodeList.filter(n => node.key !== n.key);\n    }\n  }\n\n  /**\n   * conduct checked/selected/expanded keys\n   */\n  conductNodeState(type: string = 'check'): NzTreeNode[] {\n    let resultNodesList: NzTreeNode[] = [];\n    switch (type) {\n      case 'select':\n        resultNodesList = this.selectedNodeList;\n        break;\n      case 'expand':\n        resultNodesList = this.expandedNodeList;\n        break;\n      case 'match':\n        resultNodesList = this.matchedNodeList;\n        break;\n      case 'check':\n        resultNodesList = this.checkedNodeList;\n        const isIgnore = (node: NzTreeNode): boolean => {\n          const parentNode = node.getParentNode();\n          if (parentNode) {\n            if (this.checkedNodeList.findIndex(n => n.key === parentNode.key) > -1) {\n              return true;\n            } else {\n              return isIgnore(parentNode);\n            }\n          }\n          return false;\n        };\n        // merge checked\n        if (!this.isCheckStrictly) {\n          resultNodesList = this.checkedNodeList.filter(n => !isIgnore(n));\n        }\n        break;\n      case 'halfCheck':\n        if (!this.isCheckStrictly) {\n          resultNodesList = this.halfCheckedNodeList;\n        }\n        break;\n    }\n    return resultNodesList;\n  }\n\n  /**\n   * set expanded nodes\n   */\n  setExpandedNodeList(node: NzTreeNode): void {\n    if (node.isLeaf) {\n      return;\n    }\n    const index = this.expandedNodeList.findIndex(n => node.key === n.key);\n    if (node.isExpanded && index === -1) {\n      this.expandedNodeList.push(node);\n    } else if (!node.isExpanded && index > -1) {\n      this.expandedNodeList = this.expandedNodeList.filter(n => node.key !== n.key);\n    }\n  }\n\n  /**\n   * check state\n   * @param isCheckStrictly\n   */\n  refreshCheckState(isCheckStrictly: boolean = false): void {\n    if (isCheckStrictly) {\n      return;\n    }\n    this.checkedNodeList.forEach(node => {\n      this.conduct(node);\n    });\n  }\n\n  // reset other node checked state based current node\n  conduct(node: NzTreeNode): void {\n    const isChecked = node.isChecked;\n    if (node) {\n      this.conductUp(node);\n      this.conductDown(node, isChecked);\n    }\n  }\n\n  /**\n   * 1、children half checked\n   * 2、children all checked, parent checked\n   * 3、no children checked\n   */\n  conductUp(node: NzTreeNode): void {\n    const parentNode = node.getParentNode();\n    if (parentNode) {\n      if (!isCheckDisabled(parentNode)) {\n        if (parentNode.children.every(child => isCheckDisabled(child) || (!child.isHalfChecked && child.isChecked))) {\n          parentNode.isChecked = true;\n          parentNode.isHalfChecked = false;\n        } else if (parentNode.children.some(child => child.isHalfChecked || child.isChecked)) {\n          parentNode.isChecked = false;\n          parentNode.isHalfChecked = true;\n        } else {\n          parentNode.isChecked = false;\n          parentNode.isHalfChecked = false;\n        }\n      }\n      this.setCheckedNodeList(parentNode);\n      this.setHalfCheckedNodeList(parentNode);\n      this.conductUp(parentNode);\n    }\n  }\n\n  /**\n   * reset child check state\n   */\n  conductDown(node: NzTreeNode, value: boolean): void {\n    if (!isCheckDisabled(node)) {\n      node.isChecked = value;\n      node.isHalfChecked = false;\n      this.setCheckedNodeList(node);\n      this.setHalfCheckedNodeList(node);\n      node.children.forEach(n => {\n        this.conductDown(n, value);\n      });\n    }\n  }\n\n  /**\n   * search value & expand node\n   * should add expandlist\n   */\n  searchExpand(value: string): void {\n    this.matchedNodeList = [];\n    const expandedKeys: string[] = [];\n    if (!isNotNil(value)) {\n      return;\n    }\n    // to reset expandedNodeList\n    const expandParent = (n: NzTreeNode) => {\n      // expand parent node\n      const parentNode = n.getParentNode();\n      if (parentNode) {\n        expandedKeys.push(parentNode.key);\n        expandParent(parentNode);\n      }\n    };\n    const searchChild = (n: NzTreeNode) => {\n      if (value && n.title.includes(value)) {\n        // match the node\n        n.isMatched = true;\n        this.matchedNodeList.push(n);\n        // expand parentNode\n        expandParent(n);\n      } else {\n        n.isMatched = false;\n      }\n      n.canHide = !n.isMatched;\n      n.children.forEach(child => {\n        searchChild(child);\n      });\n    };\n    this.rootNodes.forEach(child => {\n      searchChild(child);\n    });\n    // expand matched keys\n    this.calcExpandedKeys(expandedKeys, this.rootNodes);\n  }\n\n  /**\n   * flush after delete node\n   */\n  afterRemove(nodes: NzTreeNode[]): void {\n    // to reset selectedNodeList & expandedNodeList\n    const loopNode = (node: NzTreeNode) => {\n      // remove selected node\n      this.selectedNodeList = this.selectedNodeList.filter(n => n.key !== node.key);\n      // remove expanded node\n      this.expandedNodeList = this.expandedNodeList.filter(n => n.key !== node.key);\n      // remove checked node\n      this.checkedNodeList = this.checkedNodeList.filter(n => n.key !== node.key);\n      if (node.children) {\n        node.children.forEach(child => {\n          loopNode(child);\n        });\n      }\n    };\n    nodes.forEach(n => {\n      loopNode(n);\n    });\n    this.refreshCheckState(this.isCheckStrictly);\n  }\n\n  /**\n   * drag event\n   */\n  refreshDragNode(node: NzTreeNode): void {\n    if (node.children.length === 0) {\n      // until root\n      this.conductUp(node);\n    } else {\n      node.children.forEach(child => {\n        this.refreshDragNode(child);\n      });\n    }\n  }\n\n  // reset node level\n  resetNodeLevel(node: NzTreeNode): void {\n    const parentNode = node.getParentNode();\n    if (parentNode) {\n      node.level = parentNode.level + 1;\n    } else {\n      node.level = 0;\n    }\n    for (const child of node.children) {\n      this.resetNodeLevel(child);\n    }\n  }\n\n  calcDropPosition(event: DragEvent): number {\n    const { clientY } = event;\n    // to fix firefox undefined\n    const { top, bottom, height } = event.srcElement\n      ? (event.srcElement as Element).getBoundingClientRect()\n      : (event.target as Element).getBoundingClientRect();\n    const des = Math.max(height * this.DRAG_SIDE_RANGE, this.DRAG_MIN_GAP);\n\n    if (clientY <= top + des) {\n      return -1;\n    } else if (clientY >= bottom - des) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  /**\n   * drop\n   * 0: inner -1: pre 1: next\n   */\n  dropAndApply(targetNode: NzTreeNode, dragPos: number = -1): void {\n    if (!targetNode || dragPos > 1) {\n      return;\n    }\n    const treeService = targetNode.treeService;\n    const targetParent = targetNode.getParentNode();\n    const isSelectedRootNode = this.selectedNode.getParentNode();\n    // remove the dragNode\n    if (isSelectedRootNode) {\n      isSelectedRootNode.children = isSelectedRootNode.children.filter(n => n.key !== this.selectedNode.key);\n    } else {\n      this.rootNodes = this.rootNodes.filter(n => n.key !== this.selectedNode.key);\n    }\n    switch (dragPos) {\n      case 0:\n        targetNode.addChildren([this.selectedNode]);\n        this.resetNodeLevel(targetNode);\n        break;\n      case -1:\n      case 1:\n        const tIndex = dragPos === 1 ? 1 : 0;\n        if (targetParent) {\n          targetParent.addChildren([this.selectedNode], targetParent.children.indexOf(targetNode) + tIndex);\n          const parentNode = this.selectedNode.getParentNode();\n          if (parentNode) {\n            this.resetNodeLevel(parentNode);\n          }\n        } else {\n          const targetIndex = this.rootNodes.indexOf(targetNode) + tIndex;\n          // Insert root node.\n          this.rootNodes.splice(targetIndex, 0, this.selectedNode);\n          this.rootNodes[targetIndex].parentNode = null;\n          this.rootNodes[targetIndex].level = 0;\n        }\n        break;\n    }\n    // flush all nodes\n    this.rootNodes.forEach(child => {\n      if (!child.treeService) {\n        child.service = treeService;\n      }\n      this.refreshDragNode(child);\n    });\n  }\n\n  /**\n   * emit Structure\n   * eventName\n   * node\n   * event: MouseEvent / DragEvent\n   * dragNode\n   */\n  formatEvent(eventName: string, node: NzTreeNode | null, event: MouseEvent | DragEvent | null): NzFormatEmitEvent {\n    const emitStructure: NzFormatEmitEvent = {\n      eventName: eventName,\n      node: node,\n      event: event\n    };\n    switch (eventName) {\n      case 'dragstart':\n      case 'dragenter':\n      case 'dragover':\n      case 'dragleave':\n      case 'drop':\n      case 'dragend':\n        Object.assign(emitStructure, { dragNode: this.getSelectedNode() });\n        break;\n      case 'click':\n      case 'dblclick':\n        Object.assign(emitStructure, { selectedKeys: this.selectedNodeList });\n        Object.assign(emitStructure, { nodes: this.selectedNodeList });\n        Object.assign(emitStructure, { keys: this.selectedNodeList.map(n => n.key) });\n        break;\n      case 'check':\n        const checkedNodeList = this.getCheckedNodeList();\n\n        Object.assign(emitStructure, { checkedKeys: checkedNodeList });\n        Object.assign(emitStructure, { nodes: checkedNodeList });\n        Object.assign(emitStructure, { keys: checkedNodeList.map(n => n.key) });\n        break;\n      case 'search':\n        Object.assign(emitStructure, { matchedKeys: this.getMatchedNodeList() });\n        Object.assign(emitStructure, { nodes: this.getMatchedNodeList() });\n        Object.assign(emitStructure, { keys: this.getMatchedNodeList().map(n => n.key) });\n        break;\n      case 'expand':\n        Object.assign(emitStructure, { nodes: this.expandedNodeList });\n        Object.assign(emitStructure, { keys: this.expandedNodeList.map(n => n.key) });\n        break;\n    }\n    return emitStructure;\n  }\n\n  ngOnDestroy(): void {\n    this.triggerEventChange$.complete();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NzTreeBaseService } from './tree/nz-tree-base.service';\n\n@Injectable()\nexport class BpsTreeService extends NzTreeBaseService {}\n","import { InjectionToken } from '@angular/core';\n\nimport { NzTreeBaseService } from './nz-tree-base.service';\n\nexport const NzTreeHigherOrderServiceToken = new InjectionToken<NzTreeBaseService>('NzTreeHigherOrder');\n","<li\n  #dragElement\n  role=\"treeitem\"\n  [style.display]=\"displayStyle\"\n  [ngClass]=\"bpsNodeClass\">\n  <ng-container *ngIf=\"bpsShowExpand && !bpsCustomTree\">\n    <span\n      [ngClass]=\"bpsNodeSwitcherClass\"\n      (click)=\"_clickExpand($event)\">\n      <ng-container *ngIf=\"isShowSwitchIcon\">\n        <ng-container *ngIf=\"!bpsTreeNode.isLoading\">\n          <ng-template\n            *ngIf=\"isTemplateRef(bpsExpandedIcon)\"\n            [ngTemplateOutlet]=\"bpsExpandedIcon\"\n            [ngTemplateOutletContext]=\"{ $implicit: bpsTreeNode }\">\n          </ng-template>\n          <i\n            *ngIf=\"!isTemplateRef(bpsExpandedIcon)\"\n            nz-icon\n            nzType=\"caret-down\"\n            [class.ant-select-switcher-icon]=\"bpsSelectMode\"\n            [class.ant-tree-switcher-icon]=\"!bpsSelectMode\">\n          </i>\n        </ng-container>\n        <i *ngIf=\"bpsTreeNode.isLoading\" nz-icon nzType=\"loading\" [nzSpin]=\"true\" class=\"ant-tree-switcher-loading-icon\"></i>\n      </ng-container>\n      <ng-container *ngIf=\"bpsShowLine\">\n        <ng-template\n          *ngIf=\"isTemplateRef(bpsExpandedIcon)\"\n          [ngTemplateOutlet]=\"bpsExpandedIcon\"\n          [ngTemplateOutletContext]=\"{ $implicit: bpsTreeNode }\">\n        </ng-template>\n        <ng-container *ngIf=\"!isTemplateRef(bpsExpandedIcon)\">\n          <i *ngIf=\"isShowLineIcon\" nz-icon [nzType]=\"isSwitcherOpen ? 'minus-square' : 'plus-square'\" class=\"ant-tree-switcher-line-icon\"></i>\n          <i *ngIf=\"!isShowLineIcon\" nz-icon nzType=\"file\" class=\"ant-tree-switcher-line-icon\"></i>\n        </ng-container>\n      </ng-container>\n    </span>\n  </ng-container>\n  <ng-container *ngIf=\"bpsCheckable && !bpsCustomTree\">\n    <span\n      [ngClass]=\"bpsNodeCheckboxClass\"\n      (click)=\"_clickCheckBox($event)\">\n      <span [class.ant-tree-checkbox-inner]=\"!bpsSelectMode\"\n            [class.ant-select-tree-checkbox-inner]=\"bpsSelectMode\"></span>\n    </span>\n  </ng-container>\n  <ng-container *ngIf=\"!bpsTreeTemplate\">\n    <span\n      title=\"{{bpsTreeNode.title}}\"\n      [attr.draggable]=\"canDraggable\"\n      [attr.aria-grabbed]=\"canDraggable\"\n      [ngClass]=\"bpsNodeContentClass\"\n      [class.draggable]=\"canDraggable\">\n      <span\n        *ngIf=\"bpsTreeNode.icon && bpsShowIcon\"\n        [class.ant-tree-icon__open]=\"isSwitcherOpen\"\n        [class.ant-tree-icon__close]=\"isSwitcherClose\"\n        [class.ant-tree-icon_loading]=\"bpsTreeNode.isLoading\"\n        [ngClass]=\"bpsNodeContentLoadingClass\">\n        <span\n          [ngClass]=\"bpsNodeContentIconClass\">\n          <i nz-icon *ngIf=\"bpsIcon\" [nzType]=\"bpsIcon\"></i>\n        </span>\n      </span>\n      <span class=\"ant-tree-title\" *ngIf=\"!bpsCustomTree || bpsTreeNode.isLeaf\" [innerHTML]=\"bpsTreeNode.title | nzHighlight: bpsSearchValue: '' : 'font-highlight'\">\n      </span>\n      <img *ngIf=\"bpsCustomTree && !bpsTreeNode.isLeaf\" [src]=\"bpsTreeNode.title\"/>\n    </span>\n  </ng-container>\n  <ng-template\n    [ngTemplateOutlet]=\"bpsTreeTemplate\"\n    [ngTemplateOutletContext]=\"{ $implicit: bpsTreeNode }\">\n  </ng-template>\n\n  <ul\n    *ngIf=\"bpsTreeNode.isExpanded\"\n    role=\"group\"\n    class=\"ant-tree-child-tree\"\n    [class.ant-tree-child-tree-open]=\"!bpsSelectMode || bpsTreeNode.isExpanded\"\n    data-expanded=\"true\"\n    [@.disabled]=\"noAnimation?.nzNoAnimation\"\n    @treeCollapseMotion>\n    <bps-tree-node\n      *ngFor=\"let node of bpsTreeNode.getChildren()\"\n      [bpsTreeNode]=\"node\"\n      [bpsShowExpand]=\"bpsShowExpand\"\n      [@.disabled]=\"noAnimation?.nzNoAnimation\"\n      [bpsNoAnimation]=\"noAnimation?.nzNoAnimation\"\n      [bpsSelectMode]=\"bpsSelectMode\"\n      [bpsShowLine]=\"bpsShowLine\"\n      [bpsExpandedIcon]=\"bpsExpandedIcon\"\n      [bpsDraggable]=\"bpsDraggable\"\n      [bpsCheckable]=\"bpsCheckable\"\n      [bpsAsyncData]=\"bpsAsyncData\"\n      [bpsExpandAll]=\"bpsExpandAll\"\n      [bpsShowIcon]=\"bpsShowIcon\"\n      [bpsSearchValue]=\"bpsSearchValue\"\n      [bpsHideUnMatched]=\"bpsHideUnMatched\"\n      [bpsBeforeDrop]=\"bpsBeforeDrop\"\n      [bpsTreeTemplate]=\"bpsTreeTemplate\">\n    </bps-tree-node>\n  </ul>\n</li>\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  Host,\r\n  HostListener,\r\n  Input,\r\n  NgZone,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Renderer2,\r\n  TemplateRef,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { fromEvent, Observable, Subject } from 'rxjs';\r\nimport { filter, takeUntil } from 'rxjs/operators';\r\n\r\nimport {\r\n  InputBoolean,\r\n} from 'ng-zorro-antd/core/util';\r\nimport {\r\n  warnDeprecation,\r\n} from 'ng-zorro-antd/core/logger';\r\nimport {\r\n  treeCollapseMotion,\r\n} from 'ng-zorro-antd/core/animation';\r\nimport {\r\n  NzNoAnimationDirective,\r\n} from 'ng-zorro-antd/core/no-animation';\r\nimport {\r\n  NzFormatBeforeDropEvent,\r\n} from './tree/nz-tree-base.definitions';\r\nimport {\r\n  NzTreeBaseService,\r\n} from './tree/nz-tree-base.service';\r\nimport {\r\n  NzTreeNode\r\n} from './tree/nz-tree-base-node';\r\n\r\n@Component({\r\n  selector: 'bps-tree-node',\r\n  exportAs: 'bpsTreeNode',\r\n  templateUrl: './bps-tree-node.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false,\r\n  animations: [treeCollapseMotion]\r\n})\r\nexport class BpsTreeNodeComponent implements OnInit, OnChanges, OnDestroy {\r\n  @ViewChild('dragElement', { static: false }) dragElement: ElementRef;\r\n\r\n  /**\r\n   * for global property\r\n   */\r\n  @Input() bpsTreeNode: NzTreeNode;\r\n  @Input() @InputBoolean() bpsShowLine: boolean;\r\n  @Input() @InputBoolean() bpsShowExpand: boolean;\r\n  @Input() @InputBoolean() bpsCheckable: boolean;\r\n  @Input() @InputBoolean() bpsAsyncData: boolean;\r\n  @Input() @InputBoolean() bpsHideUnMatched = false;\r\n  @Input() @InputBoolean() bpsNoAnimation = false;\r\n  @Input() @InputBoolean() bpsSelectMode = false;\r\n  @Input() @InputBoolean() bpsShowIcon = false;\r\n  @Input() bpsExpandedIcon: TemplateRef<{ $implicit: NzTreeNode }>;\r\n  @Input() bpsTreeTemplate: TemplateRef<{ $implicit: NzTreeNode }>;\r\n  @Input() bpsBeforeDrop: (confirm: NzFormatBeforeDropEvent) => Observable<boolean>;\r\n  @Input() bpsSearchValue = '';\r\n\r\n  @Input() @InputBoolean() bpsCustomTree = true;\r\n\r\n  @Input()\r\n  set bpsDraggable(value: boolean) {\r\n    this._bpsDraggable = value;\r\n    this.handDragEvent();\r\n  }\r\n\r\n  get bpsDraggable(): boolean {\r\n    return this._bpsDraggable;\r\n  }\r\n\r\n  /**\r\n   * @deprecated use `nzExpandAll` instead.\r\n   */\r\n  @Input()\r\n  set bpsDefaultExpandAll(value: boolean) {\r\n    warnDeprecation(`'bpsDefaultExpandAll' is going to be removed in 9.0.0. Please use 'bpsExpandAll' instead.`);\r\n    this._bpsExpandAll = value;\r\n    if (value && this.bpsTreeNode && !this.bpsTreeNode.isLeaf) {\r\n      this.bpsTreeNode.isExpanded = true;\r\n    }\r\n  }\r\n\r\n  get bpsDefaultExpandAll(): boolean {\r\n    return this._bpsExpandAll;\r\n  }\r\n\r\n  // default set\r\n  @Input()\r\n  set bpsExpandAll(value: boolean) {\r\n    this._bpsExpandAll = value;\r\n    if (value && this.bpsTreeNode && !this.bpsTreeNode.isLeaf) {\r\n      this.bpsTreeNode.isExpanded = true;\r\n    }\r\n  }\r\n\r\n  get bpsExpandAll(): boolean {\r\n    return this._bpsExpandAll;\r\n  }\r\n\r\n  // default var\r\n  prefixCls = 'ant-tree';\r\n  bpsNodeClass = {};\r\n  bpsNodeSwitcherClass = {};\r\n  bpsNodeContentClass = {};\r\n  bpsNodeCheckboxClass = {};\r\n  bpsNodeContentIconClass = {};\r\n  bpsNodeContentLoadingClass = {};\r\n\r\n  /**\r\n   * drag var\r\n   */\r\n  destroy$ = new Subject();\r\n  dragPos = 2;\r\n  dragPosClass: { [key: string]: string } = {\r\n    '0': 'drag-over',\r\n    '1': 'drag-over-gap-bottom',\r\n    '-1': 'drag-over-gap-top'\r\n  };\r\n\r\n  /**\r\n   * default set\r\n   */\r\n  _bpsDraggable = false;\r\n  _bpsExpandAll = false;\r\n\r\n  get bpsIcon(): string {\r\n    return this.bpsTreeNode.icon;\r\n  }\r\n\r\n  get canDraggable(): boolean | null {\r\n    return this.bpsDraggable && !this.bpsTreeNode.isDisabled ? true : null;\r\n  }\r\n\r\n  get isShowLineIcon(): boolean {\r\n    return !this.bpsTreeNode.isLeaf && this.bpsShowLine;\r\n  }\r\n\r\n  get isShowSwitchIcon(): boolean {\r\n    return !this.bpsTreeNode.isLeaf && !this.bpsShowLine;\r\n  }\r\n\r\n  get isSwitcherOpen(): boolean {\r\n    return this.bpsTreeNode.isExpanded && !this.bpsTreeNode.isLeaf;\r\n  }\r\n\r\n  get isSwitcherClose(): boolean {\r\n    return !this.bpsTreeNode.isExpanded && !this.bpsTreeNode.isLeaf;\r\n  }\r\n\r\n  get displayStyle(): string {\r\n    // to hide unmatched nodes\r\n    return this.bpsSearchValue &&\r\n      this.bpsHideUnMatched &&\r\n      !this.bpsTreeNode.isMatched &&\r\n      !this.bpsTreeNode.isExpanded &&\r\n      this.bpsTreeNode.canHide\r\n      ? 'none'\r\n      : '';\r\n  }\r\n\r\n  /**\r\n   * reset node class\r\n   */\r\n  setClassMap(): void {\r\n    this.prefixCls = this.bpsSelectMode ? 'ant-select-tree' : 'ant-tree';\r\n    this.bpsNodeClass = {\r\n      [`${this.prefixCls}-treenode-disabled`]: this.bpsTreeNode.isDisabled,\r\n      [`${this.prefixCls}-treenode-switcher-open`]: this.isSwitcherOpen,\r\n      [`${this.prefixCls}-treenode-switcher-close`]: this.isSwitcherClose,\r\n      [`${this.prefixCls}-treenode-checkbox-checked`]: this.bpsTreeNode.isChecked,\r\n      [`${this.prefixCls}-treenode-checkbox-indeterminate`]: this.bpsTreeNode.isHalfChecked,\r\n      [`${this.prefixCls}-treenode-selected`]: this.bpsTreeNode.isSelected,\r\n      [`${this.prefixCls}-treenode-loading`]: this.bpsTreeNode.isLoading\r\n    };\r\n    this.bpsNodeSwitcherClass = {\r\n      [`${this.prefixCls}-switcher`]: true,\r\n      [`${this.prefixCls}-switcher-noop`]: this.bpsTreeNode.isLeaf,\r\n      [`${this.prefixCls}-switcher_open`]: this.isSwitcherOpen,\r\n      [`${this.prefixCls}-switcher_close`]: this.isSwitcherClose\r\n    };\r\n\r\n    this.bpsNodeCheckboxClass = {\r\n      [`${this.prefixCls}-checkbox`]: true,\r\n      [`${this.prefixCls}-checkbox-checked`]: this.bpsTreeNode.isChecked,\r\n      [`${this.prefixCls}-checkbox-indeterminate`]: this.bpsTreeNode.isHalfChecked,\r\n      [`${this.prefixCls}-checkbox-disabled`]: this.bpsTreeNode.isDisabled || this.bpsTreeNode.isDisableCheckbox\r\n    };\r\n\r\n    this.bpsNodeContentClass = {\r\n      [`${this.prefixCls}-node-content-wrapper`]: true,\r\n      [`bps-tree-leaf`]: this.bpsTreeNode.isLeaf,\r\n      [`bps-tree-parent`]: !this.bpsTreeNode.isLeaf,\r\n      [`${this.prefixCls}-node-content-wrapper-open`]: this.isSwitcherOpen,\r\n      [`${this.prefixCls}-node-content-wrapper-close`]: this.isSwitcherClose,\r\n      [`${this.prefixCls}-node-selected`]: this.bpsTreeNode.isSelected\r\n    };\r\n    this.bpsNodeContentIconClass = {\r\n      [`${this.prefixCls}-iconEle`]: true,\r\n      [`${this.prefixCls}-icon__customize`]: true\r\n    };\r\n    this.bpsNodeContentLoadingClass = {\r\n      [`${this.prefixCls}-iconEle`]: true\r\n    };\r\n  }\r\n\r\n  @HostListener('mousedown', ['$event'])\r\n  onMousedown(event: MouseEvent): void {\r\n    if (this.bpsSelectMode) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * click node to select, 200ms to dbl click\r\n   */\r\n  @HostListener('click', ['$event'])\r\n  nzClick(event: MouseEvent): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    if (this.bpsTreeNode.isSelectable && !this.bpsTreeNode.isDisabled) {\r\n      if (!this.bpsTreeNode.isSelected) {\r\n        this.bpsTreeNode.isSelected = true;\r\n      }\r\n      if (this.bpsCustomTree) {\r\n        this._clickExpand(event);\r\n      }\r\n    }\r\n    const eventNext = this.nzTreeService.formatEvent('click', this.bpsTreeNode, event);\r\n    this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n  }\r\n\r\n  @HostListener('dblclick', ['$event'])\r\n  nzDblClick(event: MouseEvent): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    const eventNext = this.nzTreeService.formatEvent('dblclick', this.bpsTreeNode, event);\r\n    this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n  }\r\n\r\n  /**\r\n   * @param event\r\n   */\r\n  @HostListener('contextmenu', ['$event'])\r\n  nzContextMenu(event: MouseEvent): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    const eventNext = this.nzTreeService.formatEvent('contextmenu', this.bpsTreeNode, event);\r\n    this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n  }\r\n\r\n  /**\r\n   * collapse node\r\n   * @param event\r\n   */\r\n  _clickExpand(event: MouseEvent): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    if (!this.bpsTreeNode.isLoading && !this.bpsTreeNode.isLeaf) {\r\n      // set async state\r\n      if (this.bpsAsyncData && this.bpsTreeNode.children.length === 0 && !this.bpsTreeNode.isExpanded) {\r\n        this.bpsTreeNode.isLoading = true;\r\n      }\r\n      this.bpsTreeNode.isExpanded = !this.bpsTreeNode.isExpanded;\r\n      if (this.bpsTreeNode.isMatched) {\r\n        this.setDisplayForParentNodes(this.bpsTreeNode);\r\n      }\r\n      this.setDisplayForChildNodes(this.bpsTreeNode);\r\n      const eventNext = this.nzTreeService.formatEvent('expand', this.bpsTreeNode, event);\r\n      this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n    }\r\n  }\r\n\r\n  private setDisplayForChildNodes(parentNode: NzTreeNode): void {\r\n    const { children } = parentNode;\r\n    if (children.length > 0) {\r\n      children.map(node => {\r\n        const canHide = !node.isMatched;\r\n        node.canHide = canHide;\r\n        this.setDisplayForChildNodes(node);\r\n      });\r\n    }\r\n  }\r\n\r\n  private setDisplayForParentNodes(targetNode: NzTreeNode): void {\r\n    const parentNode = targetNode.getParentNode();\r\n    if (parentNode) {\r\n      parentNode.canHide = false;\r\n      this.setDisplayForParentNodes(parentNode);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * check node\r\n   * @param event\r\n   */\r\n  _clickCheckBox(event: MouseEvent): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    // return if node is disabled\r\n    if (this.bpsTreeNode.isDisabled || this.bpsTreeNode.isDisableCheckbox) {\r\n      return;\r\n    }\r\n    this.bpsTreeNode.isChecked = !this.bpsTreeNode.isChecked;\r\n    this.bpsTreeNode.isHalfChecked = false;\r\n    if (!this.nzTreeService.isCheckStrictly) {\r\n      this.nzTreeService.conduct(this.bpsTreeNode);\r\n    }\r\n    const eventNext = this.nzTreeService.formatEvent('check', this.bpsTreeNode, event);\r\n    this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n  }\r\n\r\n  /**\r\n   * drag event\r\n   * @param e\r\n   */\r\n  clearDragClass(): void {\r\n    const dragClass = ['drag-over-gap-top', 'drag-over-gap-bottom', 'drag-over'];\r\n    dragClass.forEach(e => {\r\n      this.renderer.removeClass(this.dragElement.nativeElement, e);\r\n    });\r\n  }\r\n\r\n  handleDragStart(e: DragEvent): void {\r\n    e.stopPropagation();\r\n    try {\r\n      // ie throw error\r\n      // firefox-need-it\r\n      e.dataTransfer!.setData('text/plain', this.bpsTreeNode.key!);\r\n    } catch (error) {\r\n      // empty\r\n    }\r\n    this.nzTreeService.setSelectedNode(this.bpsTreeNode);\r\n    this.bpsTreeNode.isExpanded = false;\r\n    const eventNext = this.nzTreeService.formatEvent('dragstart', this.bpsTreeNode, e);\r\n    this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n  }\r\n\r\n  handleDragEnter(e: DragEvent): void {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    // reset position\r\n    this.dragPos = 2;\r\n    this.ngZone.run(() => {\r\n      const node = this.nzTreeService.getSelectedNode();\r\n      if (node && node.key !== this.bpsTreeNode.key && !this.bpsTreeNode.isExpanded && !this.bpsTreeNode.isLeaf) {\r\n        this.bpsTreeNode.isExpanded = true;\r\n      }\r\n      const eventNext = this.nzTreeService.formatEvent('dragenter', this.bpsTreeNode, e);\r\n      this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n    });\r\n  }\r\n\r\n  handleDragOver(e: DragEvent): void {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    const dropPosition = this.nzTreeService.calcDropPosition(e);\r\n    if (this.dragPos !== dropPosition) {\r\n      this.clearDragClass();\r\n      this.dragPos = dropPosition;\r\n      // leaf node will pass\r\n      if (!(this.dragPos === 0 && this.bpsTreeNode.isLeaf)) {\r\n        this.renderer.addClass(this.dragElement.nativeElement, this.dragPosClass[this.dragPos]);\r\n      }\r\n    }\r\n    const eventNext = this.nzTreeService.formatEvent('dragover', this.bpsTreeNode, e);\r\n    this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n  }\r\n\r\n  handleDragLeave(e: DragEvent): void {\r\n    e.stopPropagation();\r\n    this.ngZone.run(() => {\r\n      this.clearDragClass();\r\n    });\r\n    const eventNext = this.nzTreeService.formatEvent('dragleave', this.bpsTreeNode, e);\r\n    this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n  }\r\n\r\n  handleDragDrop(e: DragEvent): void {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    this.ngZone.run(() => {\r\n      this.clearDragClass();\r\n      const node = this.nzTreeService.getSelectedNode();\r\n      if (!node || (node && node.key === this.bpsTreeNode.key) || (this.dragPos === 0 && this.bpsTreeNode.isLeaf)) {\r\n        return;\r\n      }\r\n      // pass if node is leafNo\r\n      const dropEvent = this.nzTreeService.formatEvent('drop', this.bpsTreeNode, e);\r\n      const dragEndEvent = this.nzTreeService.formatEvent('dragend', this.bpsTreeNode, e);\r\n      if (this.bpsBeforeDrop) {\r\n        this.bpsBeforeDrop({\r\n          dragNode: this.nzTreeService.getSelectedNode()!,\r\n          node: this.bpsTreeNode,\r\n          pos: this.dragPos\r\n        }).subscribe((canDrop: boolean) => {\r\n          if (canDrop) {\r\n            this.nzTreeService.dropAndApply(this.bpsTreeNode, this.dragPos);\r\n          }\r\n          this.nzTreeService!.triggerEventChange$!.next(dropEvent);\r\n          this.nzTreeService!.triggerEventChange$!.next(dragEndEvent);\r\n        });\r\n      } else if (this.bpsTreeNode) {\r\n        this.nzTreeService.dropAndApply(this.bpsTreeNode, this.dragPos);\r\n        this.nzTreeService!.triggerEventChange$!.next(dropEvent);\r\n      }\r\n    });\r\n  }\r\n\r\n  handleDragEnd(e: DragEvent): void {\r\n    e.stopPropagation();\r\n    this.ngZone.run(() => {\r\n      // if user do not custom beforeDrop\r\n      if (!this.bpsBeforeDrop) {\r\n        const eventNext = this.nzTreeService.formatEvent('dragend', this.bpsTreeNode, e);\r\n        this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Listening to dragging events.\r\n   */\r\n  handDragEvent(): void {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      if (this.bpsDraggable) {\r\n        this.destroy$ = new Subject();\r\n        fromEvent<DragEvent>(this.elRef.nativeElement, 'dragstart')\r\n          .pipe(takeUntil(this.destroy$))\r\n          .subscribe((e: DragEvent) => this.handleDragStart(e));\r\n        fromEvent<DragEvent>(this.elRef.nativeElement, 'dragenter')\r\n          .pipe(takeUntil(this.destroy$))\r\n          .subscribe((e: DragEvent) => this.handleDragEnter(e));\r\n        fromEvent<DragEvent>(this.elRef.nativeElement, 'dragover')\r\n          .pipe(takeUntil(this.destroy$))\r\n          .subscribe((e: DragEvent) => this.handleDragOver(e));\r\n        fromEvent<DragEvent>(this.elRef.nativeElement, 'dragleave')\r\n          .pipe(takeUntil(this.destroy$))\r\n          .subscribe((e: DragEvent) => this.handleDragLeave(e));\r\n        fromEvent<DragEvent>(this.elRef.nativeElement, 'drop')\r\n          .pipe(takeUntil(this.destroy$))\r\n          .subscribe((e: DragEvent) => this.handleDragDrop(e));\r\n        fromEvent<DragEvent>(this.elRef.nativeElement, 'dragend')\r\n          .pipe(takeUntil(this.destroy$))\r\n          .subscribe((e: DragEvent) => this.handleDragEnd(e));\r\n      } else {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n      }\r\n    });\r\n  }\r\n\r\n  isTemplateRef(value: {}): boolean {\r\n    return value instanceof TemplateRef;\r\n  }\r\n\r\n  markForCheck(): void {\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  constructor(\r\n    public nzTreeService: NzTreeBaseService,\r\n    private ngZone: NgZone,\r\n    private renderer: Renderer2,\r\n    private elRef: ElementRef,\r\n    private cdr: ChangeDetectorRef,\r\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // init expanded / selected / checked list\r\n    if (this.bpsTreeNode.isSelected) {\r\n      this.nzTreeService.setNodeActive(this.bpsTreeNode);\r\n    }\r\n    if (this.bpsTreeNode.isExpanded) {\r\n      this.nzTreeService.setExpandedNodeList(this.bpsTreeNode);\r\n    }\r\n    if (this.bpsTreeNode.isChecked) {\r\n      this.nzTreeService.setCheckedNodeList(this.bpsTreeNode);\r\n    }\r\n    // TODO\r\n    this.bpsTreeNode.component = this;\r\n    this.nzTreeService\r\n      .eventTriggerChanged()\r\n      .pipe(\r\n        filter(data => data.node!.key === this.bpsTreeNode.key),\r\n        takeUntil(this.destroy$)\r\n      )\r\n      .subscribe(() => {\r\n        this.setClassMap();\r\n        this.markForCheck();\r\n      });\r\n    this.setClassMap();\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    this.setClassMap();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n}\r\n","<ul\n  role=\"tree\"\n  unselectable=\"on\"\n  [ngClass]=\"classMap\">\n  <ng-container *ngFor=\"let node of bpsNodes\">\n    <bps-tree-node\n      [bpsTreeNode]=\"node\"\n      [bpsSelectMode]=\"bpsSelectMode\"\n      [bpsShowLine]=\"bpsShowLine\"\n      [bpsExpandedIcon]=\"bpsExpandedIcon\"\n      [bpsDraggable]=\"bpsDraggable\"\n      [bpsCheckable]=\"bpsCheckable\"\n      [bpsShowExpand]=\"bpsShowExpand\"\n      [bpsAsyncData]=\"bpsAsyncData\"\n      [bpsSearchValue]=\"bpsSearchValue\"\n      [bpsHideUnMatched]=\"bpsHideUnMatched\"\n      [bpsBeforeDrop]=\"bpsBeforeDrop\"\n      [bpsExpandAll]=\"bpsExpandAll\"\n      [bpsShowIcon]=\"bpsShowIcon\"\n      [bpsTreeTemplate]=\"treeTemplate\"\n      [@.disabled]=\"noAnimation?.nzNoAnimation\"\n      [bpsNoAnimation]=\"noAnimation?.nzNoAnimation\">\n    </bps-tree-node>\n  </ng-container>\n</ul>\n","import {\r\n  forwardRef,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  EventEmitter,\r\n  Host,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Output,\r\n  SimpleChange,\r\n  SkipSelf,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { isNotNil, InputBoolean } from 'ng-zorro-antd/core/util';\r\nimport {\r\n  warnDeprecation,\r\n} from 'ng-zorro-antd/core/logger';\r\nimport {\r\n  NzTreeBase,\r\n} from './tree/nz-tree-base';\r\nimport {\r\n  NzTreeBaseService,\r\n} from './tree/nz-tree-base.service';\r\nimport {\r\n  NzTreeNode\r\n} from './tree/nz-tree-base-node';\r\nimport {\r\n  NzConfigService\r\n} from 'ng-zorro-antd/core/config';\r\nimport {\r\n  NzFormatBeforeDropEvent,\r\n  NzFormatEmitEvent,\r\n} from './tree/nz-tree-base.definitions';\r\nimport {\r\n  NzNoAnimationDirective,\r\n} from 'ng-zorro-antd/core/no-animation';\r\nimport { BpsTreeService } from './bps-tree.service';\r\nimport { WithConfig } from './tree/config.service';\r\nimport { NzTreeHigherOrderServiceToken } from './tree/nz-tree-service.resolver';\r\n\r\nexport function NzTreeServiceFactory(\r\n  higherOrderService: NzTreeBaseService,\r\n  treeService: BpsTreeService\r\n): NzTreeBaseService {\r\n  return higherOrderService ? higherOrderService : treeService;\r\n}\r\n\r\nconst NZ_CONFIG_COMPONENT_NAME = 'tree';\r\n\r\n@Component({\r\n  selector: 'bps-tree',\r\n  exportAs: 'bpsTree',\r\n  templateUrl: './bps-tree.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    BpsTreeService,\r\n    {\r\n      provide: NzTreeBaseService,\r\n      useFactory: NzTreeServiceFactory,\r\n      deps: [[new SkipSelf(), new Optional(), NzTreeHigherOrderServiceToken], BpsTreeService]\r\n    },\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => BpsTreeComponent),\r\n      multi: true\r\n    }\r\n  ],\r\n  styleUrls: ['./bps-tree.component.css']\r\n})\r\nexport class BpsTreeComponent extends NzTreeBase implements OnInit, OnDestroy, ControlValueAccessor, OnChanges {\r\n  @Input() @InputBoolean() @WithConfig(NZ_CONFIG_COMPONENT_NAME, false) bpsShowIcon: boolean;\r\n  @Input() @InputBoolean() bpsShowExpand: boolean = true;\r\n  @Input() @InputBoolean() bpsShowLine = false;\r\n  @Input() bpsExpandedIcon: TemplateRef<{ $implicit: NzTreeNode }>;\r\n  @Input() @InputBoolean() bpsCheckable = false;\r\n  @Input() @InputBoolean() bpsAsyncData = false;\r\n  @Input() @InputBoolean() bpsDraggable: boolean = false;\r\n\r\n  @Input() @InputBoolean() @WithConfig(NZ_CONFIG_COMPONENT_NAME, false) bpsHideUnMatched: boolean;\r\n  @Input() @InputBoolean() bpsSelectMode = false;\r\n  @Input() @InputBoolean() bpsCheckStrictly = false;\r\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME, false) @InputBoolean() bpsBlockNode: boolean;\r\n  @Input() @InputBoolean() bpsExpandAll = false;\r\n\r\n  @Input() @InputBoolean() bpsCustomTree = true;\r\n\r\n  @Input() bpsTreeTemplate: TemplateRef<{ $implicit: NzTreeNode }>;\r\n  @ContentChild('bpsTreeTemplate', { static: true }) bpsTreeTemplateChild: TemplateRef<{ $implicit: NzTreeNode }>;\r\n  get treeTemplate(): TemplateRef<{ $implicit: NzTreeNode }> {\r\n    return this.bpsTreeTemplate || this.bpsTreeTemplateChild;\r\n  }\r\n\r\n  /**\r\n   * @deprecated 9.0.0 use `bpsExpandAll` instead.\r\n   */\r\n  @Input()\r\n  @InputBoolean()\r\n  set bpsDefaultExpandAll(value: boolean) {\r\n    warnDeprecation(`'bpsDefaultExpandAll' would be removed in 9.0.0. Please use 'bpsExpandAll' instead.`);\r\n    this.bpsExpandAll = value;\r\n    this._bpsDefaultExpandAll = value;\r\n  }\r\n\r\n  get bpsDefaultExpandAll(): boolean {\r\n    return this._bpsDefaultExpandAll;\r\n  }\r\n\r\n  private _bpsDefaultExpandAll = false;\r\n\r\n  @Input() bpsBeforeDrop: (confirm: NzFormatBeforeDropEvent) => Observable<boolean>;\r\n\r\n  @Input() @InputBoolean() bpsMultiple = false;\r\n\r\n  @Input()\r\n  // tslint:disable-next-line:no-any\r\n  set bpsData(value: any[]) {\r\n    this.initNzData(value);\r\n  }\r\n\r\n  /**\r\n   * @deprecated 9.0.0 - use `bpsExpandedKeys` instead.\r\n   */\r\n  @Input()\r\n  set bpsDefaultExpandedKeys(value: string[]) {\r\n    warnDeprecation(`'bpsDefaultExpandedKeys' would be removed in 9.0.0. Please use 'bpsExpandedKeys' instead.`);\r\n    this.bpsDefaultSubject.next({ type: 'nzExpandedKeys', keys: value });\r\n  }\r\n\r\n  /**\r\n   * @deprecated 9.0.0 - use `bpsSelectedKeys` instead.\r\n   */\r\n  @Input()\r\n  set bpsDefaultSelectedKeys(value: string[]) {\r\n    warnDeprecation(`'bpsDefaultSelectedKeys' would be removed in 9.0.0. Please use 'bpsSelectedKeys' instead.`);\r\n    this.bpsDefaultSubject.next({ type: 'nzSelectedKeys', keys: value });\r\n  }\r\n\r\n  /**\r\n   * @deprecated 9.0.0 - use `bpsCheckedKeys` instead.\r\n   */\r\n  @Input()\r\n  set bpsDefaultCheckedKeys(value: string[]) {\r\n    warnDeprecation(`'bpsDefaultCheckedKeys' would be removed in 9.0.0. Please use 'bpsCheckedKeys' instead.`);\r\n    this.bpsDefaultSubject.next({ type: 'nzCheckedKeys', keys: value });\r\n  }\r\n\r\n  @Input()\r\n  set bpsExpandedKeys(value: string[]) {\r\n    this.bpsDefaultSubject.next({ type: 'nzExpandedKeys', keys: value });\r\n  }\r\n\r\n  @Input()\r\n  set bpsSelectedKeys(value: string[]) {\r\n    this.bpsDefaultSubject.next({ type: 'nzSelectedKeys', keys: value });\r\n  }\r\n\r\n  @Input()\r\n  set bpsCheckedKeys(value: string[]) {\r\n    this.bpsDefaultSubject.next({ type: 'nzCheckedKeys', keys: value });\r\n  }\r\n\r\n  @Input()\r\n  set bpsSearchValue(value: string) {\r\n    this._searchValue = value;\r\n    this.nzTreeService.searchExpand(value);\r\n    if (isNotNil(value)) {\r\n      this.bpsSearchValueChange.emit(this.nzTreeService.formatEvent('search', null, null));\r\n      /**\r\n       * @deprecated 9.0.0 - use `nzOnSearchNode` instead.\r\n       * Hide warning, need remove next version\r\n       */\r\n      this.bpsOnSearchNode.emit(this.nzTreeService.formatEvent('search', null, null));\r\n    }\r\n  }\r\n\r\n  get bpsSearchValue(): string {\r\n    return this._searchValue;\r\n  }\r\n\r\n  /**\r\n   * To render nodes if root is changed.\r\n   */\r\n  get bpsNodes(): NzTreeNode[] {\r\n    return this.nzTreeService.rootNodes;\r\n  }\r\n\r\n  @Output() readonly bpsExpandedKeysChange: EventEmitter<string[]> = new EventEmitter<string[]>();\r\n  @Output() readonly bpsSelectedKeysChange: EventEmitter<string[]> = new EventEmitter<string[]>();\r\n  @Output() readonly bpsCheckedKeysChange: EventEmitter<string[]> = new EventEmitter<string[]>();\r\n\r\n  @Output() readonly bpsSearchValueChange = new EventEmitter<NzFormatEmitEvent>();\r\n\r\n  /**\r\n   * @deprecated use `nzSearchValueChange` instead.\r\n   */\r\n  @Output() readonly bpsOnSearchNode = new EventEmitter<NzFormatEmitEvent>();\r\n\r\n  @Output() readonly bpsClick = new EventEmitter<NzFormatEmitEvent>();\r\n  @Output() readonly bpsDblClick = new EventEmitter<NzFormatEmitEvent>();\r\n  @Output() readonly bpsContextMenu = new EventEmitter<NzFormatEmitEvent>();\r\n  @Output() readonly bpsCheckBoxChange = new EventEmitter<NzFormatEmitEvent>();\r\n  @Output() readonly bpsExpandChange = new EventEmitter<NzFormatEmitEvent>();\r\n\r\n  @Output() readonly bpsOnDragStart = new EventEmitter<NzFormatEmitEvent>();\r\n  @Output() readonly bpsOnDragEnter = new EventEmitter<NzFormatEmitEvent>();\r\n  @Output() readonly bpsOnDragOver = new EventEmitter<NzFormatEmitEvent>();\r\n  @Output() readonly bpsOnDragLeave = new EventEmitter<NzFormatEmitEvent>();\r\n  @Output() readonly bpsOnDrop = new EventEmitter<NzFormatEmitEvent>();\r\n  @Output() readonly bpsOnDragEnd = new EventEmitter<NzFormatEmitEvent>();\r\n\r\n  _searchValue: string;\r\n  bpsDefaultSubject = new ReplaySubject<{ type: string; keys: string[] }>(6);\r\n  destroy$ = new Subject();\r\n  prefixCls = 'ant-tree';\r\n  classMap = {};\r\n\r\n  onChange: (value: NzTreeNode[]) => void = () => null;\r\n  onTouched: () => void = () => null;\r\n\r\n  setClassMap(): void {\r\n    this.classMap = {\r\n      [this.prefixCls]: true,\r\n      ['bps-tree']: true,\r\n      [this.prefixCls + '-show-line']: this.bpsShowLine,\r\n      [`${this.prefixCls}-icon-hide`]: !this.bpsShowIcon,\r\n      [`${this.prefixCls}-block-node`]: this.bpsBlockNode,\r\n      ['draggable-tree']: this.bpsDraggable,\r\n      ['ant-select-tree']: this.bpsSelectMode\r\n    };\r\n  }\r\n\r\n  writeValue(value: NzTreeNode[]): void {\r\n    this.initNzData(value);\r\n  }\r\n\r\n  registerOnChange(fn: (_: NzTreeNode[]) => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  // tslint:disable-next-line:no-any\r\n  initNzData(value: any[]): void {\r\n    if (Array.isArray(value)) {\r\n      this.nzTreeService.isCheckStrictly = this.bpsCheckStrictly;\r\n      this.nzTreeService.isMultiple = this.bpsMultiple;\r\n      this.nzTreeService.initTree(this.coerceTreeNodes(value));\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    nzTreeService: NzTreeBaseService,\r\n    public nzConfigService: NzConfigService,\r\n    private cdr: ChangeDetectorRef,\r\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective\r\n  ) {\r\n    super(nzTreeService);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setClassMap();\r\n    this.bpsDefaultSubject.pipe(takeUntil(this.destroy$)).subscribe((data: { type: string; keys: string[] }) => {\r\n      if (!data || !data.keys) {\r\n        return;\r\n      }\r\n      switch (data.type) {\r\n        case 'nzExpandedKeys':\r\n          this.nzTreeService.calcExpandedKeys(data.keys, this.bpsNodes);\r\n          this.bpsExpandedKeysChange.emit(data.keys);\r\n          break;\r\n        case 'nzSelectedKeys':\r\n          this.nzTreeService.calcSelectedKeys(data.keys, this.bpsNodes, this.bpsMultiple);\r\n          this.bpsSelectedKeysChange.emit(data.keys);\r\n          break;\r\n        case 'nzCheckedKeys':\r\n          this.nzTreeService.calcCheckedKeys(data.keys, this.bpsNodes, this.bpsCheckStrictly);\r\n          this.bpsCheckedKeysChange.emit(data.keys);\r\n          break;\r\n      }\r\n      this.cdr.markForCheck();\r\n    });\r\n    this.nzTreeService\r\n      .eventTriggerChanged()\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(data => {\r\n        switch (data.eventName) {\r\n          case 'expand':\r\n            if (this.bpsCustomTree) {\r\n              const keys = data.keys;\r\n              data.keys = [keys[keys.length - 1]];\r\n              this.nzTreeService.calcExpandedKeys(data.keys, this.bpsNodes);\r\n            }\r\n            this.bpsExpandChange.emit(data);\r\n            break;\r\n          case 'click':\r\n            this.bpsClick.emit(data);\r\n            break;\r\n          case 'check':\r\n            this.bpsCheckBoxChange.emit(data);\r\n            break;\r\n          case 'dblclick':\r\n            this.bpsDblClick.emit(data);\r\n            break;\r\n          case 'contextmenu':\r\n            this.bpsContextMenu.emit(data);\r\n            break;\r\n          // drag drop\r\n          case 'dragstart':\r\n            this.bpsOnDragStart.emit(data);\r\n            break;\r\n          case 'dragenter':\r\n            this.bpsOnDragEnter.emit(data);\r\n            break;\r\n          case 'dragover':\r\n            this.bpsOnDragOver.emit(data);\r\n            break;\r\n          case 'dragleave':\r\n            this.bpsOnDragLeave.emit(data);\r\n            break;\r\n          case 'drop':\r\n            this.bpsOnDrop.emit(data);\r\n            break;\r\n          case 'dragend':\r\n            this.bpsOnDragEnd.emit(data);\r\n            break;\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnChanges(changes: { [propertyName: string]: SimpleChange }): void {\r\n    if (changes.bpsCheckStrictly) {\r\n      this.nzTreeService.isCheckStrictly = this.bpsCheckStrictly;\r\n    }\r\n    if (changes.bpsMultiple) {\r\n      this.nzTreeService.isMultiple = this.bpsMultiple;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n}\r\n","import { Observable } from 'rxjs';\nimport { BpsModalComponent } from './bps-modal.component';\r\n\n/**\n * API class that public to users to handle the modal instance.\n * NzModalRef is aim to avoid accessing to the modal instance directly by users.\n */\n// tslint:disable-next-line:no-any\nexport abstract class NzModalRef<T = any, R = any> {\n  abstract afterOpen: Observable<void>;\n  abstract afterClose: Observable<R>;\n\n  abstract open(): void;\n  abstract close(result?: R): void;\n  abstract destroy(result?: R): void;\n\n  /**\n   * Trigger the nzOnOk/nzOnCancel by manual\n   */\n  abstract triggerOk(): void;\n  abstract triggerCancel(): void;\n\n  // /**\n  //  * Return the ComponentRef of nzContent when specify nzContent as a Component\n  //  * Note: this method may return undefined if the Component has not ready yet. (it only available after Modal's ngOnInit)\n  //  */\n  // abstract getContentComponentRef(): ComponentRef<{}>;\n\n  /**\n   * Return the component instance of nzContent when specify nzContent as a Component\n   * Note: this method may return undefined if the Component has not ready yet. (it only available after Modal's ngOnInit)\n   */\n  abstract getContentComponent(): T;\n\n  /**\n   * Get the dom element of this Modal\n   */\n  abstract getElement(): HTMLElement;\n\n  /**\n   * Get the instance of the Modal itself\n   */\n  abstract getInstance(): BpsModalComponent;\n}\n","import { Directive, Optional, TemplateRef } from '@angular/core';\r\nimport { NzModalRef } from './nz-modal-ref.class';\r\n\n@Directive({\n  selector: '[bpsModalFooter]',\n  exportAs: 'bpsModalFooter'\n})\nexport class BpsModalFooterDirective {\n  constructor(@Optional() private nzModalRef: NzModalRef, public templateRef: TemplateRef<{}>) {\n    if (this.nzModalRef) {\n      this.nzModalRef.getInstance().setFooterWithTemplate(this.templateRef);\n    }\n  }\n}\n","import { Observable } from 'rxjs';\n\nimport { BpsModalComponent } from './bps-modal.component';\n\n/**\n * API class that public to users to handle the modal instance.\n * NzModalRef is aim to avoid accessing to the modal instance directly by users.\n */\n// tslint:disable-next-line:no-any\nexport abstract class BpsModalRef<T = any, R = any> {\n  abstract afterOpen: Observable<void>;\n  abstract afterClose: Observable<R>;\n\n  abstract open(): void;\n  abstract close(result?: R): void;\n  abstract destroy(result?: R): void;\n\n  /**\n   * Trigger the nzOnOk/nzOnCancel by manual\n   */\n  abstract triggerOk(): void;\n  abstract triggerCancel(): void;\n\n  // /**\n  //  * Return the ComponentRef of nzContent when specify nzContent as a Component\n  //  * Note: this method may return undefined if the Component has not ready yet. (it only available after Modal's ngOnInit)\n  //  */\n  // abstract getContentComponentRef(): ComponentRef<{}>;\n\n  /**\n   * Return the component instance of nzContent when specify nzContent as a Component\n   * Note: this method may return undefined if the Component has not ready yet. (it only available after Modal's ngOnInit)\n   */\n  abstract getContentComponent(): T;\n\n  /**\n   * Get the dom element of this Modal\n   */\n  abstract getElement(): HTMLElement;\n\n  /**\n   * Get the instance of the Modal itself\n   */\n  abstract getInstance(): BpsModalComponent;\n}\n","import { InjectionToken } from '@angular/core';\n\nexport interface BpsModalConfig {\n  bpsMask?: boolean;\n  bpsMaskClosable?: boolean;\n}\nexport const NZ_MODAL_CONFIG = new InjectionToken<BpsModalConfig>('NZ_MODAL_CONFIG');\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NgModule } from '@angular/core';\n\n@NgModule()\nexport class NzModalControlServiceModule {}\n","import { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { BpsModalRef } from './bps-modal-ref.class';\nimport { NzModalControlServiceModule } from './nz-modal-control.service.module';\r\n\ninterface RegisteredMeta {\n  modalRef: BpsModalRef;\n  afterOpenSubscription: Subscription;\n  afterCloseSubscription: Subscription;\n}\n\n@Injectable({\n  providedIn: NzModalControlServiceModule\n})\nexport class BpsModalControlService {\n  // Track singleton afterAllClose through over the injection tree\n  get afterAllClose(): Subject<void> {\n    return this.parentService ? this.parentService.afterAllClose : this.rootAfterAllClose!;\n  }\n\n  // Track singleton openModals array through over the injection tree\n  get openModals(): BpsModalRef[] {\n    return this.parentService ? this.parentService.openModals : this.rootOpenModals!;\n  }\n\n  private rootOpenModals: BpsModalRef[] | null = this.parentService ? null : [];\n  private rootAfterAllClose: Subject<void> | null = this.parentService ? null : new Subject<void>();\n  private rootRegisteredMetaMap: Map<BpsModalRef, RegisteredMeta> | null = this.parentService ? null : new Map();\n\n  private get registeredMetaMap(): Map<BpsModalRef, RegisteredMeta> {\n    // Registered modal for later usage\n    return this.parentService ? this.parentService.registeredMetaMap : this.rootRegisteredMetaMap!;\n  }\n\n  constructor(@Optional() @SkipSelf() private parentService: BpsModalControlService) {}\n\n  // Register a modal to listen its open/close\n  registerModal(modalRef: BpsModalRef): void {\n    if (!this.hasRegistered(modalRef)) {\n      const afterOpenSubscription = modalRef.afterOpen.subscribe(() => this.openModals.push(modalRef));\n      const afterCloseSubscription = modalRef.afterClose.subscribe(() => this.removeOpenModal(modalRef));\n\n      this.registeredMetaMap.set(modalRef, { modalRef, afterOpenSubscription, afterCloseSubscription });\n    }\n  }\n\n  // deregister modals\n  deregisterModal(modalRef: BpsModalRef): void {\n    const registeredMeta = this.registeredMetaMap.get(modalRef);\n    if (registeredMeta) {\n      // Remove this modal if it is still in the opened modal list (NOTE: it may trigger \"afterAllClose\")\n      this.removeOpenModal(registeredMeta.modalRef);\n      registeredMeta.afterOpenSubscription.unsubscribe();\n      registeredMeta.afterCloseSubscription.unsubscribe();\n      this.registeredMetaMap.delete(modalRef);\n    }\n  }\n\n  hasRegistered(modalRef: BpsModalRef): boolean {\n    return this.registeredMetaMap.has(modalRef);\n  }\n\n  // Close all registered opened modals\n  closeAll(): void {\n    let i = this.openModals.length;\n\n    while (i--) {\n      this.openModals[i].close();\n    }\n  }\n\n  private removeOpenModal(modalRef: BpsModalRef): void {\n    const index = this.openModals.indexOf(modalRef);\n\n    if (index > -1) {\n      this.openModals.splice(index, 1);\n\n      if (!this.openModals.length) {\n        this.afterAllClose.next();\n      }\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'nzToCssUnit'\n})\nexport class NzToCssUnitPipe implements PipeTransform {\n  transform(value: number | string, defaultUnit: string = 'px'): string {\n    const formatted = +value; // force convert\n    return isNaN(formatted) ? `${value}` : `${formatted}${defaultUnit}`;\n  }\n}\n","<ng-template #tplOriginContent><ng-content></ng-content></ng-template> <!-- Compatible: the <ng-content> can appear only once -->\n\n<div [nzNoAnimation]=\"bpsNoAnimation\">\n  <div *ngIf=\"mask\"\n    class=\"ant-modal-mask\"\n    [ngClass]=\"maskAnimationClassMap\"\n    [class.ant-modal-mask-hidden]=\"hidden\"\n    [ngStyle]=\"bpsMaskStyle\"\n    [style.zIndex]=\"bpsZIndex\"\n  ></div>\n  <div\n    (click)=\"onClickMask($event)\"\n    (mouseup)=\"onDialogUp()\"\n    class=\"ant-modal-wrap {{ bpsWrapClassName }}\"\n    [style.zIndex]=\"bpsZIndex\"\n    [style.visibility]=\"hidden ? 'hidden' : null\"\n    tabindex=\"-1\"\n    role=\"dialog\"\n  >\n    <div #modalContainer\n      class=\"ant-modal {{ bpsClassName }}\"\n      (mousedown)=\"onMaskDialogDown()\"\n      [ngClass]=\"modalAnimationClassMap\"\n      [ngStyle]=\"bpsStyle\"\n      [style.width]=\"bpsWidth | nzToCssUnit\"\n      [style.transform-origin]=\"transformOrigin\"\n      role=\"document\"\n    >\n      <div class=\"ant-modal-content\">\n        <button *ngIf=\"bpsClosable\" (click)=\"onClickCloseBtn()\" class=\"ant-modal-close\" aria-label=\"Close\">\n          <span class=\"ant-modal-close-x\" [class.bps-modal-disabled]=\"bpsModalDisabled\">\n            <ng-container *nzStringTemplateOutlet=\"bpsCloseIcon\">\n              <img *ngIf=\"!bpsModalDisabled\" src=\"assets/bps-icons/sps_x_icon_closepanel_white.svg\" class=\"ant-modal-close-icon\" />\n              <img *ngIf=\"bpsModalDisabled\" src=\"assets/bps-icons/sps_x_icon_closepanel_grey.svg\" class=\"ant-modal-close-icon\" />\n            </ng-container>\n          </span>\n        </button>\n        <ng-container *ngIf=\"!hidden\" [ngSwitch]=\"true\">\n          <ng-container *ngSwitchCase=\"isModalType('default')\" [ngTemplateOutlet]=\"tplContentDefault\"></ng-container>\n          <ng-container *ngSwitchCase=\"isModalType('confirm')\" [ngTemplateOutlet]=\"tplContentConfirm\"></ng-container>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- [Predefined] Default Modal Content -->\n<ng-template #tplContentDefault>\n  <div *ngIf=\"bpsTitle\" class=\"ant-modal-header\">\n    <div class=\"ant-modal-title\" [class.bps-modal-disabled]=\"bpsModalDisabled\">\n      <ng-container [ngSwitch]=\"true\">\n        <ng-container *ngSwitchCase=\"isTemplateRef(bpsTitle)\" [ngTemplateOutlet]=\"bpsTitle\"></ng-container>\n        <ng-container *ngSwitchCase=\"isNonEmptyString(bpsTitle)\"><div [innerHTML]=\"bpsTitle\"></div></ng-container>\n      </ng-container>\n    </div>\n  </div>\n  <div class=\"ant-modal-body\" [ngStyle]=\"bpsBodyStyle\">\n    <ng-container #bodyContainer>\n      <ng-container *ngIf=\"!isComponent(bpsContent)\" [ngSwitch]=\"true\">\n        <ng-container *ngSwitchCase=\"isTemplateRef(bpsContent)\" [ngTemplateOutlet]=\"bpsContent\"></ng-container>\n        <ng-container *ngSwitchCase=\"isNonEmptyString(bpsContent)\"><div [innerHTML]=\"bpsContent\"></div></ng-container>\n        <ng-container *ngSwitchDefault [ngTemplateOutlet]=\"tplOriginContent\"></ng-container>\n      </ng-container>\n    </ng-container>\n  </div>\n  <div *ngIf=\"bpsFooter !== null\" class=\"ant-modal-footer\">\n    <ng-container [ngSwitch]=\"true\">\n      <ng-container *ngSwitchCase=\"isTemplateRef(bpsFooter)\" [ngTemplateOutlet]=\"bpsFooter\"></ng-container>\n      <ng-container *ngSwitchCase=\"isNonEmptyString(bpsFooter)\"><div [innerHTML]=\"bpsFooter\"></div></ng-container>\n      <ng-container *ngSwitchCase=\"isModalButtons(bpsFooter)\">\n        <button *ngFor=\"let button of bpsFooter\" bps-button\n          (click)=\"onButtonClick(button)\"\n          [hidden]=\"!getButtonCallableProp(button, 'show')\"\n          [bpsLoading]=\"getButtonCallableProp(button, 'loading')\"\n          [disabled]=\"getButtonCallableProp(button, 'disabled')\"\n          [bpsType]=\"button.type\"\n          [bpsShape]=\"button.shape\"\n          [bpsSize]=\"button.size\"\n          [bpsGhost]=\"button.ghost\"\n        >{{ button.label }}</button>\n      </ng-container>\n      <ng-container *ngSwitchDefault>\n        <button *ngIf=\"bpsCancelText!==null\" bpsType=\"variation-1\" bps-button (click)=\"onClickOkCancel('cancel')\" [bpsLoading]=\"bpsCancelLoading\" [disabled]=\"bpsCancelDisabled\">\n          {{ cancelText }}\n        </button>\n        <button *ngIf=\"bpsOkText!==null\" bps-button [bpsType]=\"bpsOkType\" (click)=\"onClickOkCancel('ok')\" [bpsLoading]=\"bpsOkLoading\" [disabled]=\"bpsOkDisabled\">\n          {{ okText }}\n        </button>\n      </ng-container>\n    </ng-container>\n  </div>\n</ng-template>\n<!-- /[Predefined] Default Modal Content -->\n\n<!-- [Predefined] Confirm Modal Content -->\n<ng-template #tplContentConfirm>\n  <div class=\"ant-modal-body\" [ngStyle]=\"bpsBodyStyle\">\n    <div class=\"ant-modal-confirm-body-wrapper\">\n      <div class=\"ant-modal-confirm-body\">\n        <i nz-icon [nzType]=\"bpsIconType\"></i>\n        <span class=\"ant-modal-confirm-title\">\n          <ng-container [ngSwitch]=\"true\">\n            <ng-container *ngSwitchCase=\"isTemplateRef(bpsTitle)\" [ngTemplateOutlet]=\"bpsTitle\"></ng-container>\n            <ng-container *ngSwitchCase=\"isNonEmptyString(bpsTitle)\"><span [innerHTML]=\"bpsTitle\"></span></ng-container>\n          </ng-container>\n        </span>\n        <div class=\"ant-modal-confirm-content\">\n          <ng-container #bodyContainer>\n            <ng-container *ngIf=\"!isComponent(bpsContent)\" [ngSwitch]=\"true\">\n              <ng-container *ngSwitchCase=\"isTemplateRef(bpsContent)\" [ngTemplateOutlet]=\"bpsContent\"></ng-container>\n              <ng-container *ngSwitchCase=\"isNonEmptyString(bpsContent)\"><div [innerHTML]=\"bpsContent\"></div></ng-container>\n              <ng-container *ngSwitchDefault [ngTemplateOutlet]=\"tplOriginContent\"></ng-container>\n            </ng-container>\n          </ng-container>\n        </div>\n      </div>\n      <div class=\"ant-modal-confirm-btns\">\n        <button *ngIf=\"bpsCancelText!==null\"\n          bps-button\n          bpsType=\"variation-1\"\n          (click)=\"onClickOkCancel('cancel')\"\n          [bpsLoading]=\"bpsCancelLoading\"\n          [disabled]=\"bpsCancelDisabled\">\n          {{ cancelText }}\n        </button>\n        <button #autoFocusButtonOk\n          *ngIf=\"bpsOkText!==null\"\n          bps-button\n          (click)=\"onClickOkCancel('ok')\"\n          [bpsType]=\"bpsOkType\"\n          [bpsLoading]=\"bpsOkLoading\"\n          [disabled]=\"bpsOkDisabled\">\n          {{ okText }}\n        </button>\n      </div>\n    </div> <!-- /.ant-modal-confirm-body-wrapper -->\n  </div>\n</ng-template>\n<!-- /[Predefined] Confirm Modal Content -->\n","import { FocusTrap, FocusTrapFactory } from '@angular/cdk/a11y';\r\n\r\nimport { ESCAPE } from '@angular/cdk/keycodes';\r\nimport { BlockScrollStrategy, Overlay, OverlayKeyboardDispatcher, OverlayRef } from '@angular/cdk/overlay';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  ContentChild,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  Injector,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Output,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  Type,\r\n  ViewChild,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\n\r\nimport { fromEvent, Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\r\nimport { BpsModalFooterDirective } from './bps-modal-footer.directive';\r\nimport { BpsModalRef } from './bps-modal-ref.class';\r\nimport { ModalOptions, ModalButtonOptions, ModalType, OnClickCallback } from './bps-modal.type';\r\nimport { BpsModalControlService } from './bps-modal-control.service';\r\nimport { BpsModalConfig, NZ_MODAL_CONFIG } from './bps-modal-config';\r\nimport { getElementOffset, InputBoolean, isPromise } from 'ng-zorro-antd/core/util';\r\nimport { NzConfigService, WithConfig } from '../bps-tree/tree/config.service';\r\nimport { warnDeprecation } from 'ng-zorro-antd/core/logger';\r\n\r\nexport const MODAL_ANIMATE_DURATION = 200; // Duration when perform animations (ms)\r\nexport const WRAP_CLASS_NAME = 'ant-modal-wrap';\r\n\r\ntype AnimationState = 'enter' | 'leave' | null;\r\n\r\nconst NZ_CONFIG_COMPONENT_NAME = 'modal';\r\n\r\n@Component({\r\n  selector: 'bps-modal',\r\n  exportAs: 'bpsModal',\r\n  templateUrl: './bps-modal.component.html',\r\n  styleUrls: ['./bps-modal.component.css'],\r\n  // Using OnPush for modal caused footer can not to detect changes. we can fix it when 8.x.\r\n  changeDetection: ChangeDetectionStrategy.Default\r\n})\r\n\r\n// tslint:disable-next-line:no-any\r\nexport class BpsModalComponent<T = any, R = any> extends BpsModalRef<T, R>\r\n  implements OnInit, OnChanges, AfterViewInit, OnDestroy, ModalOptions<T> {\r\n  @Input() @InputBoolean() bpsVisible: boolean = false;\r\n  @Input() @InputBoolean() bpsClosable: boolean = true;\r\n  @Input() @InputBoolean() bpsOkLoading: boolean = false;\r\n  @Input() @InputBoolean() bpsOkDisabled: boolean = false;\r\n  @Input() @InputBoolean() bpsCancelDisabled: boolean = false;\r\n  @Input() @InputBoolean() bpsCancelLoading: boolean = false;\r\n  @Input() @InputBoolean() bpsKeyboard: boolean = true;\r\n  @Input() @InputBoolean() bpsNoAnimation = false;\r\n  @Input() @InputBoolean() bpsModalDisabled = false;\r\n\r\n  // TODO(hsuanxyz): add default value once old API is deprecated.\r\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) @InputBoolean() bpsMask: boolean;\r\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) @InputBoolean() bpsMaskClosable: boolean;\r\n\r\n  @Input() bpsContent: string | TemplateRef<{}> | Type<T>; // [STATIC] If not specified, will use <ng-content>\r\n  @Input() bpsComponentParams: T; // [STATIC] ONLY avaliable when nzContent is a component\r\n  @Input() bpsFooter: string | TemplateRef<{}> | Array<ModalButtonOptions<T>> | null; // [STATIC] Default Modal ONLY\r\n  @Input() bpsGetContainer: HTMLElement | OverlayRef | (() => HTMLElement | OverlayRef) = () => this.overlay.create(); // [STATIC]\r\n  @Input() bpsZIndex: number = 1000;\r\n  @Input() bpsWidth: number | string = 520;\r\n  @Input() bpsWrapClassName: string;\r\n  @Input() bpsClassName: string;\r\n  @Input() bpsStyle: object;\r\n  @Input() bpsTitle: string | TemplateRef<{}>;\r\n  @Input() bpsCloseIcon: string | TemplateRef<void> = 'close';\r\n  @Input() bpsMaskStyle: object;\r\n  @Input() bpsBodyStyle: object;\r\n  @Input() bpsOkText: string | null;\r\n  @Input() bpsCancelText: string | null;\r\n  @Input() bpsOkType: string = 'variation-1';\r\n  @Input() bpsIconType: string = 'question-circle'; // Confirm Modal ONLY\r\n  @Input() bpsModalType: ModalType = 'default';\r\n\r\n  @Input() @Output() readonly bpsOnOk: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\r\n  @Input() @Output() readonly bpsOnCancel: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\r\n\r\n  @Output() readonly bpsAfterOpen = new EventEmitter<void>(); // Trigger when modal open(visible) after animations\r\n  @Output() readonly bpsAfterClose = new EventEmitter<R>(); // Trigger when modal leave-animation over\r\n  @Output() readonly bpsVisibleChange = new EventEmitter<boolean>();\r\n\r\n  @ViewChild('modalContainer', { static: true }) modalContainer: ElementRef;\r\n  @ViewChild('bodyContainer', { static: false, read: ViewContainerRef }) bodyContainer: ViewContainerRef;\r\n  @ViewChild('autoFocusButtonOk', { static: false, read: ElementRef }) autoFocusButtonOk: ElementRef; // Only aim to focus the ok button that needs to be auto focused\r\n\r\n  @ContentChild(BpsModalFooterDirective, { static: false })\r\n  set modalFooter(value: BpsModalFooterDirective) {\r\n    if (value && value.templateRef) {\r\n      this.setFooterWithTemplate(value.templateRef);\r\n    }\r\n  }\r\n\r\n  get afterOpen(): Observable<void> {\r\n    // Observable alias for nzAfterOpen\r\n    return this.bpsAfterOpen.asObservable();\r\n  }\r\n\r\n  get afterClose(): Observable<R> {\r\n    // Observable alias for nzAfterClose\r\n    return this.bpsAfterClose.asObservable();\r\n  }\r\n\r\n  get cancelText(): string {\r\n    return this.bpsCancelText || this.locale.cancelText!;\r\n  }\r\n\r\n  get okText(): string {\r\n    return this.bpsOkText || this.locale.okText!;\r\n  }\r\n\r\n  get hidden(): boolean {\r\n    return !this.bpsVisible && !this.animationState;\r\n  } // Indicate whether this dialog should hidden\r\n\r\n  /**\r\n   * @description\r\n   * The calculated highest weight of mask value\r\n   *\r\n   * Weight of different mask input:\r\n   * component default value < global configuration < component input value\r\n   */\r\n  get mask(): boolean {\r\n    if (this.bpsMask != null) {\r\n      return this.bpsMask;\r\n    } else if (this.bpsModalGlobalConfig && this.bpsModalGlobalConfig.bpsMask != null) {\r\n      return this.bpsModalGlobalConfig.bpsMask;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description\r\n   * The calculated highest weight of maskClosable value\r\n   *\r\n   * Weight of different maskClosable input:\r\n   * component default value < global configuration < component input value\r\n   */\r\n  get maskClosable(): boolean {\r\n    if (this.bpsMaskClosable != null) {\r\n      return this.bpsMaskClosable;\r\n    } else if (this.bpsModalGlobalConfig && this.bpsModalGlobalConfig.bpsMaskClosable != null) {\r\n      return this.bpsModalGlobalConfig.bpsMaskClosable;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  locale: { okText?: string; cancelText?: string } = {};\r\n  maskAnimationClassMap: object | null;\r\n  modalAnimationClassMap: object | null;\r\n  transformOrigin = '0px 0px 0px'; // The origin point that animation based on\r\n\r\n  private contentComponentRef: ComponentRef<T>; // Handle the reference when using nzContent as Component\r\n  private animationState: AnimationState; // Current animation state\r\n  private container: HTMLElement | OverlayRef;\r\n  private unsubscribe$ = new Subject<void>();\r\n  private previouslyFocusedElement: HTMLElement;\r\n  private focusTrap: FocusTrap;\r\n  private scrollStrategy: BlockScrollStrategy;\r\n  private overlayRef: OverlayRef;\r\n  private dialogMouseDown = false;\r\n  private timeoutId: number;\r\n\r\n  [key: string]: any; // tslint:disable-line:no-any\r\n\r\n  constructor(\r\n    public nzConfigService: NzConfigService,\r\n    private overlay: Overlay,\r\n    private overlayKeyboardDispatcher: OverlayKeyboardDispatcher,\r\n    private i18n: NzI18nService,\r\n    private cfr: ComponentFactoryResolver,\r\n    private elementRef: ElementRef,\r\n    private viewContainer: ViewContainerRef,\r\n    private modalControl: BpsModalControlService,\r\n    private focusTrapFactory: FocusTrapFactory,\r\n    private cdr: ChangeDetectorRef,\r\n    @Optional() @Inject(NZ_MODAL_CONFIG) private bpsModalGlobalConfig: BpsModalConfig,\r\n    @Inject(DOCUMENT) private document: any // tslint:disable-line:no-any\r\n  ) {\r\n    super();\r\n    this.scrollStrategy = this.overlay.scrollStrategies.block();\r\n\r\n    if (this.bpsModalGlobalConfig) {\r\n      warnDeprecation(\r\n        '`NZ_MODAL_CONFIG` has been deprecated and will be removed in 9.0.0. Please use global config instead.'\r\n      );\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.i18n.localeChange.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\r\n      this.locale = this.i18n.getLocaleData('Modal');\r\n    });\r\n\r\n    if (this.isComponent(this.bpsContent)) {\r\n      this.createDynamicComponent(this.bpsContent as Type<T>); // Create component along without View\r\n    }\r\n\r\n    if (this.isModalButtons(this.bpsFooter)) {\r\n      // Setup default button options\r\n      this.bpsFooter = this.formatModalButtons(this.bpsFooter as Array<ModalButtonOptions<T>>);\r\n    }\r\n\r\n    // Place the modal dom to elsewhere\r\n    this.container = typeof this.bpsGetContainer === 'function' ? this.bpsGetContainer() : this.bpsGetContainer;\r\n    if (this.container instanceof HTMLElement) {\r\n      this.container.appendChild(this.elementRef.nativeElement);\r\n      fromEvent<KeyboardEvent>(this.document.body, 'keydown')\r\n        .pipe(takeUntil(this.unsubscribe$))\r\n        .subscribe(e => this.keydownListener(e));\r\n    } else if (this.container instanceof OverlayRef) {\r\n      // NOTE: only attach the dom to overlay, the view container is not changed actually\r\n      this.setOverlayRef(this.container);\r\n      this.container.overlayElement.appendChild(this.elementRef.nativeElement);\r\n    }\r\n\r\n    if (this.overlayRef) {\r\n      this.overlayRef\r\n        .keydownEvents()\r\n        .pipe(takeUntil(this.unsubscribe$))\r\n        .subscribe(e => this.keydownListener(e));\r\n    }\r\n\r\n    // Register modal when afterOpen/afterClose is stable\r\n    this.modalControl.registerModal(this);\r\n  }\r\n\r\n  // [NOTE] NOT available when using by service!\r\n  // Because ngOnChanges never be called when using by service,\r\n  // here we can't support \"nzContent\"(Component) etc. as inputs that initialized dynamically.\r\n  // BUT: User also can change \"nzContent\" dynamically to trigger UI changes (provided you don't use \bComponent that needs initializations)\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.bpsVisible) {\r\n      this.handleVisibleStateChange(this.bpsVisible, !changes.bpsVisible.firstChange); // Do not trigger animation while initializing\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // If using Component, it is the time to attach View while bodyContainer is ready\r\n    if (this.contentComponentRef) {\r\n      this.bodyContainer.insert(this.contentComponentRef.hostView);\r\n    }\r\n\r\n    if (this.autoFocusButtonOk) {\r\n      (this.autoFocusButtonOk.nativeElement as HTMLButtonElement).focus();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // Close self before destructing\r\n    this.changeVisibleFromInside(false).then(() => {\r\n      this.modalControl.deregisterModal(this);\r\n\r\n      if (this.container instanceof OverlayRef) {\r\n        this.container.dispose();\r\n      }\r\n\r\n      this.unsubscribe$.next();\r\n      this.unsubscribe$.complete();\r\n    });\r\n    clearTimeout(this.timeoutId);\r\n  }\r\n\r\n  setFooterWithTemplate(templateRef: TemplateRef<{}>): void {\r\n    this.bpsFooter = templateRef;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  setOverlayRef(overlayRef: OverlayRef): void {\r\n    this.overlayRef = overlayRef;\r\n  }\r\n\r\n  keydownListener(event: KeyboardEvent): void {\r\n    if (event.keyCode === ESCAPE && this.bpsKeyboard) {\r\n      this.onClickOkCancel('cancel');\r\n    }\r\n  }\r\n\r\n  open(): void {\r\n    this.changeVisibleFromInside(true);\r\n  }\r\n\r\n  close(result?: R): void {\r\n    this.changeVisibleFromInside(false, result);\r\n  }\r\n\r\n  destroy(result?: R): void {\r\n    // Destroy equals Close\r\n    this.close(result);\r\n  }\r\n\r\n  triggerOk(): void {\r\n    this.onClickOkCancel('ok');\r\n  }\r\n\r\n  triggerCancel(): void {\r\n    this.onClickOkCancel('cancel');\r\n  }\r\n\r\n  getInstance(): BpsModalComponent {\r\n    return this;\r\n  }\r\n\r\n  getContentComponentRef(): ComponentRef<T> {\r\n    return this.contentComponentRef;\r\n  }\r\n\r\n  getContentComponent(): T {\r\n    return this.contentComponentRef && this.contentComponentRef.instance;\r\n  }\r\n\r\n  getElement(): HTMLElement {\r\n    return this.elementRef && this.elementRef.nativeElement;\r\n  }\r\n\r\n  onMaskDialogDown(): void {\r\n    this.dialogMouseDown = true;\r\n  }\r\n\r\n  onDialogUp(): void {\r\n    if (this.dialogMouseDown) {\r\n      this.timeoutId = setTimeout(() => {\r\n        this.dialogMouseDown = false;\r\n      }, 0) as any;\r\n    }\r\n  }\r\n\r\n  onClickMask($event: MouseEvent): void {\r\n    if (\r\n      this.mask &&\r\n      this.maskClosable &&\r\n      ($event.target as HTMLElement).classList.contains(WRAP_CLASS_NAME) &&\r\n      this.bpsVisible &&\r\n      !this.dialogMouseDown\r\n    ) {\r\n      this.onClickOkCancel('cancel');\r\n    }\r\n  }\r\n\r\n  isModalType(type: ModalType): boolean {\r\n    return this.bpsModalType === type;\r\n  }\r\n\r\n  public onClickCloseBtn(): void {\r\n    if (this.bpsVisible) {\r\n      this.onClickOkCancel('cancel');\r\n    }\r\n  }\r\n\r\n  public onClickOkCancel(type: 'ok' | 'cancel'): void {\r\n    const trigger = { ok: this.bpsOnOk, cancel: this.bpsOnCancel }[type];\r\n    const loadingKey = { ok: 'bpsOkLoading', cancel: 'bpsCancelLoading' }[type];\r\n    if (trigger instanceof EventEmitter) {\r\n      trigger.emit(this.getContentComponent());\r\n    } else if (typeof trigger === 'function') {\r\n      const result = trigger(this.getContentComponent());\r\n      const caseClose = (doClose: boolean | void | {}) => doClose !== false && this.close(doClose as R); // Users can return \"false\" to prevent closing by default\r\n      if (isPromise(result)) {\r\n        this[loadingKey] = true;\r\n        const handleThen = (doClose: boolean | void | {}) => {\r\n          this[loadingKey] = false;\r\n          caseClose(doClose);\r\n        };\r\n        (result as Promise<void>).then(handleThen).catch(handleThen);\r\n      } else {\r\n        caseClose(result);\r\n      }\r\n    }\r\n  }\r\n\r\n  public isNonEmptyString(value: {}): boolean {\r\n    return typeof value === 'string' && value !== '';\r\n  }\r\n\r\n  public isTemplateRef(value: {}): boolean {\r\n    return value instanceof TemplateRef;\r\n  }\r\n\r\n  public isComponent(value: {}): boolean {\r\n    return value instanceof Type;\r\n  }\r\n\r\n  public isModalButtons(value: string | TemplateRef<{}> | Array<ModalButtonOptions<T>> | null): boolean {\r\n    return Array.isArray(value) && value.length > 0;\r\n  }\r\n\r\n  // Do rest things when visible state changed\r\n  private handleVisibleStateChange(visible: boolean, animation: boolean = true, closeResult?: R): Promise<void> {\r\n    if (visible) {\r\n      // Hide scrollbar at the first time when shown up\r\n      this.scrollStrategy.enable();\r\n      this.savePreviouslyFocusedElement();\r\n      this.trapFocus();\r\n      if (this.container instanceof OverlayRef) {\r\n        this.overlayKeyboardDispatcher.add(this.overlayRef);\r\n      }\r\n    } else {\r\n      if (this.container instanceof OverlayRef) {\r\n        this.overlayKeyboardDispatcher.remove(this.overlayRef);\r\n      }\r\n    }\r\n\r\n    return Promise.resolve(animation ? this.animateTo(visible) : undefined).then(() => {\r\n      // Emit open/close event after animations over\r\n      if (visible) {\r\n        this.bpsAfterOpen.emit();\r\n      } else {\r\n        this.bpsAfterClose.emit(closeResult);\r\n        this.restoreFocus();\r\n        this.scrollStrategy.disable();\r\n        // Mark the for check so it can react if the view container is using OnPush change detection.\r\n        this.cdr.markForCheck();\r\n      }\r\n    });\r\n  }\r\n\r\n  // Lookup a button's property, if the prop is a function, call & then return the result, otherwise, return itself.\r\n  public getButtonCallableProp(options: ModalButtonOptions<T>, prop: string): {} {\r\n    const value = options[prop];\r\n    const args: T[] = [];\r\n    if (this.contentComponentRef) {\r\n      args.push(this.contentComponentRef.instance);\r\n    }\r\n    return typeof value === 'function' ? value.apply(options, args) : value;\r\n  }\r\n\r\n  // On nzFooter's modal button click\r\n  public onButtonClick(button: ModalButtonOptions<T>): void {\r\n    const result = this.getButtonCallableProp(button, 'onClick'); // Call onClick directly\r\n    if (isPromise(result)) {\r\n      button.loading = true;\r\n      (result as Promise<{}>).then(() => (button.loading = false)).catch(() => (button.loading = false));\r\n    }\r\n  }\r\n\r\n  // Change nzVisible from inside\r\n  private changeVisibleFromInside(visible: boolean, closeResult?: R): Promise<void> {\r\n    if (this.bpsVisible !== visible) {\r\n      // Change nzVisible value immediately\r\n      this.bpsVisible = visible;\r\n      this.bpsVisibleChange.emit(visible);\r\n      return this.handleVisibleStateChange(visible, true, closeResult);\r\n    }\r\n    return Promise.resolve();\r\n  }\r\n\r\n  private changeAnimationState(state: AnimationState): void {\r\n    this.animationState = state;\r\n    if (state) {\r\n      this.maskAnimationClassMap = {\r\n        [`fade-${state}`]: true,\r\n        [`fade-${state}-active`]: true\r\n      };\r\n      this.modalAnimationClassMap = {\r\n        [`zoom-${state}`]: true,\r\n        [`zoom-${state}-active`]: true\r\n      };\r\n    } else {\r\n      this.maskAnimationClassMap = this.modalAnimationClassMap = null;\r\n    }\r\n  }\r\n\r\n  private animateTo(isVisible: boolean): Promise<void> {\r\n    if (isVisible) {\r\n      // Figure out the lastest click position when shows up\r\n      setTimeout(() => this.updateTransformOrigin()); // [NOTE] Using timeout due to the document.click event is fired later than visible change, so if not postponed to next event-loop, we can't get the lastest click position\r\n    }\r\n\r\n    this.changeAnimationState(isVisible ? 'enter' : 'leave');\r\n    return new Promise(resolve =>\r\n      setTimeout(\r\n        () => {\r\n          // Return when animation is over\r\n          this.changeAnimationState(null);\r\n          resolve();\r\n        },\r\n        this.bpsNoAnimation ? 0 : MODAL_ANIMATE_DURATION\r\n      )\r\n    );\r\n  }\r\n\r\n  private formatModalButtons(buttons: Array<ModalButtonOptions<T>>): Array<ModalButtonOptions<T>> {\r\n    return buttons.map(button => {\r\n      return {\r\n        ...{\r\n          type: 'default',\r\n          size: 'default',\r\n          autoLoading: true,\r\n          show: true,\r\n          loading: false,\r\n          disabled: false\r\n        },\r\n        ...button\r\n      };\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Create a component dynamically but not attach to any View (this action will be executed when bodyContainer is ready)\r\n   * @param component Component class\r\n   */\r\n  private createDynamicComponent(component: Type<T>): void {\r\n    const factory = this.cfr.resolveComponentFactory(component);\r\n    const childInjector = Injector.create({\r\n      providers: [{ provide: BpsModalRef, useValue: this }],\r\n      parent: this.viewContainer.parentInjector\r\n    });\r\n    this.contentComponentRef = factory.create(childInjector);\r\n    if (this.bpsComponentParams) {\r\n      Object.assign(this.contentComponentRef.instance, this.bpsComponentParams);\r\n    }\r\n    // Do the first change detection immediately (or we do detection at ngAfterViewInit, multi-changes error will be thrown)\r\n    this.contentComponentRef.changeDetectorRef.detectChanges();\r\n  }\r\n\r\n  // Update transform-origin to the last click position on document\r\n  private updateTransformOrigin(): void {\r\n    const modalElement = this.modalContainer.nativeElement as HTMLElement;\r\n    if (this.previouslyFocusedElement) {\r\n      const previouslyDOMRect = this.previouslyFocusedElement.getBoundingClientRect();\r\n      const lastPosition = getElementOffset(this.previouslyFocusedElement);\r\n      const x = lastPosition.left + previouslyDOMRect.width / 2;\r\n      const y = lastPosition.top + previouslyDOMRect.height / 2;\r\n      this.transformOrigin = `${x - modalElement.offsetLeft}px ${y - modalElement.offsetTop}px 0px`;\r\n    }\r\n  }\r\n\r\n  private savePreviouslyFocusedElement(): void {\r\n    if (this.document) {\r\n      this.previouslyFocusedElement = this.document.activeElement as HTMLElement;\r\n    }\r\n  }\r\n\r\n  private trapFocus(): void {\r\n    if (!this.focusTrap) {\r\n      this.focusTrap = this.focusTrapFactory.create(this.elementRef.nativeElement);\r\n    }\r\n    this.focusTrap.focusInitialElementWhenReady();\r\n  }\r\n\r\n  private restoreFocus(): void {\r\n    // We need the extra check, because IE can set the `activeElement` to null in some cases.\r\n    if (this.previouslyFocusedElement && typeof this.previouslyFocusedElement.focus === 'function') {\r\n      this.previouslyFocusedElement.focus();\r\n    }\r\n    if (this.focusTrap) {\r\n      this.focusTrap.destroy();\r\n    }\r\n  }\r\n}\r\n","<editor [class.bps-editor-disabled]=\"disabled\"\n        [id]=\"editorID\"\n        *ngIf=\"showEditor\"\n        [init]=\"tinyMceSettings\"\n        class=\"bps-editor\"\n        [disabled]=\"disabled\"></editor>\n","import { Component, OnInit, ViewEncapsulation, Output, Input, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\r\n\ndeclare var tinymce: any;\n\n@Component({\n  exportAs: 'bpsTextEditor',\n  selector: 'bps-text-editor',\n  templateUrl: './bps-text-editor.component.html',\n  styleUrls: ['./bps-text-editor.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class BpsTextEditorComponent implements OnInit, OnChanges {\n\n  showEditor = false;\r\n  @Input() @InputBoolean() lazyLoaded = false;\r\n  @Output() oninit: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() onchange: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() onblur: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() onkeyup: EventEmitter<any> = new EventEmitter<any>();\r\n  @Input() @InputBoolean() disabled = false;\r\n  @Input() height = '250px';\r\n  @Input() editorID = 'myEditor';\r\n  @Input() statusbar = false;\r\n  @Input() resize = false;\r\n  // tslint:disable-next-line: max-line-length\r\n  @Input() toolbarmobile = ['bold', 'italic', 'underline', 'strikethrough', 'alignleft', 'aligncenter', 'alignright', 'alignjustify', 'bullist', 'numlist', 'forecolor'];\r\n  @Input() toolbar = 'bold italic underline forecolor | strikethrough backcolor | alignleft aligncenter alignright alignjustify | bullist numlist image';\r\n  @Input() tinyMceSettings!: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    if (!this.lazyLoaded) {\r\n      this.initTinyMCE();\r\n    }\r\n  }\n\n  initTinyMCE() {\n    if (this.tinyMceSettings === undefined) {\r\n      this.tinyMceSettings = {\r\n        mobile: {\r\n          theme: 'mobile',\r\n          plugins: ['image table textcolor lists advlist'],\r\n          toolbar: this.toolbarmobile\r\n        },\r\n        menubar: false,\r\n        content_css: '/assets/tiny.css',\r\n        image_title: true,\r\n        toolbar_location: 'bottom',\r\n        resize: this.resize,\r\n        automatic_uploads: true,\r\n        height: this.height,\r\n        statusbar: this.statusbar,\r\n        file_picker_types: 'image',\r\n        images_upload_url: '#',\r\n        setup: (editor: any) => {\r\n          editor.on('init', (obj) => {\r\n            if (this.disabled) {\r\n              this.disableEditor();\r\n            }\r\n            this.oninit.emit(obj);\r\n          });\r\n          editor.on('blur', (obj) => {\r\n            this.onblur.emit(obj);\r\n          });\r\n          editor.on('keyup', (obj) => {\r\n            this.onkeyup.emit(obj);\r\n          });\r\n          editor.on('Change', (obj) => {\r\n            this.onchange.emit(obj);\r\n          });\r\n        },\r\n        color_map: [\r\n          \"e94c0a\", \"Orange\",\r\n          \"00a2d1\", \"Blue\",\r\n          \"7bc053\", \"Green\",\r\n          \"d80f0f\", \"Red\",\r\n          \"e9d90a\", \"Yellow\",\r\n          \"ffffff\", \"White\"\r\n        ],\r\n        plugins: ['image table textcolor lists advlist'],\r\n        toolbar: this.toolbar\r\n      };\r\n    }\r\n\r\n    setTimeout(() => {\r\n      this.showEditor = true;\r\n    }, 100);\r\n  }\n\n  disableEditor() {\n    tinymce.get(this.editorID).mode.set('readonly');\r\n  }\n\n  enableEditor() {\n    tinymce.get(this.editorID).mode.set('design');\r\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.disabled !== null && changes.disabled !== undefined && tinymce.get(this.editorID)) {\r\n      if (changes.disabled) {\r\n        this.disableEditor();\r\n      } else {\r\n        this.enableEditor();\r\n      }\r\n    }\r\n\r\n    if (changes.lazyLoaded !== null && changes.lazyLoaded !== undefined) {\r\n      if (!this.lazyLoaded) {\r\n        this.initTinyMCE();\r\n      } else if (tinymce.get(this.editorID)) {\r\n        this.showEditor = false;\r\n        tinymce.get(this.editorID).remove();\r\n      }\r\n    }\r\n  }\n\n}\n","<div class=\"bps-grid-selected-value-wrapper\">\n  <span>{{selection[0] + 1}} x {{selection[1] + 1}}</span>\n</div>\n\n<div class=\"bps-grid-wrapper\">\r\n  <ng-container *ngFor=\"let row of _rows; index as i\">\r\n    <div class=\"bps-grid-row\" [class.bps-grid-row-first]=\"i === 0\" [class.bps-grid-row-last]=\"i === _rows.length - 1\">\r\n      <ng-container *ngFor=\"let column of _columns; index as j\">\r\n        <div class=\"bps-grid-square\"\r\n             (mouseenter)=\"previewSelection(i, j)\"\r\n             (mouseleave)=\"endPreviewSelection()\"\r\n             [class.bps-grid-selected-square-top]=\"isSelected(i, j) && !i\"\r\n             [class.bps-grid-selected-square-bottom]=\"isSelected(i, j) && i === selection[0]\"\r\n             [class.bps-grid-selected-square-left]=\"isSelected(i, j) && !j\"\r\n             [class.bps-grid-selected-square-right]=\"isSelected(i, j) && j === selection[1]\"\r\n             [class.bps-grid-first-square-in-row]=\"!j\"\r\n             [class.bps-grid-left-top-corner]=\"i === j && !i\"\r\n             [class.bps-grid-left-bottom-corner]=\"i === _rows.length - 1 && !j\"\r\n             [class.bps-grid-right-bottom-corner]=\"i === _rows.length - 1 && j === _columns.length - 1\"\r\n             [class.bps-grid-right-top-corner]=\"!i && j === _columns.length - 1\"\r\n             (click)=\"onSelectionChange(i, j)\">\r\n        </div>\r\n      </ng-container>\r\n    </div>\r\n  </ng-container>\r\n</div>\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, EventEmitter } from '@angular/core';\r\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\r\n\n@Component({\n  selector: 'bps-grid',\n  templateUrl: './bps-grid.component.html',\n  styleUrls: ['./bps-grid.component.css'],\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BpsGridComponent {\n\n  _columns: any[] = [];\n  _rows: any[] = [];\n  _selection: number[] = [1, 2];\n  _latestSelection: number[] = [1, 2];\n  @Input() @InputBoolean() disabled = false;\n  @Output() selectionChange: EventEmitter<any> = new EventEmitter<any>();\n\n  @Input()\n  set columns(value: number) {\n    if (value >= 1) {\r\n      this._columns = new Array(value);\r\n    }\r\n  }\n\n  @Input()\n  set rows(value: number) {\n    if (value >= 1) {\r\n      this._rows = new Array(value);\r\n    }\r\n  }\n\n  @Input()\n  set selection(value: number[]) {\n    this._selection = value;\r\n    this._latestSelection = value;\r\n  }\n\n  get selection() {\n    return this._selection;\r\n  }\n\n  constructor() { }\n\n  onSelectionChange(row, column) {\n    this.selection = [row, column];\r\n    this._latestSelection = [row, column];\r\n    this.selectionChange.emit(this.selection);\r\n  }\n\n  isSelected(row: number, column: number) {\n    return (row <= this.selection[0] && !column) || (!row && column <= this.selection[1]) || (row <= this.selection[0] && column === this.selection[1]) || (row === this.selection[0] && column <= this.selection[1]); \r\n  }\n\n  previewSelection(row, column) {\r\n    const newSel = [row, column];\r\n    this._selection = [...newSel];\r\n  }\r\n\r\n  endPreviewSelection() {\n    this._selection = this._latestSelection;\r\n  }\n\n}\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[nzClassListAdd]',\n  exportAs: 'nzClassListAdd'\n})\nexport class NzClassListAddDirective {\n  classList: string[] = [];\n\n  @Input()\n  set nzClassListAdd(list: string[]) {\n    this.classList.forEach(name => {\n      this.renderer.removeClass(this.elementRef.nativeElement, name);\n    });\n    list.forEach(name => {\n      this.renderer.addClass(this.elementRef.nativeElement, name);\n    });\n    this.classList = list;\n  }\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n}\n","\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzClassListAddDirective } from './classlist_add';\nimport { NzStringTemplateOutletDirective } from './string_template_outlet';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [NzStringTemplateOutletDirective, NzClassListAddDirective],\n  declarations: [NzStringTemplateOutletDirective, NzClassListAddDirective]\n})\nexport class NzAddOnModule {}\n","import { Platform } from '@angular/cdk/platform';\r\nimport { AfterViewInit, Directive, DoCheck, ElementRef, Input, NgZone, OnDestroy } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { NzResizeService } from 'ng-zorro-antd/core/services';\r\n\r\nexport interface AutoSizeType {\r\n  minRows?: number;\r\n  maxRows?: number;\r\n}\r\n\r\n@Directive({\r\n  selector: 'textarea[bpsAutosize]',\r\n  exportAs: 'bpsAutosize',\r\n  host: {\r\n    // Textarea elements that have the directive applied should have a single row by default.\r\n    // Browsers normally show two rows by default and therefore this limits the minRows binding.\r\n    rows: '1',\r\n    '(input)': 'noopInputHandler()'\r\n  }\r\n})\r\nexport class BpsAutosizeDirective implements AfterViewInit, OnDestroy, DoCheck {\r\n  private autosize: boolean = false;\r\n  private el: HTMLTextAreaElement | HTMLInputElement = this.elementRef.nativeElement;\r\n  private cachedLineHeight!: number;\r\n  private previousValue!: string;\r\n  private previousMinRows: number | undefined;\r\n  private minRows: number | undefined;\r\n  private maxRows: number | undefined;\r\n  private maxHeight: number | null = null;\r\n  private minHeight: number | null = null;\r\n  private destroy$ = new Subject<boolean>();\r\n  private inputGap = 10;\r\n\r\n  @Input()\r\n  set bpsAutosize(value: string | boolean | AutoSizeType) {\r\n    const isAutoSizeType = (data: string | boolean | AutoSizeType): data is AutoSizeType =>\r\n      typeof data !== 'string' && typeof data !== 'boolean' && (!!data.maxRows || !!data.minRows);\r\n    if (typeof value === 'string' || value === true) {\r\n      this.autosize = true;\r\n    } else if (isAutoSizeType(value)) {\r\n      this.autosize = true;\r\n      this.minRows = value.minRows;\r\n      this.maxRows = value.maxRows;\r\n      this.maxHeight = this.setMaxHeight();\r\n      this.minHeight = this.setMinHeight();\r\n    }\r\n  }\r\n\r\n  resizeToFitContent(force: boolean = false): void {\r\n    this.cacheTextareaLineHeight();\r\n\r\n    // If we haven't determined the line-height yet, we know we're still hidden and there's no point\r\n    // in checking the height of the textarea.\r\n    if (!this.cachedLineHeight) {\r\n      return;\r\n    }\r\n\r\n    const textarea = this.el as HTMLTextAreaElement;\r\n    const value = textarea.value;\r\n\r\n    // Only resize if the value or minRows have changed since these calculations can be expensive.\r\n    if (!force && this.minRows === this.previousMinRows && value === this.previousValue) {\r\n      return;\r\n    }\r\n    const placeholderText = textarea.placeholder;\r\n\r\n    // Reset the textarea height to auto in order to shrink back to its default size.\r\n    // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\r\n    // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\r\n    // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\r\n    // need to be removed temporarily.\r\n    textarea.classList.add('nz-textarea-autosize-measuring');\r\n    textarea.placeholder = '';\r\n    let height =\r\n      Math.round((textarea.scrollHeight - this.inputGap) / this.cachedLineHeight) * this.cachedLineHeight +\r\n      this.inputGap;\r\n    if (this.maxHeight !== null && height > this.maxHeight) {\r\n      height = this.maxHeight!;\r\n    }\r\n    if (this.minHeight !== null && height < this.minHeight) {\r\n      height = this.minHeight!;\r\n    }\r\n    // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\r\n    textarea.style.height = `${height}px`;\r\n    textarea.classList.remove('nz-textarea-autosize-measuring');\r\n    textarea.placeholder = placeholderText;\r\n\r\n    // On Firefox resizing the textarea will prevent it from scrolling to the caret position.\r\n    // We need to re-set the selection in order for it to scroll to the proper position.\r\n    if (typeof requestAnimationFrame !== 'undefined') {\r\n      this.ngZone.runOutsideAngular(() =>\r\n        requestAnimationFrame(() => {\r\n          const { selectionStart, selectionEnd } = textarea;\r\n\r\n          // IE will throw an \"Unspecified error\" if we try to set the selection range after the\r\n          // element has been removed from the DOM. Assert that the directive hasn't been destroyed\r\n          // between the time we requested the animation frame and when it was executed.\r\n          // Also note that we have to assert that the textarea is focused before we set the\r\n          // selection range. Setting the selection range on a non-focused textarea will cause\r\n          // it to receive focus on IE and Edge.\r\n          if (!this.destroy$.isStopped && document.activeElement === textarea) {\r\n            textarea.setSelectionRange(selectionStart, selectionEnd);\r\n          }\r\n        })\r\n      );\r\n    }\r\n\r\n    this.previousValue = value;\r\n    this.previousMinRows = this.minRows;\r\n  }\r\n\r\n  private cacheTextareaLineHeight(): void {\r\n    if (this.cachedLineHeight >= 0 || !this.el.parentNode) {\r\n      return;\r\n    }\r\n\r\n    // Use a clone element because we have to override some styles.\r\n    const textareaClone = this.el.cloneNode(false) as HTMLTextAreaElement;\r\n    textareaClone.rows = 1;\r\n\r\n    // Use `position: absolute` so that this doesn't cause a browser layout and use\r\n    // `visibility: hidden` so that nothing is rendered. Clear any other styles that\r\n    // would affect the height.\r\n    textareaClone.style.position = 'absolute';\r\n    textareaClone.style.visibility = 'hidden';\r\n    textareaClone.style.border = 'none';\r\n    textareaClone.style.padding = '0';\r\n    textareaClone.style.height = '';\r\n    textareaClone.style.minHeight = '';\r\n    textareaClone.style.maxHeight = '';\r\n\r\n    // In Firefox it happens that textarea elements are always bigger than the specified amount\r\n    // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\r\n    // As a workaround that removes the extra space for the scrollbar, we can just set overflow\r\n    // to hidden. This ensures that there is no invalid calculation of the line height.\r\n    // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\r\n    textareaClone.style.overflow = 'hidden';\r\n\r\n    this.el.parentNode!.appendChild(textareaClone);\r\n    this.cachedLineHeight = textareaClone.clientHeight - this.inputGap;\r\n    this.el.parentNode!.removeChild(textareaClone);\r\n\r\n    // Min and max heights have to be re-calculated if the cached line height changes\r\n    this.maxHeight = this.setMaxHeight();\r\n    this.minHeight = this.setMinHeight();\r\n  }\r\n\r\n  setMinHeight(): number | null {\r\n    const minHeight =\r\n      this.minRows && this.cachedLineHeight ? this.minRows * this.cachedLineHeight + this.inputGap : null;\r\n\r\n    if (minHeight !== null) {\r\n      this.el.style.minHeight = `${minHeight}px`;\r\n    }\r\n    return minHeight;\r\n  }\r\n\r\n  setMaxHeight(): number | null {\r\n    const maxHeight =\r\n      this.maxRows && this.cachedLineHeight ? this.maxRows * this.cachedLineHeight + this.inputGap : null;\r\n    if (maxHeight !== null) {\r\n      this.el.style.maxHeight = `${maxHeight}px`;\r\n    }\r\n    return maxHeight;\r\n  }\r\n\r\n  noopInputHandler(): void {\r\n    // no-op handler that ensures we're running change detection on input events.\r\n  }\r\n\r\n  constructor(\r\n    private elementRef: ElementRef,\r\n    private ngZone: NgZone,\r\n    private platform: Platform,\r\n    private resizeService: NzResizeService\r\n  ) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.autosize && this.platform.isBrowser) {\r\n      this.resizeToFitContent();\r\n      this.resizeService\r\n        .subscribe()\r\n        .pipe(takeUntil(this.destroy$))\r\n        .subscribe(() => this.resizeToFitContent(true));\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next(true);\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  ngDoCheck(): void {\r\n    if (this.autosize && this.platform.isBrowser) {\r\n      this.resizeToFitContent();\r\n    }\r\n  }\r\n}\r\n","import {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChild,\r\n  ElementRef,\r\n  Input,\r\n  isDevMode,\r\n  OnDestroy,\r\n  Renderer2\r\n} from '@angular/core';\r\nimport { EMPTY, merge, Subject } from 'rxjs';\r\nimport { map, startWith, takeUntil } from 'rxjs/operators';\r\n\r\nimport { isNotNil } from 'ng-zorro-antd/core/util';\r\n\r\nimport { BpsInputDirective } from './bps-input.directive';\r\n\r\n@Component({\r\n  selector: 'bps-textarea-count',\r\n  template: ` <ng-content select=\"textarea[bps-input]\"></ng-content> `,\r\n  host: {\r\n    class: 'ant-input-textarea-show-count'\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class BpsTextareaCountComponent implements AfterContentInit, OnDestroy {\r\n  @ContentChild(BpsInputDirective, { static: true }) nzInputDirective!: BpsInputDirective;\r\n  @Input() bpsMaxCharacterCount: number = 0;\r\n  @Input() bpsComputeCharacterCount: (v: string) => number = v => v.length;\r\n  @Input() bpsFormatter: (cur: number, max: number) => string = (c, m) => `${c}${m > 0 ? `/${m}` : ``}`;\r\n\r\n  private configChange$ = new Subject();\r\n  private destroy$ = new Subject<boolean>();\r\n\r\n  constructor(private renderer: Renderer2, private elementRef: ElementRef<HTMLElement>) { }\r\n\r\n  ngAfterContentInit(): void {\r\n    if (!this.nzInputDirective && isDevMode()) {\r\n      throw new Error('[nz-textarea-count]: Could not find matching textarea[nz-input] child.');\r\n    }\r\n\r\n    if (this.nzInputDirective.ngControl) {\r\n      const valueChanges = this.nzInputDirective.ngControl.valueChanges || EMPTY;\r\n      merge(valueChanges, this.configChange$)\r\n        .pipe(\r\n          takeUntil(this.destroy$),\r\n          map(() => this.nzInputDirective.ngControl.value),\r\n          startWith(this.nzInputDirective.ngControl.value as string)\r\n        )\r\n        .subscribe(value => {\r\n          this.setDataCount(value);\r\n        });\r\n    }\r\n  }\r\n\r\n  setDataCount(value: string): void {\r\n    const inputValue = isNotNil(value) ? String(value) : '';\r\n    const currentCount = this.bpsComputeCharacterCount(inputValue);\r\n    const dataCount = this.bpsFormatter(currentCount, this.bpsMaxCharacterCount);\r\n    this.renderer.setAttribute(this.elementRef.nativeElement, 'data-count', dataCount);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.configChange$.complete();\r\n    this.destroy$.next(true);\r\n    this.destroy$.complete();\r\n  }\r\n}\r\n","import { AfterViewInit, Directive, ElementRef, Host, Optional, Renderer2 } from '@angular/core';\nimport { BpsButtonGroupComponent } from '../bps-button/bps-button-group.component';\r\n\n\n@Directive({\n  selector: '[bps-button][bps-dropdown]'\n})\nexport class BpsDropdownButtonDirective implements AfterViewInit {\n  constructor(\n    private renderer: Renderer2,\n    @Host() @Optional() private nzButtonGroupComponent: BpsButtonGroupComponent,\n    private elementRef: ElementRef\n  ) {}\n  ngAfterViewInit(): void {\n    const parentElement = this.renderer.parentNode(this.elementRef.nativeElement);\n    if (this.nzButtonGroupComponent && parentElement) {\n      this.renderer.addClass(parentElement, 'ant-dropdown-button');\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\n@Component({\n  selector: 'bps-option-group',\n  exportAs: 'bpsOptionGroup',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: ` <ng-content></ng-content> `\n})\nexport class BpsOptionGroupComponent implements OnChanges {\n  @Input() bpsLabel: string | number | TemplateRef<NzSafeAny> | null = null;\n  changes = new Subject<void>();\n  ngOnChanges(): void {\n    this.changes.next();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  Optional,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\n\nimport { NzDestroyService } from 'ng-zorro-antd/core/services';\nimport { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\nimport { BpsOptionGroupComponent } from './option-group.component';\n\n@Component({\n  selector: 'bps-option',\n  exportAs: 'bpsOption',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [NzDestroyService],\n  template: `\n    <ng-template>\n      <ng-content></ng-content>\n    </ng-template>\n  `\n})\nexport class BpsOptionComponent implements OnChanges, OnInit {\n  static ngAcceptInputType_bpsDisabled: BooleanInput;\n  static ngAcceptInputType_bpsHide: BooleanInput;\n  static ngAcceptInputType_bpsCustomContent: BooleanInput;\n\n  changes = new Subject<void>();\n  groupLabel: string | number | TemplateRef<NzSafeAny> | null = null;\n  @ViewChild(TemplateRef, { static: true }) template!: TemplateRef<NzSafeAny>;\n  @Input() bpsTitle?: string | number | null;\n  @Input() bpsLabel: string | number | null = null;\n  @Input() bpsValue: NzSafeAny | null = null;\n  @Input() bpsKey?: string | number;\n  @Input() @InputBoolean() bpsDisabled = false;\n  @Input() @InputBoolean() bpsHide = false;\n  @Input() @InputBoolean() bpsCustomContent = false;\n\n  constructor(@Optional() private nzOptionGroupComponent: BpsOptionGroupComponent, private destroy$: NzDestroyService) {}\n\n  ngOnInit(): void {\n    if (this.nzOptionGroupComponent) {\n      this.nzOptionGroupComponent.changes.pipe(startWith(true), takeUntil(this.destroy$)).subscribe(() => {\n        this.groupLabel = this.nzOptionGroupComponent.bpsLabel;\n      });\n    }\n  }\n\n  ngOnChanges(): void {\n    this.changes.next();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { NzDestroyService } from 'ng-zorro-antd/core/services';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\n@Component({\n  selector: 'bps-option-item',\n  template: `\n    <div class=\"ant-select-item-option-content\">\n      <ng-template [ngIf]=\"customContent\" [ngIfElse]=\"noCustomContent\">\n        <ng-template [ngTemplateOutlet]=\"template\"></ng-template>\n      </ng-template>\n      <ng-template #noCustomContent>{{ label }}</ng-template>\n    </div>\n    <div *ngIf=\"showState && selected\" class=\"ant-select-item-option-state\" style=\"user-select: none\" unselectable=\"on\">\n      <span nz-icon nzType=\"check\" class=\"ant-select-selected-icon\" *ngIf=\"!icon; else icon\"></span>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    class: 'ant-select-item ant-select-item-option',\n    '[attr.title]': 'title',\n    '[class.ant-select-item-option-grouped]': 'grouped',\n    '[class.ant-select-item-option-selected]': 'selected && !disabled',\n    '[class.ant-select-item-option-disabled]': 'disabled',\n    '[class.ant-select-item-option-active]': 'activated && !disabled'\n  },\n  providers: [NzDestroyService]\n})\nexport class BpsOptionItemComponent implements OnChanges, OnInit {\n  selected = false;\n  activated = false;\n  @Input() grouped = false;\n  @Input() customContent = false;\n  @Input() template: TemplateRef<NzSafeAny> | null = null;\n  @Input() disabled = false;\n  @Input() showState = false;\n  @Input() title?: string | number | null;\n  @Input() label: string | number | null = null;\n  @Input() value: NzSafeAny | null = null;\n  @Input() activatedValue: NzSafeAny | null = null;\n  @Input() listOfSelectedValue: NzSafeAny[] = [];\n  @Input() icon: TemplateRef<NzSafeAny> | null = null;\n  @Input() compareWith!: (o1: NzSafeAny, o2: NzSafeAny) => boolean;\n  @Output() readonly itemClick = new EventEmitter<NzSafeAny>();\n  @Output() readonly itemHover = new EventEmitter<NzSafeAny>();\n\n  constructor(\n    private elementRef: ElementRef<HTMLElement>,\n    private ngZone: NgZone,\n    private destroy$: NzDestroyService\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { value, activatedValue, listOfSelectedValue } = changes;\n    if (value || listOfSelectedValue) {\n      this.selected = this.listOfSelectedValue.some(v => this.compareWith(v, this.value));\n    }\n    if (value || activatedValue) {\n      this.activated = this.compareWith(this.activatedValue, this.value);\n    }\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      fromEvent(this.elementRef.nativeElement, 'click')\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(() => {\n          if (!this.disabled) {\n            this.ngZone.run(() => this.itemClick.emit(this.value));\n          }\n        });\n\n      fromEvent(this.elementRef.nativeElement, 'mouseenter')\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(() => {\n          if (!this.disabled) {\n            this.ngZone.run(() => this.itemHover.emit(this.value));\n          }\n        });\n    });\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, TemplateRef, ViewEncapsulation } from '@angular/core';\n\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\n@Component({\n  selector: 'bps-option-item-group',\n  template: ` <ng-container *nzStringTemplateOutlet=\"bpsLabel\">{{ bpsLabel }}</ng-container> `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    class: 'ant-select-item ant-select-item-group'\n  }\n})\nexport class BpsOptionItemGroupComponent {\n  @Input() bpsLabel: string | number | TemplateRef<NzSafeAny> | null = null;\n\n  constructor() {}\n}\n","import { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { NzSelectItemInterface, NzSelectModeType } from './select.types';\n\n@Component({\n  selector: 'bps-option-container',\n  exportAs: 'bpsOptionContainer',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  template: `\n    <div>\n      <div *ngIf=\"listOfContainerItem.length === 0\" class=\"ant-select-item-empty\">\n        <nz-embed-empty nzComponentName=\"select\" [specificContent]=\"notFoundContent!\"></nz-embed-empty>\n      </div>\n      <cdk-virtual-scroll-viewport\n        [class.full-width]=\"!matchWidth\"\n        [itemSize]=\"itemSize\"\n        [maxBufferPx]=\"itemSize * maxItemLength\"\n        [minBufferPx]=\"itemSize * maxItemLength\"\n        (scrolledIndexChange)=\"onScrolledIndexChange($event)\"\n        [style.height.px]=\"listOfContainerItem.length * itemSize\"\n        [style.max-height.px]=\"itemSize * maxItemLength\"\n      >\n        <ng-template\n          cdkVirtualFor\n          [cdkVirtualForOf]=\"listOfContainerItem\"\n          [cdkVirtualForTrackBy]=\"trackValue\"\n          [cdkVirtualForTemplateCacheSize]=\"0\"\n          let-item\n        >\n          <ng-container [ngSwitch]=\"item.type\">\n            <bps-option-item-group *ngSwitchCase=\"'group'\" [bpsLabel]=\"item.groupLabel\"></bps-option-item-group>\n            <bps-option-item\n              *ngSwitchCase=\"'item'\"\n              [icon]=\"menuItemSelectedIcon\"\n              [customContent]=\"item.bpsCustomContent\"\n              [template]=\"item.template\"\n              [grouped]=\"!!item.groupLabel\"\n              [disabled]=\"item.bpsDisabled\"\n              [showState]=\"mode === 'tags' || mode === 'multiple'\"\n              [title]=\"item.bpsTitle\"\n              [label]=\"item.bpsLabel\"\n              [compareWith]=\"compareWith\"\n              [activatedValue]=\"activatedValue\"\n              [listOfSelectedValue]=\"listOfSelectedValue\"\n              [value]=\"item.bpsValue\"\n              (itemHover)=\"onItemHover($event)\"\n              (itemClick)=\"onItemClick($event)\"\n            ></bps-option-item>\n          </ng-container>\n        </ng-template>\n      </cdk-virtual-scroll-viewport>\n      <ng-template [ngTemplateOutlet]=\"dropdownRender\"></ng-template>\n    </div>\n  `,\n  host: { class: 'ant-select-dropdown' }\n})\nexport class BpsOptionContainerComponent implements OnChanges, AfterViewInit {\n  @Input() notFoundContent: string | TemplateRef<NzSafeAny> | undefined = undefined;\n  @Input() menuItemSelectedIcon: TemplateRef<NzSafeAny> | null = null;\n  @Input() dropdownRender: TemplateRef<NzSafeAny> | null = null;\n  @Input() activatedValue: NzSafeAny | null = null;\n  @Input() listOfSelectedValue: NzSafeAny[] = [];\n  @Input() compareWith!: (o1: NzSafeAny, o2: NzSafeAny) => boolean;\n  @Input() mode: NzSelectModeType = 'default';\n  @Input() matchWidth = true;\n  @Input() itemSize = 23;\n  @Input() maxItemLength = 8;\n  @Input() listOfContainerItem: NzSelectItemInterface[] = [];\n  @Output() readonly itemClick = new EventEmitter<NzSafeAny>();\n  @Output() readonly scrollToBottom = new EventEmitter<void>();\n  @ViewChild(CdkVirtualScrollViewport, { static: true }) cdkVirtualScrollViewport!: CdkVirtualScrollViewport;\n  private scrolledIndex = 0;\n\n  constructor() {}\n\n  onItemClick(value: NzSafeAny): void {\n    this.itemClick.emit(value);\n  }\n\n  onItemHover(value: NzSafeAny): void {\n    // TODO: keydown.enter won't activate this value\n    this.activatedValue = value;\n  }\n\n  trackValue(_index: number, option: NzSelectItemInterface): NzSafeAny {\n    return option.key;\n  }\n\n  onScrolledIndexChange(index: number): void {\n    this.scrolledIndex = index;\n    if (index === this.listOfContainerItem.length - this.maxItemLength) {\n      this.scrollToBottom.emit();\n    }\n  }\n\n  scrollToActivatedValue(): void {\n    const index = this.listOfContainerItem.findIndex(item => this.compareWith(item.key, this.activatedValue));\n    if (index < this.scrolledIndex || index >= this.scrolledIndex + this.maxItemLength) {\n      this.cdkVirtualScrollViewport.scrollToIndex(index || 0);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { listOfContainerItem, activatedValue } = changes;\n    if (listOfContainerItem || activatedValue) {\n      this.scrollToActivatedValue();\n    }\n  }\n  ngAfterViewInit(): void {\n    setTimeout(() => this.scrollToActivatedValue());\n  }\n}\n","\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { COMPOSITION_BUFFER_MODE } from '@angular/forms';\n\n@Component({\n  selector: 'bps-select-search',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <input\n      #inputElement\n      [attr.id]=\"bpsId\"\n      autocomplete=\"off\"\n      class=\"ant-select-selection-search-input\"\n      [ngModel]=\"value\"\n      [attr.autofocus]=\"autofocus ? 'autofocus' : null\"\n      [disabled]=\"disabled\"\n      [style.opacity]=\"showInput ? null : 0\"\n      (ngModelChange)=\"onValueChange($event)\"\n      (compositionstart)=\"setCompositionState(true)\"\n      (compositionend)=\"setCompositionState(false)\"\n    />\n    <span #mirrorElement *ngIf=\"mirrorSync\" class=\"ant-select-selection-search-mirror\"></span>\n  `,\n  host: { class: 'ant-select-selection-search' },\n  providers: [{ provide: COMPOSITION_BUFFER_MODE, useValue: false }]\n})\nexport class BpsSelectSearchComponent implements AfterViewInit, OnChanges {\n  @Input() bpsId: string | null = null;\n  @Input() disabled = false;\n  @Input() mirrorSync = false;\n  @Input() showInput = true;\n  @Input() focusTrigger = false;\n  @Input() value = '';\n  @Input() autofocus = false;\n  @Output() readonly valueChange = new EventEmitter<string>();\n  @Output() readonly isComposingChange = new EventEmitter<boolean>();\n  @ViewChild('inputElement', { static: true }) inputElement!: ElementRef;\n  @ViewChild('mirrorElement', { static: false }) mirrorElement?: ElementRef;\n\n  setCompositionState(isComposing: boolean): void {\n    this.isComposingChange.next(isComposing);\n  }\n\n  onValueChange(value: string): void {\n    this.value = value;\n    this.valueChange.next(value);\n    if (this.mirrorSync) {\n      this.syncMirrorWidth();\n    }\n  }\n\n  clearInputValue(): void {\n    const inputDOM = this.inputElement.nativeElement;\n    inputDOM.value = '';\n    this.onValueChange('');\n  }\n\n  syncMirrorWidth(): void {\n    const mirrorDOM = this.mirrorElement!.nativeElement;\n    const hostDOM = this.elementRef.nativeElement;\n    const inputDOM = this.inputElement.nativeElement;\n    this.renderer.removeStyle(hostDOM, 'width');\n    this.renderer.setProperty(mirrorDOM, 'textContent', `${inputDOM.value}\\u00a0`);\n    this.renderer.setStyle(hostDOM, 'width', `${mirrorDOM.scrollWidth}px`);\n  }\n\n  focus(): void {\n    this.focusMonitor.focusVia(this.inputElement, 'keyboard');\n  }\n\n  blur(): void {\n    this.inputElement.nativeElement.blur();\n  }\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2, private focusMonitor: FocusMonitor) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const inputDOM = this.inputElement.nativeElement;\n    const { focusTrigger, showInput } = changes;\n\n    if (showInput) {\n      if (this.showInput) {\n        this.renderer.removeAttribute(inputDOM, 'readonly');\n      } else {\n        this.renderer.setAttribute(inputDOM, 'readonly', 'readonly');\n      }\n    }\n\n    // IE11 cannot input value if focused before removing readonly\n    if (focusTrigger && focusTrigger.currentValue === true && focusTrigger.previousValue === false) {\n      inputDOM.focus();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    if (this.mirrorSync) {\n      this.syncMirrorWidth();\n    }\n    if (this.autofocus) {\n      this.focus();\n    }\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\n@Component({\n  selector: 'bps-select-item',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <ng-container *nzStringTemplateOutlet=\"contentTemplateOutlet; context: { $implicit: contentTemplateOutletContext }\">\n      <div class=\"ant-select-selection-item-content\" *ngIf=\"deletable; else labelTemplate\">{{ label }}</div>\n      <ng-template #labelTemplate>{{ label }}</ng-template>\n    </ng-container>\n    <span *ngIf=\"deletable && !disabled\" class=\"ant-select-selection-item-remove\" (click)=\"onDelete($event)\">\n      <span nz-icon nzType=\"close\" *ngIf=\"!removeIcon; else removeIcon\"></span>\n    </span>\n  `,\n  host: {\n    class: 'ant-select-selection-item',\n    '[attr.title]': 'label',\n    '[class.ant-select-selection-item-disabled]': 'disabled'\n  }\n})\nexport class BpsSelectItemComponent {\n  @Input() disabled = false;\n  @Input() label: string | number | null | undefined = null;\n  @Input() deletable = false;\n  @Input() removeIcon: TemplateRef<NzSafeAny> | null = null;\n  @Input() contentTemplateOutletContext: NzSafeAny | null = null;\n  @Input() contentTemplateOutlet: string | TemplateRef<NzSafeAny> | null = null;\n  @Output() readonly delete = new EventEmitter<MouseEvent>();\n\n  constructor() {}\n\n  onDelete(e: MouseEvent): void {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!this.disabled) {\n      this.delete.next(e);\n    }\n  }\n}\n","\nimport { ChangeDetectionStrategy, Component, Input, TemplateRef, ViewEncapsulation } from '@angular/core';\n\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\n@Component({\n  selector: 'bps-select-placeholder',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <ng-container *nzStringTemplateOutlet=\"placeholder\">\n      {{ placeholder }}\n    </ng-container>\n  `,\n  host: { class: 'ant-select-selection-placeholder' }\n})\nexport class BpsSelectPlaceholderComponent {\n  @Input() placeholder: TemplateRef<NzSafeAny> | string | null = null;\n\n  constructor() {}\n}\n","\nimport { BACKSPACE } from '@angular/cdk/keycodes';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Host,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { fromEvent, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { BpsSelectSearchComponent } from './select-search.component';\nimport { NzSelectItemInterface, NzSelectModeType, NzSelectTopControlItemType } from './select.types';\n\n@Component({\n  selector: 'bps-select-top-control',\n  exportAs: 'bpsSelectTopControl',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <!--single mode-->\n    <ng-container [ngSwitch]=\"mode\">\n      <ng-container *ngSwitchCase=\"'default'\">\n        <bps-select-search\n          [bpsId]=\"bpsId\"\n          [disabled]=\"disabled\"\n          [value]=\"inputValue!\"\n          [showInput]=\"showSearch\"\n          [mirrorSync]=\"false\"\n          [autofocus]=\"autofocus\"\n          [focusTrigger]=\"open\"\n          (isComposingChange)=\"isComposingChange($event)\"\n          (valueChange)=\"onInputValueChange($event)\"\n        ></bps-select-search>\n        <bps-select-item\n          *ngIf=\"isShowSingleLabel\"\n          [deletable]=\"false\"\n          [disabled]=\"false\"\n          [removeIcon]=\"removeIcon\"\n          [label]=\"listOfTopItem[0].bpsLabel\"\n          [contentTemplateOutlet]=\"customTemplate\"\n          [contentTemplateOutletContext]=\"listOfTopItem[0]\"\n        ></bps-select-item>\n      </ng-container>\n      <ng-container *ngSwitchDefault>\n        <!--multiple or tags mode-->\n        <bps-select-item\n          *ngFor=\"let item of listOfSlicedItem; trackBy: trackValue\"\n          [removeIcon]=\"removeIcon\"\n          [label]=\"item.bpsLabel\"\n          [disabled]=\"item.bpsDisabled || disabled\"\n          [contentTemplateOutlet]=\"item.contentTemplateOutlet\"\n          [deletable]=\"true\"\n          [contentTemplateOutletContext]=\"item.contentTemplateOutletContext\"\n          (delete)=\"onDeleteItem(item.contentTemplateOutletContext)\"\n        ></bps-select-item>\n        <bps-select-search\n          [bpsId]=\"bpsId\"\n          [disabled]=\"disabled\"\n          [value]=\"inputValue!\"\n          [autofocus]=\"autofocus\"\n          [showInput]=\"true\"\n          [mirrorSync]=\"true\"\n          [focusTrigger]=\"open\"\n          (isComposingChange)=\"isComposingChange($event)\"\n          (valueChange)=\"onInputValueChange($event)\"\n        ></bps-select-search>\n      </ng-container>\n    </ng-container>\n    <bps-select-placeholder *ngIf=\"isShowPlaceholder\" [placeholder]=\"placeHolder\"></bps-select-placeholder>\n  `,\n  host: { class: 'ant-select-selector' }\n})\nexport class BpsSelectTopControlComponent implements OnChanges, OnInit, OnDestroy {\n  @Input() bpsId: string | null = null;\n  @Input() showSearch = false;\n  @Input() placeHolder: string | TemplateRef<NzSafeAny> | null = null;\n  @Input() open = false;\n  @Input() maxTagCount: number = Infinity;\n  @Input() autofocus = false;\n  @Input() disabled = false;\n  @Input() mode: NzSelectModeType = 'default';\n  @Input() customTemplate: TemplateRef<{ $implicit: NzSelectItemInterface }> | null = null;\n  @Input() maxTagPlaceholder: TemplateRef<{ $implicit: NzSafeAny[] }> | null = null;\n  @Input() removeIcon: TemplateRef<NzSafeAny> | null = null;\n  @Input() listOfTopItem: NzSelectItemInterface[] = [];\n  @Input() tokenSeparators: string[] = [];\n  @Output() readonly tokenize = new EventEmitter<string[]>();\n  @Output() readonly inputValueChange = new EventEmitter<string>();\n  @Output() readonly deleteItem = new EventEmitter<NzSelectItemInterface>();\n  @ViewChild(BpsSelectSearchComponent) nzSelectSearchComponent!: BpsSelectSearchComponent;\n  listOfSlicedItem: NzSelectTopControlItemType[] = [];\n  isShowPlaceholder = true;\n  isShowSingleLabel = false;\n  isComposing = false;\n  inputValue: string | null = null;\n\n  private destroy$ = new Subject<void>();\n\n  updateTemplateVariable(): void {\n    const isSelectedValueEmpty = this.listOfTopItem.length === 0;\n    this.isShowPlaceholder = isSelectedValueEmpty && !this.isComposing && !this.inputValue;\n    this.isShowSingleLabel = !isSelectedValueEmpty && !this.isComposing && !this.inputValue;\n  }\n\n  isComposingChange(isComposing: boolean): void {\n    this.isComposing = isComposing;\n    this.updateTemplateVariable();\n  }\n\n  onInputValueChange(value: string): void {\n    if (value !== this.inputValue) {\n      this.inputValue = value;\n      this.updateTemplateVariable();\n      this.inputValueChange.emit(value);\n      this.tokenSeparate(value, this.tokenSeparators);\n    }\n  }\n\n  tokenSeparate(inputValue: string, tokenSeparators: string[]): void {\n    const includesSeparators = (str: string, separators: string[]): boolean => {\n      // eslint-disable-next-line @typescript-eslint/prefer-for-of\n      for (let i = 0; i < separators.length; ++i) {\n        if (str.lastIndexOf(separators[i]) > 0) {\n          return true;\n        }\n      }\n      return false;\n    };\n    const splitBySeparators = (str: string, separators: string[]): string[] => {\n      const reg = new RegExp(`[${separators.join()}]`);\n      const array = str.split(reg).filter(token => token);\n      return [...new Set(array)];\n    };\n    if (\n      inputValue &&\n      inputValue.length &&\n      tokenSeparators.length &&\n      this.mode !== 'default' &&\n      includesSeparators(inputValue, tokenSeparators)\n    ) {\n      const listOfLabel = splitBySeparators(inputValue, tokenSeparators);\n      this.tokenize.next(listOfLabel);\n    }\n  }\n\n  clearInputValue(): void {\n    if (this.nzSelectSearchComponent) {\n      this.nzSelectSearchComponent.clearInputValue();\n    }\n  }\n\n  focus(): void {\n    if (this.nzSelectSearchComponent) {\n      this.nzSelectSearchComponent.focus();\n    }\n  }\n\n  blur(): void {\n    if (this.nzSelectSearchComponent) {\n      this.nzSelectSearchComponent.blur();\n    }\n  }\n\n  trackValue(_index: number, option: NzSelectTopControlItemType): NzSafeAny {\n    return option.bpsValue;\n  }\n\n  onDeleteItem(item: NzSelectItemInterface): void {\n    if (!this.disabled && !item.bpsDisabled) {\n      this.deleteItem.next(item);\n    }\n  }\n\n  constructor(\n    private elementRef: ElementRef<HTMLElement>,\n    private ngZone: NgZone,\n    @Host() @Optional() public noAnimation: NzNoAnimationDirective | null\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { listOfTopItem, maxTagCount, customTemplate, maxTagPlaceholder } = changes;\n    if (listOfTopItem) {\n      this.updateTemplateVariable();\n    }\n    if (listOfTopItem || maxTagCount || customTemplate || maxTagPlaceholder) {\n      const listOfSlicedItem: NzSelectTopControlItemType[] = this.listOfTopItem.slice(0, this.maxTagCount).map(o => ({\n        bpsLabel: o.bpsLabel,\n        bpsValue: o.bpsValue,\n        bpsDisabled: o.bpsDisabled,\n        contentTemplateOutlet: this.customTemplate,\n        contentTemplateOutletContext: o\n      }));\n      if (this.listOfTopItem.length > this.maxTagCount) {\n        const exceededLabel = `+ ${this.listOfTopItem.length - this.maxTagCount} ...`;\n        const listOfSelectedValue = this.listOfTopItem.map(item => item.bpsValue);\n        const exceededItem = {\n          bpsLabel: exceededLabel,\n          bpsValue: '$$__nz_exceeded_item',\n          bpsDisabled: true,\n          contentTemplateOutlet: this.maxTagPlaceholder,\n          contentTemplateOutletContext: listOfSelectedValue.slice(this.maxTagCount)\n        };\n        listOfSlicedItem.push(exceededItem);\n      }\n      this.listOfSlicedItem = listOfSlicedItem;\n    }\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => {\n      fromEvent<MouseEvent>(this.elementRef.nativeElement, 'click')\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(event => {\n          // `HTMLElement.focus()` is a native DOM API which doesn't require Angular to run change detection.\n          if (event.target !== this.nzSelectSearchComponent.inputElement.nativeElement) {\n            this.nzSelectSearchComponent.focus();\n          }\n        });\n\n      fromEvent<KeyboardEvent>(this.elementRef.nativeElement, 'keydown')\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(event => {\n          if (event.target instanceof HTMLInputElement) {\n            const inputValue = event.target.value;\n\n            if (\n              event.keyCode === BACKSPACE &&\n              this.mode !== 'default' &&\n              !inputValue &&\n              this.listOfTopItem.length > 0\n            ) {\n              event.preventDefault();\n              // Run change detection only if the user has pressed the `Backspace` key and the following condition is met.\n              this.ngZone.run(() => this.onDeleteItem(this.listOfTopItem[this.listOfTopItem.length - 1]));\n            }\n          }\n        });\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n  }\n}\n","\nimport { ChangeDetectionStrategy, Component, Input, TemplateRef, ViewEncapsulation } from '@angular/core';\n\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\n@Component({\n  selector: 'bps-select-arrow',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <span nz-icon nzType=\"loading\" *ngIf=\"loading; else defaultArrow\"></span>\n    <ng-template #defaultArrow>\n      <ng-container *ngIf=\"showArrow && !suffixIcon; else suffixTemplate\">\n        <span nz-icon nzType=\"down\" *ngIf=\"!search\"></span>\n        <span nz-icon nzType=\"search\" *ngIf=\"search\"></span>\n      </ng-container>\n      <ng-template #suffixTemplate>\n        <ng-container *nzStringTemplateOutlet=\"suffixIcon; let suffixIcon\">\n          <span *ngIf=\"suffixIcon\" nz-icon [nzType]=\"suffixIcon\"></span>\n        </ng-container>\n      </ng-template>\n    </ng-template>\n    <ng-container *nzStringTemplateOutlet=\"feedbackIcon\">{{ feedbackIcon }}</ng-container>\n  `,\n  host: {\n    class: 'ant-select-arrow',\n    '[class.ant-select-arrow-loading]': 'loading'\n  }\n})\nexport class BpsSelectArrowComponent {\n  @Input() loading = false;\n  @Input() search = false;\n  @Input() showArrow = false;\n  @Input() suffixIcon: TemplateRef<NzSafeAny> | string | null = null;\n  @Input() feedbackIcon: TemplateRef<NzSafeAny> | string | null = null;\n\n  constructor() {}\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\n@Component({\n  selector: 'bps-select-clear',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <span\n      nz-icon\n      nzType=\"close-circle\"\n      nzTheme=\"fill\"\n      *ngIf=\"!clearIcon; else clearIcon\"\n      class=\"ant-select-close-icon\"\n    ></span>\n  `,\n  host: {\n    class: 'ant-select-clear',\n    '(click)': 'onClick($event)'\n  }\n})\nexport class BpsSelectClearComponent {\n  @Input() clearIcon: TemplateRef<NzSafeAny> | null = null;\n  @Output() readonly clear = new EventEmitter<MouseEvent>();\n\n  constructor() {}\n\n  onClick(e: MouseEvent): void {\n    e.preventDefault();\n    e.stopPropagation();\n    this.clear.emit(e);\n  }\n}\n","import { FocusMonitor } from '@angular/cdk/a11y';\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport { DOWN_ARROW, ENTER, ESCAPE, SPACE, TAB, UP_ARROW } from '@angular/cdk/keycodes';\nimport {\n  CdkConnectedOverlay,\n  CdkOverlayOrigin,\n  ConnectedOverlayPositionChange,\n  ConnectionPositionPair\n} from '@angular/cdk/overlay';\nimport { Platform } from '@angular/cdk/platform';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Host,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  QueryList,\n  Renderer2,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BehaviorSubject, combineLatest, fromEvent, merge, of as observableOf } from 'rxjs';\nimport { distinctUntilChanged, map, startWith, switchMap, takeUntil, withLatestFrom } from 'rxjs/operators';\n\nimport { slideMotion } from 'ng-zorro-antd/core/animation';\nimport { NzConfigKey, NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { NzFormNoStatusService, NzFormStatusService } from 'ng-zorro-antd/core/form';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\nimport { getPlacementName, POSITION_MAP, POSITION_TYPE } from 'ng-zorro-antd/core/overlay';\nimport { cancelRequestAnimationFrame, reqAnimFrame } from 'ng-zorro-antd/core/polyfill';\nimport { NzDestroyService } from 'ng-zorro-antd/core/services';\nimport {\n  BooleanInput,\n  NgClassInterface,\n  NzSafeAny,\n  NzStatus,\n  NzValidateStatus,\n  OnChangeType,\n  OnTouchedType\n} from 'ng-zorro-antd/core/types';\nimport { getStatusClassNames, InputBoolean, isNotNil } from 'ng-zorro-antd/core/util';\n\nimport { BpsOptionGroupComponent } from './option-group.component';\nimport { BpsOptionComponent } from './option.component';\nimport { BpsSelectTopControlComponent } from './select-top-control.component';\nimport {\n  NzFilterOptionType,\n  NzSelectItemInterface,\n  NzSelectModeType,\n  NzSelectOptionInterface,\n  NzSelectPlacementType\n} from './select.types';\n\nconst defaultFilterOption: NzFilterOptionType = (searchValue: string, item: NzSelectItemInterface): boolean => {\n  if (item && item.bpsLabel) {\n    return item.bpsLabel.toString().toLowerCase().indexOf(searchValue.toLowerCase()) > -1;\n  } else {\n    return false;\n  }\n};\n\nconst NZ_CONFIG_MODULE_NAME: NzConfigKey = 'select';\n\nexport type NzSelectSizeType = 'large' | 'default' | 'small';\n\n@Component({\n  selector: 'bps-select',\n  exportAs: 'bpsSelect',\n  preserveWhitespaces: false,\n  providers: [\n    NzDestroyService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => BpsSelectComponent),\n      multi: true\n    }\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./bps-select.component.css'],\n  animations: [slideMotion],\n  template: `\n    <bps-select-top-control\n      cdkOverlayOrigin\n      #origin=\"cdkOverlayOrigin\"\n      [bpsId]=\"bpsId\"\n      [open]=\"bpsOpen\"\n      [disabled]=\"bpsDisabled\"\n      [mode]=\"bpsMode\"\n      [@.disabled]=\"!!noAnimation?.nzNoAnimation\"\n      [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n      [maxTagPlaceholder]=\"bpsMaxTagPlaceholder\"\n      [removeIcon]=\"bpsRemoveIcon\"\n      [placeHolder]=\"bpsPlaceHolder\"\n      [maxTagCount]=\"bpsMaxTagCount\"\n      [customTemplate]=\"bpsCustomTemplate\"\n      [tokenSeparators]=\"bpsTokenSeparators\"\n      [showSearch]=\"bpsShowSearch\"\n      [autofocus]=\"bpsAutoFocus\"\n      [listOfTopItem]=\"listOfTopItem\"\n      (inputValueChange)=\"onInputValueChange($event)\"\n      (tokenize)=\"onTokenSeparate($event)\"\n      (deleteItem)=\"onItemDelete($event)\"\n      (keydown)=\"onKeyDown($event)\"\n    ></bps-select-top-control>\n    <bps-select-arrow\n      *ngIf=\"bpsShowArrow || (hasFeedback && !!status)\"\n      [showArrow]=\"bpsShowArrow\"\n      [loading]=\"bpsLoading\"\n      [search]=\"bpsOpen && bpsShowSearch\"\n      [suffixIcon]=\"bpsSuffixIcon\"\n      [feedbackIcon]=\"feedbackIconTpl\"\n    >\n      <ng-template #feedbackIconTpl>\n        <bps-form-item-feedback-icon *ngIf=\"hasFeedback && !!status\" [status]=\"status\"></bps-form-item-feedback-icon>\n      </ng-template>\n    </bps-select-arrow>\n\n    <bps-select-clear\n      *ngIf=\"bpsAllowClear && !bpsDisabled && listOfValue.length\"\n      [clearIcon]=\"bpsClearIcon\"\n      (clear)=\"onClearSelection()\"\n    ></bps-select-clear>\n    <ng-template\n      cdkConnectedOverlay\n      nzConnectedOverlay\n      [cdkConnectedOverlayHasBackdrop]=\"bpsBackdrop\"\n      [cdkConnectedOverlayMinWidth]=\"$any(bpsDropdownMatchSelectWidth ? null : triggerWidth)\"\n      [cdkConnectedOverlayWidth]=\"$any(bpsDropdownMatchSelectWidth ? triggerWidth : null)\"\n      [cdkConnectedOverlayOrigin]=\"origin\"\n      [cdkConnectedOverlayTransformOriginOn]=\"'.ant-select-dropdown'\"\n      [cdkConnectedOverlayPanelClass]=\"bpsDropdownClassName!\"\n      [cdkConnectedOverlayOpen]=\"bpsOpen\"\n      [cdkConnectedOverlayPositions]=\"positions\"\n      (overlayOutsideClick)=\"onClickOutside($event)\"\n      (detach)=\"setOpenState(false)\"\n      (positionChange)=\"onPositionChange($event)\"\n    >\n      <bps-option-container\n        [ngStyle]=\"bpsDropdownStyle\"\n        [itemSize]=\"bpsOptionHeightPx\"\n        [maxItemLength]=\"bpsOptionOverflowSize\"\n        [matchWidth]=\"bpsDropdownMatchSelectWidth\"\n        [class.ant-select-dropdown-placement-bottomLeft]=\"dropDownPosition === 'bottomLeft'\"\n        [class.ant-select-dropdown-placement-topLeft]=\"dropDownPosition === 'topLeft'\"\n        [class.ant-select-dropdown-placement-bottomRight]=\"dropDownPosition === 'bottomRight'\"\n        [class.ant-select-dropdown-placement-topRight]=\"dropDownPosition === 'topRight'\"\n        [@slideMotion]=\"'enter'\"\n        [@.disabled]=\"!!noAnimation?.nzNoAnimation\"\n        [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n        [listOfContainerItem]=\"listOfContainerItem\"\n        [menuItemSelectedIcon]=\"bpsMenuItemSelectedIcon\"\n        [notFoundContent]=\"bpsNotFoundContent\"\n        [activatedValue]=\"activatedValue\"\n        [listOfSelectedValue]=\"listOfValue\"\n        [dropdownRender]=\"bpsDropdownRender\"\n        [compareWith]=\"compareWith\"\n        [mode]=\"bpsMode\"\n        (keydown)=\"onKeyDown($event)\"\n        (itemClick)=\"onItemClick($event)\"\n        (scrollToBottom)=\"bpsScrollToBottom.emit()\"\n      ></bps-option-container>\n    </ng-template>\n  `,\n  host: {\n    class: 'ant-select',\n    '[class.ant-select-in-form-item]': '!!nzFormStatusService',\n    '[class.ant-select-lg]': 'bpsSize === \"large\"',\n    '[class.ant-select-sm]': 'bpsSize === \"small\"',\n    '[class.ant-select-show-arrow]': `bpsShowArrow`,\n    '[class.ant-select-disabled]': 'bpsDisabled',\n    '[class.ant-select-show-search]': `(bpsShowSearch || bpsMode !== 'default') && !bpsDisabled`,\n    '[class.ant-select-allow-clear]': 'bpsAllowClear',\n    '[class.ant-select-borderless]': 'bpsBorderless',\n    '[class.ant-select-open]': 'bpsOpen',\n    '[class.ant-select-focused]': 'bpsOpen || focused',\n    '[class.ant-select-single]': `bpsMode === 'default'`,\n    '[class.ant-select-multiple]': `bpsMode !== 'default'`,\n    '[class.ant-select-rtl]': `dir === 'rtl'`\n  }\n})\nexport class BpsSelectComponent implements ControlValueAccessor, OnInit, AfterContentInit, OnChanges, OnDestroy {\n  readonly _nzModuleName: NzConfigKey = NZ_CONFIG_MODULE_NAME;\n\n  static ngAcceptInputType_bpsAllowClear: BooleanInput;\n  static ngAcceptInputType_bpsBorderless: BooleanInput;\n  static ngAcceptInputType_bpsShowSearch: BooleanInput;\n  static ngAcceptInputType_bpsLoading: BooleanInput;\n  static ngAcceptInputType_bpsAutoFocus: BooleanInput;\n  static ngAcceptInputType_bpsAutoClearSearchValue: BooleanInput;\n  static ngAcceptInputType_bpsServerSearch: BooleanInput;\n  static ngAcceptInputType_bpsDisabled: BooleanInput;\n  static ngAcceptInputType_bpsOpen: BooleanInput;\n\n  @Input() bpsId: string | null = null;\n  @Input() bpsSize: NzSelectSizeType = 'default';\n  @Input() bpsStatus: NzStatus = '';\n  @Input() bpsOptionHeightPx = 23;\n  @Input() bpsOptionOverflowSize = 8;\n  @Input() bpsDropdownClassName: string[] | string | null = null;\n  @Input() bpsDropdownMatchSelectWidth = true;\n  @Input() bpsDropdownStyle: { [key: string]: string } | null = null;\n  @Input() bpsNotFoundContent: string | TemplateRef<NzSafeAny> | undefined = undefined;\n  @Input() bpsPlaceHolder: string | TemplateRef<NzSafeAny> | null = null;\n  @Input() bpsPlacement: NzSelectPlacementType | null = null;\n  @Input() bpsMaxTagCount = Infinity;\n  @Input() bpsDropdownRender: TemplateRef<NzSafeAny> | null = null;\n  @Input() bpsCustomTemplate: TemplateRef<{ $implicit: NzSelectItemInterface }> | null = null;\n  @Input()\n  @WithConfig<TemplateRef<NzSafeAny> | string | null>()\n  bpsSuffixIcon: TemplateRef<NzSafeAny> | string | null = null;\n  @Input() bpsClearIcon: TemplateRef<NzSafeAny> | null = null;\n  @Input() bpsRemoveIcon: TemplateRef<NzSafeAny> | null = null;\n  @Input() bpsMenuItemSelectedIcon: TemplateRef<NzSafeAny> | null = null;\n  @Input() bpsTokenSeparators: string[] = [];\n  @Input() bpsMaxTagPlaceholder: TemplateRef<{ $implicit: NzSafeAny[] }> | null = null;\n  @Input() bpsMaxMultipleCount = Infinity;\n  @Input() bpsMode: NzSelectModeType = 'default';\n  @Input() bpsFilterOption: NzFilterOptionType = defaultFilterOption;\n  @Input() compareWith: (o1: NzSafeAny, o2: NzSafeAny) => boolean = (o1: NzSafeAny, o2: NzSafeAny) => o1 === o2;\n  @Input() @InputBoolean() bpsAllowClear = false;\n  @Input() @WithConfig<boolean>() @InputBoolean() bpsBorderless = false;\n  @Input() @InputBoolean() bpsShowSearch = false;\n  @Input() @InputBoolean() bpsLoading = false;\n  @Input() @InputBoolean() bpsAutoFocus = false;\n  @Input() @InputBoolean() bpsAutoClearSearchValue = true;\n  @Input() @InputBoolean() bpsServerSearch = false;\n  @Input() @InputBoolean() bpsDisabled = false;\n  @Input() @InputBoolean() bpsOpen = false;\n  @Input() @InputBoolean() bpsSelectOnTab = false;\n  @Input() @WithConfig<boolean>() @InputBoolean() bpsBackdrop = false;\n  @Input() bpsOptions: NzSelectOptionInterface[] = [];\n\n  @Input()\n  set bpsShowArrow(value: boolean) {\n    this._bpsShowArrow = value;\n  }\n  get bpsShowArrow(): boolean {\n    return this._bpsShowArrow === undefined ? this.bpsMode === 'default' : this._bpsShowArrow;\n  }\n\n  @Output() readonly bpsOnSearch = new EventEmitter<string>();\n  @Output() readonly bpsScrollToBottom = new EventEmitter<void>();\n  @Output() readonly bpsOpenChange = new EventEmitter<boolean>();\n  @Output() readonly bpsBlur = new EventEmitter<void>();\n  @Output() readonly bpsFocus = new EventEmitter<void>();\n  @ViewChild(CdkOverlayOrigin, { static: true, read: ElementRef }) originElement!: ElementRef;\n  @ViewChild(CdkConnectedOverlay, { static: true }) cdkConnectedOverlay!: CdkConnectedOverlay;\n  @ViewChild(BpsSelectTopControlComponent, { static: true }) bpsSelectTopControlComponent!: BpsSelectTopControlComponent;\n  @ContentChildren(BpsOptionComponent, { descendants: true }) listOfNzOptionComponent!: QueryList<BpsOptionComponent>;\n  @ContentChildren(BpsOptionGroupComponent, { descendants: true })\n  listOfNzOptionGroupComponent!: QueryList<BpsOptionGroupComponent>;\n  @ViewChild(BpsOptionGroupComponent, { static: true, read: ElementRef }) bpsOptionGroupComponentElement!: ElementRef;\n  @ViewChild(BpsSelectTopControlComponent, { static: true, read: ElementRef })\n  bpsSelectTopControlComponentElement!: ElementRef;\n  private listOfValue$ = new BehaviorSubject<NzSafeAny[]>([]);\n  private listOfTemplateItem$ = new BehaviorSubject<NzSelectItemInterface[]>([]);\n  private listOfTagAndTemplateItem: NzSelectItemInterface[] = [];\n  private searchValue: string = '';\n  private isReactiveDriven = false;\n  private value: NzSafeAny | NzSafeAny[];\n  private _bpsShowArrow: boolean | undefined;\n  private requestId: number = -1;\n  private isNzDisableFirstChange: boolean = true;\n  onChange: OnChangeType = () => {};\n  onTouched: OnTouchedType = () => {};\n  dropDownPosition: NzSelectPlacementType = 'bottomLeft';\n  triggerWidth: number | null = null;\n  listOfContainerItem: NzSelectItemInterface[] = [];\n  listOfTopItem: NzSelectItemInterface[] = [];\n  activatedValue: NzSafeAny | null = null;\n  listOfValue: NzSafeAny[] = [];\n  focused = false;\n  dir: Direction = 'ltr';\n  positions: ConnectionPositionPair[] = [];\n\n  // status\n  prefixCls: string = 'ant-select';\n  statusCls: NgClassInterface = {};\n  status: NzValidateStatus = '';\n  hasFeedback: boolean = false;\n\n  generateTagItem(value: string): NzSelectItemInterface {\n    return {\n      bpsValue: value,\n      bpsLabel: value,\n      type: 'item'\n    };\n  }\n\n  onItemClick(value: NzSafeAny): void {\n    this.activatedValue = value;\n    if (this.bpsMode === 'default') {\n      if (this.listOfValue.length === 0 || !this.compareWith(this.listOfValue[0], value)) {\n        this.updateListOfValue([value]);\n      }\n      this.setOpenState(false);\n    } else {\n      const targetIndex = this.listOfValue.findIndex(o => this.compareWith(o, value));\n      if (targetIndex !== -1) {\n        const listOfValueAfterRemoved = this.listOfValue.filter((_, i) => i !== targetIndex);\n        this.updateListOfValue(listOfValueAfterRemoved);\n      } else if (this.listOfValue.length < this.bpsMaxMultipleCount) {\n        const listOfValueAfterAdded = [...this.listOfValue, value];\n        this.updateListOfValue(listOfValueAfterAdded);\n      }\n      this.focus();\n      if (this.bpsAutoClearSearchValue) {\n        this.clearInput();\n      }\n    }\n  }\n\n  onItemDelete(item: any): void {\n    const listOfSelectedValue = this.listOfValue.filter(v => !this.compareWith(v, item.bpsValue));\n    this.updateListOfValue(listOfSelectedValue);\n    this.clearInput();\n  }\n\n  updateListOfContainerItem(): void {\n    let listOfContainerItem = this.listOfTagAndTemplateItem\n      .filter(item => !item.bpsHide)\n      .filter(item => {\n        if (!this.bpsServerSearch && this.searchValue) {\n          return this.bpsFilterOption(this.searchValue, item);\n        } else {\n          return true;\n        }\n      });\n    if (this.bpsMode === 'tags' && this.searchValue) {\n      const matchedItem = this.listOfTagAndTemplateItem.find(item => item.bpsLabel === this.searchValue);\n      if (!matchedItem) {\n        const tagItem = this.generateTagItem(this.searchValue);\n        listOfContainerItem = [tagItem, ...listOfContainerItem];\n        this.activatedValue = tagItem.bpsValue;\n      } else {\n        this.activatedValue = matchedItem.bpsValue;\n      }\n    }\n    const activatedItem =\n      listOfContainerItem.find(item => item.bpsLabel === this.searchValue) ||\n      listOfContainerItem.find(item => this.compareWith(item.bpsValue, this.activatedValue)) ||\n      listOfContainerItem.find(item => this.compareWith(item.bpsValue, this.listOfValue[0])) ||\n      listOfContainerItem[0];\n    this.activatedValue = (activatedItem && activatedItem.bpsValue) || null;\n    let listOfGroupLabel: Array<string | number | TemplateRef<NzSafeAny> | null> = [];\n    if (this.isReactiveDriven) {\n      listOfGroupLabel = [...new Set(this.bpsOptions.filter(o => o.groupLabel).map(o => o.groupLabel!))];\n    } else {\n      if (this.listOfNzOptionGroupComponent) {\n        listOfGroupLabel = this.listOfNzOptionGroupComponent.map(o => o.bpsLabel);\n      }\n    }\n    /** insert group item **/\n    listOfGroupLabel.forEach(label => {\n      const index = listOfContainerItem.findIndex(item => label === item.groupLabel);\n      if (index > -1) {\n        const groupItem = { groupLabel: label, type: 'group', key: label } as NzSelectItemInterface;\n        listOfContainerItem.splice(index, 0, groupItem);\n      }\n    });\n    this.listOfContainerItem = [...listOfContainerItem];\n    this.updateCdkConnectedOverlayPositions();\n  }\n\n  clearInput(): void {\n    this.bpsSelectTopControlComponent.clearInputValue();\n  }\n\n  updateListOfValue(listOfValue: NzSafeAny[]): void {\n    const covertListToModel = (list: NzSafeAny[], mode: NzSelectModeType): NzSafeAny[] | NzSafeAny => {\n      if (mode === 'default') {\n        if (list.length > 0) {\n          return list[0];\n        } else {\n          return null;\n        }\n      } else {\n        return list;\n      }\n    };\n    const model = covertListToModel(listOfValue, this.bpsMode);\n    if (this.value !== model) {\n      this.listOfValue = listOfValue;\n      this.listOfValue$.next(listOfValue);\n      this.value = model;\n      this.onChange(this.value);\n    }\n  }\n\n  onTokenSeparate(listOfLabel: string[]): void {\n    const listOfMatchedValue = this.listOfTagAndTemplateItem\n      .filter(item => listOfLabel.findIndex(label => label === item.bpsLabel) !== -1)\n      .map(item => item.bpsValue)\n      .filter(item => this.listOfValue.findIndex(v => this.compareWith(v, item)) === -1);\n    if (this.bpsMode === 'multiple') {\n      this.updateListOfValue([...this.listOfValue, ...listOfMatchedValue]);\n    } else if (this.bpsMode === 'tags') {\n      const listOfUnMatchedLabel = listOfLabel.filter(\n        label => this.listOfTagAndTemplateItem.findIndex(item => item.bpsLabel === label) === -1\n      );\n      this.updateListOfValue([...this.listOfValue, ...listOfMatchedValue, ...listOfUnMatchedLabel]);\n    }\n    this.clearInput();\n  }\n\n  onKeyDown(e: KeyboardEvent): void {\n    if (this.bpsDisabled) {\n      return;\n    }\n    const listOfFilteredOptionNotDisabled = this.listOfContainerItem\n      .filter(item => item.type === 'item')\n      .filter(item => !item.bpsDisabled);\n    const activatedIndex = listOfFilteredOptionNotDisabled.findIndex(item =>\n      this.compareWith(item.bpsValue, this.activatedValue)\n    );\n    switch (e.keyCode) {\n      case UP_ARROW:\n        e.preventDefault();\n        if (this.bpsOpen && listOfFilteredOptionNotDisabled.length > 0) {\n          const preIndex = activatedIndex > 0 ? activatedIndex - 1 : listOfFilteredOptionNotDisabled.length - 1;\n          this.activatedValue = listOfFilteredOptionNotDisabled[preIndex].bpsValue;\n        }\n        break;\n      case DOWN_ARROW:\n        e.preventDefault();\n        if (this.bpsOpen && listOfFilteredOptionNotDisabled.length > 0) {\n          const nextIndex = activatedIndex < listOfFilteredOptionNotDisabled.length - 1 ? activatedIndex + 1 : 0;\n          this.activatedValue = listOfFilteredOptionNotDisabled[nextIndex].bpsValue;\n        } else {\n          this.setOpenState(true);\n        }\n        break;\n      case ENTER:\n        e.preventDefault();\n        if (this.bpsOpen) {\n          if (isNotNil(this.activatedValue) && activatedIndex !== -1) {\n            this.onItemClick(this.activatedValue);\n          }\n        } else {\n          this.setOpenState(true);\n        }\n        break;\n      case SPACE:\n        if (!this.bpsOpen) {\n          this.setOpenState(true);\n          e.preventDefault();\n        }\n        break;\n      case TAB:\n        if (this.bpsSelectOnTab) {\n          if (this.bpsOpen) {\n            e.preventDefault();\n            if (isNotNil(this.activatedValue)) {\n              this.onItemClick(this.activatedValue);\n            }\n          }\n        } else {\n          this.setOpenState(false);\n        }\n        break;\n      case ESCAPE:\n        /**\n         * Skip the ESCAPE processing, it will be handled in {@link onOverlayKeyDown}.\n         */\n        break;\n      default:\n        if (!this.bpsOpen) {\n          this.setOpenState(true);\n        }\n    }\n  }\n\n  setOpenState(value: boolean): void {\n    if (this.bpsOpen !== value) {\n      this.bpsOpen = value;\n      this.bpsOpenChange.emit(value);\n      this.onOpenChange();\n      this.cdr.markForCheck();\n    }\n  }\n\n  onOpenChange(): void {\n    this.updateCdkConnectedOverlayStatus();\n    this.clearInput();\n  }\n\n  onInputValueChange(value: string): void {\n    this.searchValue = value;\n    this.updateListOfContainerItem();\n    this.bpsOnSearch.emit(value);\n    this.updateCdkConnectedOverlayPositions();\n  }\n\n  onClearSelection(): void {\n    this.updateListOfValue([]);\n  }\n\n  onClickOutside(event: MouseEvent): void {\n    if (!this.host.nativeElement.contains(event.target as HTMLElement)) {\n      this.setOpenState(false);\n    }\n  }\n\n  focus(): void {\n    this.bpsSelectTopControlComponent.focus();\n  }\n\n  blur(): void {\n    this.bpsSelectTopControlComponent.blur();\n  }\n\n  onPositionChange(position: ConnectedOverlayPositionChange): void {\n    const placement = getPlacementName(position);\n    this.dropDownPosition = placement as NzSelectPlacementType;\n  }\n\n  updateCdkConnectedOverlayStatus(): void {\n    if (this.platform.isBrowser && this.originElement.nativeElement) {\n      const triggerWidth = this.triggerWidth;\n      cancelRequestAnimationFrame(this.requestId);\n      this.requestId = reqAnimFrame(() => {\n        // Blink triggers style and layout pipelines anytime the `getBoundingClientRect()` is called, which may cause a\n        // frame drop. That's why it's scheduled through the `requestAnimationFrame` to unload the composite thread.\n        this.triggerWidth = this.originElement.nativeElement.getBoundingClientRect().width;\n        if (triggerWidth !== this.triggerWidth) {\n          // The `requestAnimationFrame` will trigger change detection, but we're inside an `OnPush` component which won't have\n          // the `ChecksEnabled` state. Calling `markForCheck()` will allow Angular to run the change detection from the root component\n          // down to the `nz-select`. But we'll trigger only local change detection if the `triggerWidth` has been changed.\n          this.cdr.detectChanges();\n        }\n      });\n    }\n  }\n\n  updateCdkConnectedOverlayPositions(): void {\n    reqAnimFrame(() => {\n      this.cdkConnectedOverlay?.overlayRef?.updatePosition();\n    });\n  }\n\n  constructor(\n    private ngZone: NgZone,\n    private destroy$: NzDestroyService,\n    public nzConfigService: NzConfigService,\n    private cdr: ChangeDetectorRef,\n    private host: ElementRef<HTMLElement>,\n    private renderer: Renderer2,\n    private platform: Platform,\n    private focusMonitor: FocusMonitor,\n    @Optional() private directionality: Directionality,\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective,\n    @Optional() public nzFormStatusService?: NzFormStatusService,\n    @Optional() private nzFormNoStatusService?: NzFormNoStatusService\n  ) {}\n\n  writeValue(modelValue: NzSafeAny | NzSafeAny[]): void {\n    /** https://github.com/angular/angular/issues/14988 **/\n    if (this.value !== modelValue) {\n      this.value = modelValue;\n      const covertModelToList = (model: NzSafeAny[] | NzSafeAny, mode: NzSelectModeType): NzSafeAny[] => {\n        if (model === null || model === undefined) {\n          return [];\n        } else if (mode === 'default') {\n          return [model];\n        } else {\n          return model;\n        }\n      };\n      const listOfValue = covertModelToList(modelValue, this.bpsMode);\n      this.listOfValue = listOfValue;\n      this.listOfValue$.next(listOfValue);\n      this.cdr.markForCheck();\n    }\n  }\n\n  registerOnChange(fn: OnChangeType): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: OnTouchedType): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this.bpsDisabled = (this.isNzDisableFirstChange && this.bpsDisabled) || disabled;\n    this.isNzDisableFirstChange = false;\n    if (this.bpsDisabled) {\n      this.setOpenState(false);\n    }\n    this.cdr.markForCheck();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { bpsOpen, bpsDisabled, bpsOptions, bpsStatus, bpsPlacement } = changes;\n    if (bpsOpen) {\n      this.onOpenChange();\n    }\n    if (bpsDisabled && this.bpsDisabled) {\n      this.setOpenState(false);\n    }\n    if (bpsOptions) {\n      this.isReactiveDriven = true;\n      const listOfOptions = this.bpsOptions || [];\n      const listOfTransformedItem = listOfOptions.map(item => {\n        return {\n          template: item.label instanceof TemplateRef ? item.label : null,\n          bpsTitle: this.getTitle(item.title, item.label),\n          bpsLabel: typeof item.label === 'string' || typeof item.label === 'number' ? item.label : null,\n          bpsValue: item.value,\n          bpsDisabled: item.disabled || false,\n          bpsHide: item.hide || false,\n          bpsCustomContent: item.label instanceof TemplateRef,\n          groupLabel: item.groupLabel || null,\n          type: 'item',\n          key: item.key === undefined ? item.value : item.key\n        };\n      });\n      this.listOfTemplateItem$.next(listOfTransformedItem);\n    }\n    if (bpsStatus) {\n      this.setStatusStyles(this.bpsStatus, this.hasFeedback);\n    }\n    if (bpsPlacement) {\n      const { currentValue } = bpsPlacement;\n      this.dropDownPosition = currentValue as NzSelectPlacementType;\n      const listOfPlacement = ['bottomLeft', 'topLeft', 'bottomRight', 'topRight'];\n      if (currentValue && listOfPlacement.includes(currentValue)) {\n        this.positions = [POSITION_MAP[currentValue as POSITION_TYPE]];\n      } else {\n        this.positions = listOfPlacement.map(e => POSITION_MAP[e as POSITION_TYPE]);\n      }\n    }\n  }\n\n  ngOnInit(): void {\n    this.nzFormStatusService?.formStatusChanges\n      .pipe(\n        distinctUntilChanged((pre, cur) => {\n          return pre.status === cur.status && pre.hasFeedback === cur.hasFeedback;\n        }),\n        withLatestFrom(this.nzFormNoStatusService ? this.nzFormNoStatusService.noFormStatus : observableOf(false)),\n        map(([{ status, hasFeedback }, noStatus]) => ({ status: noStatus ? '' : status, hasFeedback })),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(({ status, hasFeedback }) => {\n        this.setStatusStyles(status, hasFeedback);\n      });\n\n    this.focusMonitor\n      .monitor(this.host, true)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(focusOrigin => {\n        if (!focusOrigin) {\n          this.focused = false;\n          this.cdr.markForCheck();\n          this.bpsBlur.emit();\n          Promise.resolve().then(() => {\n            this.onTouched();\n          });\n        } else {\n          this.focused = true;\n          this.cdr.markForCheck();\n          this.bpsFocus.emit();\n        }\n      });\n    combineLatest([this.listOfValue$, this.listOfTemplateItem$])\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(([listOfSelectedValue, listOfTemplateItem]) => {\n        const listOfTagItem = listOfSelectedValue\n          .filter(() => this.bpsMode === 'tags')\n          .filter(value => listOfTemplateItem.findIndex(o => this.compareWith(o.bpsValue, value)) === -1)\n          .map(\n            value => this.listOfTopItem.find(o => this.compareWith(o.bpsValue, value)) || this.generateTagItem(value)\n          );\n        this.listOfTagAndTemplateItem = [...listOfTemplateItem, ...listOfTagItem];\n        this.listOfTopItem = this.listOfValue\n          .map(\n            v =>\n              [...this.listOfTagAndTemplateItem, ...this.listOfTopItem].find(item => this.compareWith(v, item.bpsValue))!\n          )\n          .filter(item => !!item);\n        this.updateListOfContainerItem();\n      });\n\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n\n    this.nzConfigService\n      .getConfigChangeEventForComponent('select')\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.cdr.markForCheck();\n      });\n\n    this.dir = this.directionality.value;\n\n    this.ngZone.runOutsideAngular(() =>\n      fromEvent(this.host.nativeElement, 'click')\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(() => {\n          if ((this.bpsOpen && this.bpsShowSearch) || this.bpsDisabled) {\n            return;\n          }\n\n          this.ngZone.run(() => this.setOpenState(!this.bpsOpen));\n        })\n    );\n\n    // Caretaker note: we could've added this listener within the template `(overlayKeydown)=\"...\"`,\n    // but with this approach, it'll run change detection on each keyboard click, and also it'll run\n    // `markForCheck()` internally, which means the whole component tree (starting from the root and\n    // going down to the select component) will be re-checked and updated (if needed).\n    // This is safe to do that manually since `setOpenState()` calls `markForCheck()` if needed.\n    this.cdkConnectedOverlay.overlayKeydown.pipe(takeUntil(this.destroy$)).subscribe(event => {\n      if (event.keyCode === ESCAPE) {\n        this.setOpenState(false);\n      }\n    });\n  }\n\n  ngAfterContentInit(): void {\n    if (!this.isReactiveDriven) {\n      merge(this.listOfNzOptionGroupComponent.changes, this.listOfNzOptionComponent.changes)\n        .pipe(\n          startWith(true),\n          switchMap(() =>\n            merge(\n              ...[\n                this.listOfNzOptionComponent.changes,\n                this.listOfNzOptionGroupComponent.changes,\n                ...this.listOfNzOptionComponent.map(option => option.changes),\n                ...this.listOfNzOptionGroupComponent.map(option => option.changes)\n              ]\n            ).pipe(startWith(true))\n          ),\n          takeUntil(this.destroy$)\n        )\n        .subscribe(() => {\n          const listOfOptionInterface = this.listOfNzOptionComponent.toArray().map(item => {\n            const { template, bpsLabel, bpsValue, bpsKey, bpsDisabled, bpsHide, bpsCustomContent, groupLabel } = item;\n            return {\n              template,\n              bpsLabel,\n              bpsValue,\n              bpsDisabled,\n              bpsHide,\n              bpsCustomContent,\n              groupLabel,\n              bpsTitle: this.getTitle(item.bpsTitle, item.bpsLabel),\n              type: 'item',\n              key: bpsKey === undefined ? bpsValue : bpsKey\n            };\n          });\n          this.listOfTemplateItem$.next(listOfOptionInterface);\n          this.cdr.markForCheck();\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n    cancelRequestAnimationFrame(this.requestId);\n    this.focusMonitor.stopMonitoring(this.host);\n  }\n\n  private setStatusStyles(status: NzValidateStatus, hasFeedback: boolean): void {\n    this.status = status;\n    this.hasFeedback = hasFeedback;\n    this.cdr.markForCheck();\n    // render status if nzStatus is set\n    this.statusCls = getStatusClassNames(this.prefixCls, status, hasFeedback);\n    Object.keys(this.statusCls).forEach(status => {\n      if (this.statusCls[status]) {\n        this.renderer.addClass(this.host.nativeElement, status);\n      } else {\n        this.renderer.removeClass(this.host.nativeElement, status);\n      }\n    });\n  }\n\n  private getTitle(title: NzSelectOptionInterface['title'], label: NzSelectOptionInterface['label']): string {\n    let rawTitle: string = undefined!;\n    if (title === undefined) {\n      if (typeof label === 'string' || typeof label === 'number') {\n        rawTitle = label.toString();\n      }\n    } else if (typeof title === 'string' || typeof title === 'number') {\n      rawTitle = title.toString();\n    }\n\n    return rawTitle;\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { BpsComponentsLibComponent } from './bps-components-lib.component';\r\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\r\nimport { NzOverlayModule } from 'ng-zorro-antd/core/overlay';\r\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\r\nimport { NZ_I18N, en_US } from 'ng-zorro-antd/i18n';\r\nimport { NzSpinModule } from 'ng-zorro-antd/spin';\r\nimport { NzGridModule } from 'ng-zorro-antd/grid';\r\nimport { NzAvatarModule } from 'ng-zorro-antd/avatar';\r\nimport { NzTableModule } from 'ng-zorro-antd/table';\r\n\r\nimport { CommonModule } from '@angular/common';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\n\r\nimport { NzIconModule } from 'ng-zorro-antd/icon';\r\nimport { NzEmptyModule } from 'ng-zorro-antd/empty';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ObserversModule } from '@angular/cdk/observers';\r\nimport { EditorModule } from '@tinymce/tinymce-angular';\r\n\r\n/* BPS Input */\r\nimport {BpsInputDirective} from './components/bps-input/bps-input.directive';\r\nimport {BpsInputGroupComponent} from './components/bps-input/bps-input-group.component';\r\n\r\n/* BPS Select */\r\n\r\n\r\n/* BPS Form */\r\nimport {BpsFormDirective} from './components/bps-form/bps-form.directive';\r\nimport {BpsFormControlComponent} from './components/bps-form/bps-form-control.component';\r\nimport {BpsFormExplainComponent} from './components/bps-form/bps-form-explain.component';\r\nimport {BpsFormExtraComponent} from './components/bps-form/bps-form-extra.component';\r\nimport {BpsFormItemComponent} from './components/bps-form/bps-form-item.component';\r\nimport {BpsFormLabelComponent} from './components/bps-form/bps-form-label.component';\r\nimport {BpsFormSplitComponent} from './components/bps-form/bps-form-split.component';\r\nimport {BpsFormTextComponent} from './components/bps-form/bps-form-text.component';\r\n\r\n/* BPS Button */\r\nimport {BpsButtonComponent} from './components/bps-button/bps-button.component';\r\nimport { BpsButtonGroupComponent } from './components/bps-button/bps-button-group.component';\r\n\r\n/* BPS Switch */\r\nimport { BpsSwitchComponent } from './components/bps-switch/bps-switch.component';\r\n\r\n/* BPS Checkbox */\r\nimport { BpsCheckboxGroupComponent } from './components/bps-checkbox/bps-checkbox-group.component';\r\nimport { BpsCheckboxComponent } from './components/bps-checkbox/bps-checkbox.component';\r\n\r\n/* BPS Radio */\r\nimport { BpsRadioComponent } from './components/bps-radio/bps-radio.component';\r\nimport { BpsRadioGroupComponent } from './components/bps-radio/radio-group.component';\r\nimport { BpsRadioButtonDirective } from './components/bps-radio/radio-button.directive';\r\n\r\n/* BPS Collapse */\r\nimport { BpsCollapseComponent } from './components/bps-collapse/bps-collapse.component';\r\nimport { BpsCollapsePanelComponent } from './components/bps-collapse/bps-collapse-panel.component';\r\n\r\n/* BPS Popover */\r\nimport { BpsPopoverComponent, BpsPopoverDirective } from './components/bps-popover/bps-popover';\r\n\r\n/* BPS Tooltip */\r\nimport { BpsTooltipDirective } from './components/bps-tooltip/tooltip';\r\nimport { BpsToolTipComponent } from './components/bps-tooltip/tooltip';\r\n\r\n/* BPS List */\r\nimport { BpsListComponent } from './components/bps-list/bps-list.component';\r\nimport { BpsListItemComponent } from './components/bps-list/bps-list-item.component';\r\nimport { BpsListItemMetaComponent } from './components/bps-list/bps-list-item-meta.component';\r\n\r\n/*BPS Table */\r\nimport { BpsTableComponent } from './components/bps-table/bps-table.component';\r\n\r\n/* BPS Table Expandable Panel */\r\nimport { BpsTableExpandablePanelComponent } from './components/bps-table-expandable-panel/bps-table-expandable-panel.component';\r\n\r\n/* BPS Configuration Selector */\r\nimport { BpsConfigurationSelectorComponent } from './components/bps-configuration-selector/bps-configuration-selector.component';\r\n\r\nimport { NzResizableModule } from 'ng-zorro-antd/resizable';\r\n\r\n/* BPS Overflow Menu */ \r\nimport { BpsDropDownADirective } from './components/bps-dropdown/bps-dropdown-a.directive';\r\nimport { BpsDropdownMenuComponent } from './components/bps-dropdown/dropdown-menu.component';\r\nimport { BpsDropDownDirective } from './components/bps-dropdown/bps-dropdown.directive';\r\n\r\n/* BPS Tree */\r\nimport { BpsTreeComponent } from './components/bps-tree/bps-tree.component';\r\nimport { BpsTreeNodeComponent } from './components/bps-tree/bps-tree-node.component';\r\n\r\n/* Bps Modal */\r\nimport { BpsModalComponent } from './components/bps-modal/bps-modal.component';\r\nimport { BpsModalFooterDirective } from './components/bps-modal/bps-modal-footer.directive';\r\n\r\n/* BPS Text Editor */\r\nimport { BpsTextEditorComponent } from './components/bps-text-editor/bps-text-editor.component';\nimport { BpsGridComponent } from './components/bps-grid/bps-grid.component';\r\nimport { NzWaveModule } from 'ng-zorro-antd/core/wave';\r\nimport { NzHighlightModule } from 'ng-zorro-antd/core/highlight';\r\nimport { NzPipesModule } from 'ng-zorro-antd/core/pipe';\r\nimport { NzModalControlServiceModule } from './components/bps-modal/nz-modal-control.service.module';\r\nimport { NzToCssUnitPipe } from './components/core/pipes/nz-css-unit.pipe';\r\nimport { NzAddOnModule } from './components/core/addon';\r\nimport { BpsAutosizeDirective } from './components/bps-input/autosize.directive';\r\nimport { BpsInputGroupSlotComponent } from './components/bps-input/input-group-slot.component';\r\nimport { BpsTextareaCountComponent } from './components/bps-input/textarea-count.component';\r\n\r\nimport { NzFormModule } from 'ng-zorro-antd/form';\r\nimport { NzFormItemFeedbackIconComponent } from 'ng-zorro-antd/core/form';\r\nimport { BpsFormItemFeedbackIconComponent } from './components/core/form/feedback';\r\nimport { BpsDropdownButtonDirective } from './components/bps-dropdown/dropdown-button.directive';\r\n\r\nimport { NzMenuModule } from 'ng-zorro-antd/menu';\r\nimport { NzSelectModule } from 'ng-zorro-antd/select';\r\nimport { NzTreeModule } from 'ng-zorro-antd/tree';\r\nimport { BpsOptionComponent } from './components/bps-select/option.component';\r\nimport { BpsOptionContainerComponent } from './components/bps-select/option-container.component';\r\nimport { BpsOptionGroupComponent } from './components/bps-select/option-group.component';\r\nimport { BpsOptionItemComponent } from './components/bps-select/option-item.component';\r\nimport { BpsOptionItemGroupComponent } from './components/bps-select/option-item-group.component';\r\nimport { BpsSelectComponent } from './components/bps-select/select.component';\r\nimport { BpsSelectArrowComponent } from './components/bps-select/select-arrow.component';\r\nimport { BpsSelectClearComponent } from './components/bps-select/select-clear.component';\r\nimport { BpsSelectItemComponent } from './components/bps-select/select-item.component';\r\nimport { BpsSelectPlaceholderComponent } from './components/bps-select/select-placeholder.component';\r\nimport { BpsSelectSearchComponent } from './components/bps-select/select-search.component';\r\nimport { BpsSelectTopControlComponent } from './components/bps-select/select-top-control.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        BpsModalComponent,\r\n        BpsModalFooterDirective,\r\n        BpsTreeComponent,\r\n        BpsTreeNodeComponent,\r\n        BpsDropDownDirective,\r\n        BpsDropdownMenuComponent,\r\n        BpsDropDownADirective,\r\n        BpsTableComponent,\r\n        BpsListComponent,\r\n        BpsListItemComponent,\r\n        BpsListItemMetaComponent,\r\n        BpsTooltipDirective,\r\n        BpsToolTipComponent,\r\n        BpsPopoverDirective,\r\n        BpsPopoverComponent,\r\n        BpsComponentsLibComponent,\r\n        BpsInputGroupComponent,\r\n        BpsInputGroupSlotComponent,\r\n        BpsTextareaCountComponent,\r\n        BpsInputDirective,\r\n        BpsAutosizeDirective,\r\n        BpsOptionComponent,\r\n        BpsOptionContainerComponent,\r\n        BpsOptionGroupComponent,\r\n        BpsOptionItemComponent,\r\n        BpsOptionItemGroupComponent,\r\n        BpsSelectComponent,\r\n        BpsSelectArrowComponent,\r\n        BpsSelectClearComponent,\r\n        BpsSelectItemComponent,\r\n        BpsSelectPlaceholderComponent,\r\n        BpsSelectSearchComponent,\r\n        BpsSelectTopControlComponent,\r\n        BpsFormDirective,\r\n        BpsFormExplainComponent,\r\n        BpsFormControlComponent,\r\n        BpsFormExtraComponent,\r\n        BpsFormItemComponent,\r\n        BpsFormLabelComponent,\r\n        BpsFormSplitComponent,\r\n        BpsFormTextComponent,\r\n        BpsButtonComponent,\r\n        BpsButtonGroupComponent,\r\n        BpsSwitchComponent,\r\n        BpsCheckboxGroupComponent,\r\n        BpsCheckboxComponent,\r\n        BpsRadioComponent,\r\n        BpsRadioGroupComponent,\r\n        BpsRadioButtonDirective,\r\n        BpsCollapseComponent,\r\n        BpsCollapsePanelComponent,\r\n        BpsTableExpandablePanelComponent,\r\n        BpsConfigurationSelectorComponent,\r\n        BpsTextEditorComponent,\r\n        BpsGridComponent,\r\n        NzToCssUnitPipe,\r\n        BpsFormItemFeedbackIconComponent,\r\n        BpsDropdownMenuComponent,\r\n        BpsDropdownButtonDirective,\r\n    ],\r\n    imports: [\r\n        NzHighlightModule,\r\n        NzTreeModule,\r\n        NzModalControlServiceModule,\r\n        CommonModule,\r\n        NzAddOnModule,\r\n        NzPipesModule,\r\n        NzIconModule,\r\n        OverlayModule,\r\n        NzNoAnimationModule,\r\n        NzToolTipModule,\r\n        NzOverlayModule,\r\n        NzEmptyModule,\r\n        NzFormModule,\r\n        FormsModule,\r\n        ObserversModule,\r\n        NzWaveModule,\r\n        NzSpinModule,\r\n        NzGridModule,\r\n        NzAvatarModule,\r\n        NzTableModule,\r\n        EditorModule,\r\n        NzMenuModule,\r\n        NzResizableModule,\r\n        NzSelectModule\r\n    ],\r\n  exports: [\r\n        NzTreeModule,\r\n        BpsGridComponent,\r\n        BpsModalComponent,\r\n        BpsModalFooterDirective,\r\n        BpsTreeComponent,\r\n        BpsTreeNodeComponent,\r\n        BpsDropDownDirective,\r\n        BpsDropdownMenuComponent,\r\n        BpsDropDownADirective,\r\n        BpsConfigurationSelectorComponent,\r\n        BpsTableComponent,\r\n        BpsListComponent,\r\n        BpsListItemComponent,\r\n        BpsListItemMetaComponent,\r\n        BpsPopoverDirective,\r\n        BpsPopoverComponent,\r\n        BpsComponentsLibComponent,\r\n        BpsComponentsLibComponent,\r\n        BpsInputGroupComponent,\r\n        BpsInputDirective,\r\n        BpsInputGroupComponent,\r\n        BpsInputGroupSlotComponent,\r\n        BpsTextareaCountComponent,\r\n        BpsAutosizeDirective,\r\n        BpsOptionComponent,\r\n        BpsOptionContainerComponent,\r\n        BpsOptionGroupComponent,\r\n        BpsOptionItemComponent,\r\n        BpsOptionItemGroupComponent,\r\n        BpsSelectComponent,\r\n        BpsSelectArrowComponent,\r\n        BpsSelectClearComponent,\r\n        BpsSelectItemComponent,\r\n        BpsSelectPlaceholderComponent,\r\n        BpsSelectSearchComponent,\r\n        BpsSelectTopControlComponent,\r\n        BpsFormDirective,\r\n        NzGridModule,\r\n        BpsFormExplainComponent,\r\n        BpsFormControlComponent,\r\n        BpsFormExtraComponent,\r\n        BpsFormItemComponent,\r\n        BpsFormLabelComponent,\r\n        BpsFormSplitComponent,\r\n        BpsFormTextComponent,\r\n        BpsButtonComponent,\r\n        BpsButtonGroupComponent,\r\n        BpsSwitchComponent,\r\n        BpsCheckboxGroupComponent,\r\n        BpsCheckboxComponent,\r\n        BpsRadioComponent,\r\n        BpsRadioGroupComponent,\r\n        BpsRadioButtonDirective,\r\n        BpsCollapseComponent,\r\n        BpsCollapsePanelComponent,\r\n        BpsTooltipDirective,\r\n        BpsToolTipComponent,\r\n        BpsTableExpandablePanelComponent,\r\n        BpsTextEditorComponent,\r\n        NzFormModule,\r\n        BpsDropdownMenuComponent,\r\n        BpsDropdownButtonDirective,\r\n        NzMenuModule,\r\n        NzSelectModule\r\n    ],\r\n    providers: [\r\n        { provide: NZ_I18N, useValue: en_US }\r\n    ]\r\n})\r\nexport class BpsComponentsLibModule { }\r\n","/*\r\n * Public API Surface of bps-components-lib\r\n */\r\n\r\nexport * from './lib/bps-components-lib.service';\r\nexport * from './lib/bps-components-lib.component';\r\nexport * from './lib/bps-components-lib.module';\r\nexport * from './lib/components/bps-input/autosize.directive';\r\nexport * from './lib/components/bps-input/bps-input.directive';\r\nexport * from './lib/components/bps-input/bps-input-group.component';\r\nexport * from './lib/components/bps-input/input-group-slot.component';\r\nexport * from './lib/components/bps-input/textarea-count.component';\r\nexport * from './lib/components/bps-select/option.component';\r\nexport * from './lib/components/bps-select/option-container.component';\r\nexport * from './lib/components/bps-select/option-group.component';\r\nexport * from './lib/components/bps-select/option-item.component';\r\nexport * from './lib/components/bps-select/option-item-group.component';\r\nexport * from './lib/components/bps-select/select.component';\r\nexport * from './lib/components/bps-select/select-arrow.component';\r\nexport * from './lib/components/bps-select/select-clear.component';\r\nexport * from './lib/components/bps-select/select-item.component';\r\nexport * from './lib/components/bps-select/select-placeholder.component';\r\nexport * from './lib/components/bps-select/select-search.component';\r\nexport * from './lib/components/bps-select/select-top-control.component';\r\nexport * from './lib/components/bps-form/bps-form.directive';\r\nexport * from './lib/components/bps-form/bps-form-explain.component';\r\nexport * from './lib/components/bps-form/bps-form-control.component';\r\nexport * from './lib/components/bps-form/bps-form-extra.component';\r\nexport * from './lib/components/bps-form/bps-form-item.component';\r\nexport * from './lib/components/bps-form/bps-form-label.component';\r\nexport * from './lib/components/bps-form/bps-form-split.component';\r\nexport * from './lib/components/bps-form/bps-form-text.component';\r\nexport * from './lib/components/bps-button/bps-button.component';\r\nexport * from './lib/components/bps-button/bps-button-group.component';\r\nexport * from './lib/components/bps-switch/bps-switch.component';\r\nexport * from './lib/components/bps-checkbox/bps-checkbox.component';\r\nexport * from './lib/components/bps-checkbox/bps-checkbox-group.component';\r\nexport * from './lib/components/bps-checkbox/bps-checkbox-wrapper.component';\r\nexport * from './lib/components/bps-radio/radio-button.directive';\r\nexport * from './lib/components/bps-radio/radio-group.component';\r\nexport * from './lib/components/bps-radio/bps-radio.component';\r\nexport * from './lib/components/bps-collapse/bps-collapse-panel.component';\r\nexport * from './lib/components/bps-collapse/bps-collapse.component';\r\nexport * from './lib/components/bps-popover/bps-popover';\r\nexport * from './lib/components/bps-tooltip/tooltip';\r\nexport * from './lib/components/bps-list/bps-list-item-meta.component';\r\nexport * from './lib/components/bps-list/bps-list-item.component';\r\nexport * from './lib/components/bps-list/bps-list.component';\r\nexport * from './lib/components/bps-table/bps-table.component';\r\nexport * from './lib/components/core/interfaces/grid-config';\r\nexport * from './lib/components/bps-table-expandable-panel/bps-table-expandable-panel.component';\r\nexport * from './lib/components/bps-configuration-selector/bps-configuration-selector.component';\r\nexport * from './lib/components/bps-dropdown/bps-dropdown-a.directive';\r\nexport * from './lib/components/bps-dropdown/dropdown-menu.component';\r\nexport * from './lib/components/bps-dropdown/bps-dropdown.directive';\r\nexport * from './lib/components/bps-tree/bps-tree-node.component';\r\nexport * from './lib/components/bps-tree/bps-tree.component';\r\nexport * from './lib/components/bps-modal/bps-modal-footer.directive';\r\nexport * from './lib/components/bps-modal/bps-modal.component';\r\nexport * from './lib/components/bps-text-editor/bps-text-editor.component';\r\nexport * from './lib/components/bps-grid/bps-grid.component';\r\nexport * from './lib/components/bps-tree/tree/nz-tree-base-node';\r\nexport * from './lib/components/bps-tree/tree/nz-tree-base.definitions';\r\nexport * from './lib/components/bps-dropdown/dropdown-button.directive';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i3","_c0","i1.NzUpdateHostClassService","i2","i4.NzDomEventService","isNotNil","i2.NzRowDirective","i2.BpsFormItemComponent","i3.NzRowDirective","NZ_CONFIG_COMPONENT_NAME","i1.NzConfigService","i2.NzUpdateHostClassService","_c2","i4","i5.NzStringTemplateOutletDirective","i6","i4.NzStringTemplateOutletDirective","i5","i3.NzConfigService","_c1","NZ_CONFIG_MODULE_NAME","WithConfig","i1.NzCheckboxWrapperComponent","i2.BpsCollapseComponent","i7","i1.BpsListComponent","i1.NzTreeBaseService","i1.NzModalRef","getElementOffset","i4.BpsModalControlService","i1.BpsButtonGroupComponent","i1.BpsOptionGroupComponent","observableOf","i8","i9","i10","i11.BpsOptionContainerComponent","i12.BpsSelectArrowComponent","i13.BpsSelectClearComponent","i14.BpsSelectTopControlComponent","i15.BpsFormItemFeedbackIconComponent"],"mappings":"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"}