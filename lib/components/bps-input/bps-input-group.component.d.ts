import { FocusMonitor } from '@angular/cdk/a11y';
import { Direction, Directionality } from '@angular/cdk/bidi';
import { AfterContentInit, ChangeDetectorRef, ElementRef, OnChanges, OnDestroy, OnInit, QueryList, Renderer2, SimpleChanges, TemplateRef } from '@angular/core';
import { NzFormNoStatusService, NzFormStatusService } from 'ng-zorro-antd/core/form';
import { BooleanInput, NgClassInterface, NzSizeLDSType, NzStatus, NzValidateStatus } from 'ng-zorro-antd/core/types';
import { BpsInputDirective } from './bps-input.directive';
import * as i0 from "@angular/core";
export declare class NzInputGroupWhitSuffixOrPrefixDirective {
    elementRef: ElementRef;
    constructor(elementRef: ElementRef);
    static ɵfac: i0.ɵɵFactoryDeclaration<NzInputGroupWhitSuffixOrPrefixDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NzInputGroupWhitSuffixOrPrefixDirective, "bps-input-group[bpsSuffix], bps-input-group[bpsPrefix]", never, {}, {}, never, never, false, never>;
}
export declare class BpsInputGroupComponent implements AfterContentInit, OnChanges, OnInit, OnDestroy {
    private focusMonitor;
    private elementRef;
    private renderer;
    private cdr;
    private directionality;
    private nzFormStatusService?;
    private nzFormNoStatusService?;
    static ngAcceptInputType_bpsSearch: BooleanInput;
    static ngAcceptInputType_bpsCompact: BooleanInput;
    listOfNzInputDirective: QueryList<BpsInputDirective>;
    bpsAddOnBeforeIcon?: string | null;
    bpsAddOnAfterIcon?: string | null;
    bpsPrefixIcon?: string | null;
    bpsSuffixIcon?: string | null;
    bpsAddOnBefore?: string | TemplateRef<void>;
    bpsAddOnAfter?: string | TemplateRef<void>;
    bpsPrefix?: string | TemplateRef<void>;
    bpsStatus: NzStatus;
    bpsSuffix?: string | TemplateRef<void>;
    bpsSize: NzSizeLDSType;
    bpsSearch: boolean;
    bpsCompact: boolean;
    isLarge: boolean;
    isSmall: boolean;
    isAffix: boolean;
    isAddOn: boolean;
    isFeedback: boolean;
    focused: boolean;
    disabled: boolean;
    dir: Direction;
    prefixCls: string;
    affixStatusCls: NgClassInterface;
    groupStatusCls: NgClassInterface;
    affixInGroupStatusCls: NgClassInterface;
    status: NzValidateStatus;
    hasFeedback: boolean;
    private destroy$;
    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef, renderer: Renderer2, cdr: ChangeDetectorRef, directionality: Directionality, nzFormStatusService?: NzFormStatusService, nzFormNoStatusService?: NzFormNoStatusService);
    updateChildrenInputSize(): void;
    ngOnInit(): void;
    ngAfterContentInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    private setStatusStyles;
    static ɵfac: i0.ɵɵFactoryDeclaration<BpsInputGroupComponent, [null, null, null, null, { optional: true; }, { optional: true; }, { optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<BpsInputGroupComponent, "bps-input-group", ["bpsInputGroup"], { "bpsAddOnBeforeIcon": { "alias": "bpsAddOnBeforeIcon"; "required": false; }; "bpsAddOnAfterIcon": { "alias": "bpsAddOnAfterIcon"; "required": false; }; "bpsPrefixIcon": { "alias": "bpsPrefixIcon"; "required": false; }; "bpsSuffixIcon": { "alias": "bpsSuffixIcon"; "required": false; }; "bpsAddOnBefore": { "alias": "bpsAddOnBefore"; "required": false; }; "bpsAddOnAfter": { "alias": "bpsAddOnAfter"; "required": false; }; "bpsPrefix": { "alias": "bpsPrefix"; "required": false; }; "bpsStatus": { "alias": "bpsStatus"; "required": false; }; "bpsSuffix": { "alias": "bpsSuffix"; "required": false; }; "bpsSize": { "alias": "bpsSize"; "required": false; }; "bpsSearch": { "alias": "bpsSearch"; "required": false; }; "bpsCompact": { "alias": "bpsCompact"; "required": false; }; }, {}, ["listOfNzInputDirective"], ["*"], false, never>;
}
