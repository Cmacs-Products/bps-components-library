import { FocusMonitor } from '@angular/cdk/a11y';
import { Direction, Directionality } from '@angular/cdk/bidi';
import { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, NgZone, OnDestroy, OnInit } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { NzFormStatusService } from 'ng-zorro-antd/core/form';
import { BooleanInput, NzSafeAny, OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';
import { NzCheckboxWrapperComponent } from './bps-checkbox-wrapper.component';
import * as i0 from "@angular/core";
export type BpsCheckboxType = 'variation1' | 'variation2' | 'variation3';
export declare class BpsCheckboxComponent implements OnInit, ControlValueAccessor, OnDestroy, AfterViewInit {
    private ngZone;
    private elementRef;
    private bpsCheckboxWrapperComponent;
    private cdr;
    private focusMonitor;
    private directionality;
    bpsFormStatusService?: NzFormStatusService;
    static ngAcceptInputType_bpsAutoFocus: BooleanInput;
    static ngAcceptInputType_bpsDisabled: BooleanInput;
    static ngAcceptInputType_bpsIndeterminate: BooleanInput;
    static ngAcceptInputType_bpsChecked: BooleanInput;
    dir: Direction;
    private destroy$;
    private isbpsDisableFirstChange;
    onChange: OnChangeType;
    onTouched: OnTouchedType;
    inputElement: ElementRef<HTMLInputElement>;
    readonly bpsCheckedChange: EventEmitter<boolean>;
    bpsValue: NzSafeAny | null;
    bpsAutoFocus: boolean;
    bpsDisabled: boolean;
    bpsIndeterminate: boolean;
    bpsChecked: boolean;
    bpsId: string | null;
    bpsType: BpsCheckboxType;
    innerCheckedChange(checked: boolean): void;
    writeValue(value: boolean): void;
    registerOnChange(fn: OnChangeType): void;
    registerOnTouched(fn: OnTouchedType): void;
    setDisabledState(disabled: boolean): void;
    focus(): void;
    blur(): void;
    constructor(ngZone: NgZone, elementRef: ElementRef<HTMLElement>, bpsCheckboxWrapperComponent: NzCheckboxWrapperComponent, cdr: ChangeDetectorRef, focusMonitor: FocusMonitor, directionality: Directionality, bpsFormStatusService?: NzFormStatusService);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<BpsCheckboxComponent, [null, null, { optional: true; }, null, null, { optional: true; }, { optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<BpsCheckboxComponent, "[bps-checkbox]", ["bpsCheckbox"], { "bpsValue": { "alias": "bpsValue"; "required": false; }; "bpsAutoFocus": { "alias": "bpsAutoFocus"; "required": false; }; "bpsDisabled": { "alias": "bpsDisabled"; "required": false; }; "bpsIndeterminate": { "alias": "bpsIndeterminate"; "required": false; }; "bpsChecked": { "alias": "bpsChecked"; "required": false; }; "bpsId": { "alias": "bpsId"; "required": false; }; "bpsType": { "alias": "bpsType"; "required": false; }; }, { "bpsCheckedChange": "bpsCheckedChange"; }, never, ["*"], false, never>;
}
